{"ast":null,"code":"import * as ActionTypes from \"../ActionTypes\";\nexport const Answers = (state = {\n  isLoading: true,\n  errMess: null,\n  answers: [],\n  postFail: false,\n  postFailMess: ''\n}, action) => {\n  switch (action.type) {\n    case ActionTypes.ADD_ANSWERS:\n      return { ...state,\n        isLoading: false,\n        errMess: null,\n        answers: action.payload,\n        postFail: false,\n        postFailMess: ''\n      };\n\n    case ActionTypes.ANSWERS_FAILED:\n      return { ...state,\n        isLoading: false,\n        errMess: action.payload,\n        postFail: false,\n        postFailMess: ''\n      };\n\n    case ActionTypes.ANSWERS_LOADING:\n      return { ...state,\n        isLoading: true,\n        errMess: null,\n        answers: [],\n        postFail: false,\n        postFailMess: ''\n      };\n\n    case ActionTypes.ADD_ANSWER:\n      var answer = action.payload;\n      return { ...state,\n        answers: state.answers.concat(answer),\n        postFail: false,\n        postFailMess: ''\n      };\n\n    case ActionTypes.POST_FAIL:\n      return { ...state,\n        postFail: true,\n        postFailMess: action.payload\n      };\n\n    case ActionTypes.DELETE_ANSWER:\n      var answerId = action.payload;\n      var index = state.answers.indexOf(state.answers.filter(answer => answer._id === answerId)[0]);\n      state.answers.splice(index, 1);\n      return { ...state,\n        answers: state.answers\n      };\n\n    default:\n      return state;\n  }\n};\n_c = Answers;\nexport const userAnswers = (state = {\n  isLoading: true,\n  errMess: null,\n  answers: []\n}, action) => {\n  switch (action.type) {\n    case ActionTypes.GET_USER_ANSWERS:\n      return { ...state,\n        isLoading: false,\n        errMess: null,\n        answers: action.payload\n      };\n\n    case ActionTypes.USER_ANSWERS_LOADING:\n      return { ...state,\n        isLoading: true,\n        errMess: null,\n        answers: []\n      };\n\n    case ActionTypes.USER_ANSWERS_FAILED:\n      return { ...state,\n        isLoading: false,\n        errMess: action.payload.err,\n        answers: []\n      };\n\n    default:\n      return state;\n  }\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"Answers\");","map":{"version":3,"sources":["/home/jaskaran/Desktop/poogle/Poogle/src/redux/reducers/answers.js"],"names":["ActionTypes","Answers","state","isLoading","errMess","answers","postFail","postFailMess","action","type","ADD_ANSWERS","payload","ANSWERS_FAILED","ANSWERS_LOADING","ADD_ANSWER","answer","concat","POST_FAIL","DELETE_ANSWER","answerId","index","indexOf","filter","_id","splice","userAnswers","GET_USER_ANSWERS","USER_ANSWERS_LOADING","USER_ANSWERS_FAILED","err"],"mappings":"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","sourcesContent":["import * as ActionTypes from \"../ActionTypes\";\n\nexport const Answers = (\n\tstate = { isLoading: true, errMess: null, answers: []\n\t\t, postFail: false, postFailMess: '' \n\t},\n\taction\n) => {\n\tswitch (action.type) {\n\t\tcase ActionTypes.ADD_ANSWERS:\n\t\t\treturn {\n\n\t\t\t\t...state,\n\t\t\t\tisLoading: false,\n\t\t\t\terrMess: null,\n\t\t\t\tanswers: action.payload,\n\t\t\t\tpostFail: false, postFailMess: ''\n\t\t\t};\n\n\t\tcase ActionTypes.ANSWERS_FAILED:\n\t\t\treturn { ...state, isLoading: false, errMess: action.payload, \n\t\t\t\tpostFail: false, postFailMess: '' \n\t\t\t};\n\n\t\tcase ActionTypes.ANSWERS_LOADING:\n\t\t\treturn { ...state, isLoading: true, errMess: null, answers: [],\n\t\t\t\tpostFail: false, postFailMess: '' \n\t\t\t};\n\n\t\tcase ActionTypes.ADD_ANSWER:\n\t\t\tvar answer = action.payload;\n\t\t\treturn { ...state, answers: state.answers.concat(answer), \n\t\t\t\tpostFail: false, postFailMess: '' \n\t\t};\n\n\t\tcase ActionTypes.POST_FAIL:\n\t\t\treturn { ...state, \n\t\t\t\tpostFail: true, postFailMess: action.payload\n\t\t\t}\n\n\t\tcase ActionTypes.DELETE_ANSWER:\n\t\t\tvar answerId = action.payload;\n\t\t\tvar index = state.answers.indexOf(\n\t\t\t\tstate.answers.filter((answer) => answer._id === answerId)[0]\n\t\t\t);\n\t\t\tstate.answers.splice(index, 1);\n\t\t\treturn { ...state, answers: state.answers };\n\n\t\tdefault:\n\t\t\treturn state;\n\t}\n};\n\nexport const userAnswers = (state={isLoading: true, errMess: null, answers: []}, action)=>{\n\tswitch(action.type){\n\t\tcase ActionTypes.GET_USER_ANSWERS:\n\t\t\treturn {...state, isLoading:false, errMess:null, answers:action.payload}\n\t\tcase ActionTypes.USER_ANSWERS_LOADING:\n\t\t\treturn {...state, isLoading:true, errMess:null, answers:[]}\n\t\tcase ActionTypes.USER_ANSWERS_FAILED:\n\t\t\treturn {...state, isLoading:false, errMess:action.payload.err, answers:[]}\n\t\tdefault:\n\t\t\treturn state;\n\n\t}\n\n};"]},"metadata":{},"sourceType":"module"}