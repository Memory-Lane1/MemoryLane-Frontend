{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/jaskaran/Desktop/poogle/Poogle/src/components/add_forms/addQuestions.js\";\nimport React, { Component } from 'react';\nimport { Container, Row, Col, Button } from 'react-bootstrap';\nimport { Breadcrumb, BreadcrumbItem, Jumbotron } from \"reactstrap\";\nimport { Link } from 'react-router-dom';\nimport './add_forms.css';\nimport Form from 'react-bootstrap/Form';\nimport Select from 'react-select';\nimport ReactQuill from 'react-quill';\nimport { Quill } from 'react-quill';\nimport 'react-quill/dist/quill.snow.css';\nimport ImageCompress from 'quill-image-compress';\nimport { spaces, toolbarOptions, formats } from '../variables';\nimport { ToastContainer, toast } from 'react-toastify';\nimport { zoomOut, slideInDown, slideInUp, bounce, flipInX, zoomIn } from 'react-animations';\nimport Radium, { StyleRoot } from 'radium';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { message } from 'antd';\nQuill.register('modules/imageCompress', ImageCompress);\nconst styles = {\n  zoomIn: {\n    animation: 'x 1s',\n    animationName: Radium.keyframes(zoomIn, 'zoomIn')\n  },\n  slideInUp: {\n    animation: 'x 1s',\n    animationName: Radium.keyframes(slideInUp, 'slideInUp')\n  },\n  bounce: {\n    animation: 'x 1s',\n    animationName: Radium.keyframes(bounce, 'bounce')\n  },\n  flipInX: {\n    animation: 'x 1s',\n    animationName: Radium.keyframes(flipInX, 'flipInX')\n  }\n};\n\nclass addQuestions extends Component {\n  constructor(props) {\n    super(props);\n    this.modules = {\n      toolbar: toolbarOptions,\n      imageCompress: {\n        quality: 0.7,\n        maxWidth: 500,\n        maxHeight: 500,\n        imageType: 'image/jpeg',\n        debug: true\n      }\n    };\n\n    this.handleMultiSelectChange = category => {\n      this.setState({\n        category: category\n      });\n    };\n\n    this.notify = message => toast.warning(message);\n\n    this.notifyS = message => toast.success(message);\n\n    this.notifyF = message => toast.error(message);\n\n    this.handleSubmit = async event => {\n      event.preventDefault();\n      const isValid = this.formValidation();\n      console.log(this.state);\n\n      if (isValid) {\n        var tagNames = [];\n        var tagIds = [];\n        var len = this.state.category.length;\n        var flag = false;\n\n        for (var i = 0; i < len; i++) {\n          tagNames.push(this.state.category[i].label);\n          tagIds.push(this.state.category[i].value);\n          var interests_ = localStorage.getItem('interests');\n          if (interests_.indexOf(this.state.category[i].value) > -1) flag = true;\n        }\n\n        if (flag) {\n          const newQuestion = {\n            heading: this.state.title,\n            tagNames: tagNames,\n            tagIds: tagIds,\n            description: this.state.description,\n            author: this.props.auth.userId\n          };\n          await this.props.postQuestion(newQuestion);\n          if (this.props.questions.postFail) this.notifyF(\"Some Error occured while posting try again.\");else this.notifyS('Question posted successfully!!');\n        } else {\n          this.notify(\"Atleast one category should be in your followed spaces list . you can follow required space to add this question!!\");\n        }\n      }\n    };\n\n    this.formValidation = () => {\n      const {\n        title,\n        category,\n        description\n      } = this.state;\n      let titleError = \"\",\n          categoryError = \"\",\n          descriptionError = \"\",\n          error;\n\n      if (!title.trim()) {\n        titleError = \"Title is required\";\n        error = true;\n      }\n\n      if (!category.length) {\n        categoryError = \"You must select at least one category\";\n        error = true;\n      }\n\n      if (!description.trim() || !description.trim().length || description === \"<p><br></p>\") {\n        descriptionError = \"Description is required\";\n        error = true;\n      }\n\n      this.setState(prevState => ({\n        errors: {\n          title: titleError,\n          description: descriptionError,\n          category: categoryError\n        }\n      }));\n      return !error;\n    };\n\n    this.state = {\n      description: '',\n      title: '',\n      category: [],\n      files: [],\n      errors: {\n        description: '',\n        category: '',\n        title: ''\n      }\n    };\n    this.handleEditorChange = this.handleEditorChange.bind(this);\n    this.handleInputChange = this.handleInputChange.bind(this);\n    this.handleMultiSelectChange = this.handleMultiSelectChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleInputChange(event) {\n    const target = event.target;\n    const name = target.name;\n    this.setState({\n      [name]: event.target.value\n    });\n  }\n\n  handleEditorChange(value) {\n    this.setState({\n      description: value\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"forms__section\",\n      children: [/*#__PURE__*/_jsxDEV(Container, {\n        children: /*#__PURE__*/_jsxDEV(Col, {\n          md: 9,\n          className: \"contact__main__content\",\n          children: [/*#__PURE__*/_jsxDEV(Row, {\n            children: /*#__PURE__*/_jsxDEV(Breadcrumb, {\n              className: \"mb-4 page__navigation__breadCrump\",\n              children: [/*#__PURE__*/_jsxDEV(BreadcrumbItem, {\n                children: /*#__PURE__*/_jsxDEV(Link, {\n                  to: \"/home\",\n                  children: \"Home\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 175,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 174,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(BreadcrumbItem, {\n                active: true,\n                children: \"Add Question\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 177,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 173,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 172,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(Jumbotron, {\n              className: \"form-jumbotron\",\n              children: /*#__PURE__*/_jsxDEV(Form, {\n                children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n                  controlId: \"formBasicEmail\",\n                  children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"form__icon\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 184,\n                      columnNumber: 45\n                    }, this), \"Title\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 184,\n                    columnNumber: 33\n                  }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                    name: \"title\",\n                    className: \"form-control\",\n                    type: \"text\",\n                    value: this.state.title,\n                    placeholder: \"Enter Title\",\n                    onChange: this.handleInputChange\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 185,\n                    columnNumber: 35\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"invalid__feedback\",\n                    children: this.state.errors.title\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 186,\n                    columnNumber: 37\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 183,\n                  columnNumber: 31\n                }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n                  controlId: \"formBasicDropdown\",\n                  children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"form__icon\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 190,\n                      columnNumber: 45\n                    }, this), \"Choose Category\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 190,\n                    columnNumber: 33\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    children: /*#__PURE__*/_jsxDEV(Select, {\n                      isMulti: true,\n                      name: \"category\",\n                      options: spaces,\n                      className: \"basic-multi-select\",\n                      value: this.state.category,\n                      onChange: this.handleMultiSelectChange,\n                      classNamePrefix: \"select\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 191,\n                      columnNumber: 38\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 191,\n                    columnNumber: 33\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"invalid__feedback\",\n                    children: this.state.errors.category\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 192,\n                    columnNumber: 33\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 189,\n                  columnNumber: 31\n                }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n                  children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"form__icon\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 196,\n                      columnNumber: 45\n                    }, this), \"Describe Here\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 196,\n                    columnNumber: 33\n                  }, this), /*#__PURE__*/_jsxDEV(ReactQuill, {\n                    theme: \"snow\",\n                    value: this.state.description,\n                    onChange: this.handleEditorChange,\n                    style: {\n                      backgroundColor: 'white'\n                    },\n                    modules: this.modules,\n                    formats: formats\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 197,\n                    columnNumber: 33\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"invalid__feedback\",\n                    children: this.state.errors.description\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 199,\n                    columnNumber: 35\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 195,\n                  columnNumber: 31\n                }, this), /*#__PURE__*/_jsxDEV(Button, {\n                  onClick: this.handleSubmit,\n                  variant: \"info\",\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"fa fa-paper-plane mr-3\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 201,\n                    columnNumber: 82\n                  }, this), \"Submit\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 201,\n                  columnNumber: 31\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 182,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 181,\n              columnNumber: 27\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 180,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ToastContainer, {\n        autoClose: false\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default addQuestions;","map":{"version":3,"sources":["/home/jaskaran/Desktop/poogle/Poogle/src/components/add_forms/addQuestions.js"],"names":["React","Component","Container","Row","Col","Button","Breadcrumb","BreadcrumbItem","Jumbotron","Link","Form","Select","ReactQuill","Quill","ImageCompress","spaces","toolbarOptions","formats","ToastContainer","toast","zoomOut","slideInDown","slideInUp","bounce","flipInX","zoomIn","Radium","StyleRoot","message","register","styles","animation","animationName","keyframes","addQuestions","constructor","props","modules","toolbar","imageCompress","quality","maxWidth","maxHeight","imageType","debug","handleMultiSelectChange","category","setState","notify","warning","notifyS","success","notifyF","error","handleSubmit","event","preventDefault","isValid","formValidation","console","log","state","tagNames","tagIds","len","length","flag","i","push","label","value","interests_","localStorage","getItem","indexOf","newQuestion","heading","title","description","author","auth","userId","postQuestion","questions","postFail","titleError","categoryError","descriptionError","trim","prevState","errors","files","handleEditorChange","bind","handleInputChange","target","name","render","backgroundColor"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport {Container, Row, Col,Button} from 'react-bootstrap';\nimport { Breadcrumb, BreadcrumbItem, Jumbotron } from \"reactstrap\";\nimport {Link} from 'react-router-dom'\nimport './add_forms.css'\nimport Form from 'react-bootstrap/Form';\nimport Select from 'react-select'\nimport ReactQuill from 'react-quill';\nimport {Quill} from 'react-quill'\nimport 'react-quill/dist/quill.snow.css'; \nimport ImageCompress from 'quill-image-compress';\nimport {spaces,toolbarOptions, formats} from '../variables'; \nimport { ToastContainer, toast } from 'react-toastify';\nimport { zoomOut, slideInDown, slideInUp, bounce, flipInX, zoomIn } from 'react-animations';\nimport Radium, {StyleRoot} from 'radium';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { message } from 'antd';\nQuill.register('modules/imageCompress', ImageCompress);\n\nconst styles = {\n  zoomIn: {\n    animation: 'x 1s',\n    animationName: Radium.keyframes(zoomIn, 'zoomIn')\n  },\n  slideInUp: {\n      animation: 'x 1s',\n      animationName: Radium.keyframes(slideInUp, 'slideInUp')\n    },\n    bounce: {\n      animation: 'x 1s',\n      animationName: Radium.keyframes(bounce, 'bounce')\n    },\n    flipInX: {\n      animation: 'x 1s',\n      animationName: Radium.keyframes(flipInX, 'flipInX')\n    },\n}\n\nclass addQuestions extends Component {\n    constructor(props) {\n        super(props);\n        this.state = { \n          description: '',\n          title:'',\n          category:[],\n         files:[],\n          errors:{\n            description:'',\n            category:'',\n            title:''\n          }\n\n\n       } \n        this.handleEditorChange = this.handleEditorChange.bind(this)\n        this.handleInputChange = this.handleInputChange.bind(this)\n        this.handleMultiSelectChange = this.handleMultiSelectChange.bind(this)\n        this.handleSubmit= this.handleSubmit.bind(this)\n      }\n      modules = {\n        toolbar:toolbarOptions, \n        imageCompress: {\n          quality: 0.7,\n          maxWidth: 500,\n          maxHeight: 500, \n          imageType: 'image/jpeg', \n          debug: true\n        }\n      }\n      \n      handleInputChange(event) {\n        const target = event.target;\n        const name = target.name;\n        this.setState({\n          [name]: event.target.value\n        });\n      }\n      handleMultiSelectChange = category => {\n      this.setState({ category:category })\n      }\n      \n      handleEditorChange(value) {\n        this.setState({ description: value })\n      }\n\n      notify = (message) => toast.warning(message);\n      notifyS = (message) => toast.success(message);\n      notifyF = (message) => toast.error(message);\n\n      handleSubmit = async (event) => {\n        event.preventDefault();\n        const isValid = this.formValidation();\n        console.log(this.state);\n        \n        if(isValid){\n            \n            var tagNames = [];\n            var tagIds = [];\n            var len = this.state.category.length;\n            var flag = false;\n             for(var i=0;i<len;i++)\n            {\n              tagNames.push(this.state.category[i].label);\n              tagIds.push(this.state.category[i].value);\n          \n              var interests_ = localStorage.getItem('interests');\n              if(interests_.indexOf(this.state.category[i].value)>-1)\n                flag = true;\n            }\n\n            if(flag) {\n              const newQuestion = {\n                heading: this.state.title,\n                tagNames: tagNames,\n                tagIds: tagIds,\n                description: this.state.description,\n                author: this.props.auth.userId\n              };\n  \n              await this.props.postQuestion(newQuestion);\n              \n              if(this.props.questions.postFail)\n                this.notifyF(\"Some Error occured while posting try again.\");\n              else\n                this.notifyS('Question posted successfully!!')\n\n            }\n            else {\n              this.notify(\"Atleast one category should be in your followed spaces list . you can follow required space to add this question!!\");\n            }\n            \n        }\n      }\n      \n      formValidation = () =>{\n        const{title, category,description} = this.state;\n        let titleError=\"\", categoryError = \"\", descriptionError=\"\", error;\n        if(!title.trim()){\n            titleError = \"Title is required\";\n            error = true;            \n        }\n\n        if(!category.length){\n          categoryError = \"You must select at least one category\";\n          error = true;            \n        }\n        \n        if(!description.trim()|| !description.trim().length || description===\"<p><br></p>\"){\n          descriptionError = \"Description is required\";\n          error = true;            \n        }\n        \n        this.setState(prevState => ({\n            errors:{\n                title:titleError,\n                description: descriptionError,\n                category:categoryError\n            }\n        }))\n        \n        return !error;\n    }\n      \n      \n      \n      render() {\n        return (\n            \n            <div className=\"forms__section\">\n                <Container>\n                <Col md={9} className=\"contact__main__content\">\n                        <Row>\n                            <Breadcrumb className=\"mb-4 page__navigation__breadCrump\">\n                                <BreadcrumbItem>\n                                    <Link to=\"/home\">Home</Link>\n                                </BreadcrumbItem>\n                                <BreadcrumbItem active>Add Question</BreadcrumbItem>\n                            </Breadcrumb>\n                        </Row>\n                        <div>\n                          <Jumbotron className='form-jumbotron'>\n                            <Form>\n                              <Form.Group controlId=\"formBasicEmail\">\n                                <Form.Label><span className=\"form__icon\"></span>Title</Form.Label>\n                                  <input name=\"title\" className=\"form-control\" type=\"text\" value={this.state.title} placeholder=\"Enter Title\" onChange={this.handleInputChange} />\n                                    <div className=\"invalid__feedback\">{this.state.errors.title}</div>\n                              </Form.Group>\n\n                              <Form.Group controlId=\"formBasicDropdown\">\n                                <Form.Label><span className=\"form__icon\"></span>Choose Category</Form.Label>\n                                <div><Select isMulti name=\"category\" options={spaces} className=\"basic-multi-select\" value={this.state.category} onChange={this.handleMultiSelectChange} classNamePrefix=\"select\"/></div>\n                                <div className=\"invalid__feedback\">{this.state.errors.category}</div>\n                              </Form.Group>\n\n                              <Form.Group>\n                                <Form.Label><span className=\"form__icon\"></span>Describe Here</Form.Label>\n                                <ReactQuill theme=\"snow\"  value={this.state.description} onChange={this.handleEditorChange} \n                                  style={{backgroundColor: 'white'}} modules={this.modules } formats= {formats}/>\n                                  <div className=\"invalid__feedback\">{this.state.errors.description}</div>\n                              </Form.Group>\n                              <Button onClick={this.handleSubmit} variant=\"info\"><span className='fa fa-paper-plane mr-3' />Submit</Button>\n                            </Form>\n                          </Jumbotron>\n                        </div>\n                </Col>\n                \n                </Container>\n                <ToastContainer\n                  autoClose={false}\n                />\n          </div>\n         \n        )\n      }\n}\n\n\nexport default addQuestions;"]},"metadata":{},"sourceType":"module"}