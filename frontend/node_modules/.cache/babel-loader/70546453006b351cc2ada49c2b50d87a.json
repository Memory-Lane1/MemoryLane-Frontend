{"ast":null,"code":"import * as ActionTypes from \"../ActionTypes\";\nexport const Questions = (state = {\n  isLoading: true,\n  errMess: null,\n  questions: [],\n  postFail: false,\n  postFailMess: ''\n}, action) => {\n  switch (action.type) {\n    case ActionTypes.ADD_QUESTIONS:\n      return { ...state,\n        isLoading: false,\n        errMess: null,\n        questions: action.payload,\n        postFail: false,\n        postFailMess: ''\n      };\n\n    case ActionTypes.QUESTIONS_FAILED:\n      return { ...state,\n        isLoading: false,\n        errMess: action.payload,\n        postFail: false,\n        postFailMess: ''\n      };\n\n    case ActionTypes.QUESTIONS_LOADING:\n      return { ...state,\n        isLoading: true,\n        errMess: null,\n        questions: [],\n        postFail: false,\n        postFailMess: ''\n      };\n\n    case ActionTypes.ADD_QUESTION:\n      var question = action.payload;\n      return { ...state,\n        questions: state.questions.concat(question),\n        postFail: false,\n        postFailMess: ''\n      };\n\n    case ActionTypes.POST_FAIL:\n      return { ...state,\n        postFail: true,\n        postFailMess: action.payload\n      };\n\n    case ActionTypes.DELETE_QUESTION:\n      var questionId = action.payload;\n      var index = state.questions.indexOf(state.questions.filter(question => question._id === questionId)[0]);\n      state.questions.splice(index, 1);\n      return { ...state,\n        questions: state.questions\n      };\n\n    default:\n      return state;\n  }\n};\n_c = Questions;\nexport const userQuestions = (state = {\n  isLoading: true,\n  errMess: null,\n  questions: []\n}, action) => {\n  switch (action.type) {\n    case ActionTypes.GET_USER_QUESTIONS:\n      return { ...state,\n        isLoading: false,\n        errMess: null,\n        questions: action.payload\n      };\n\n    case ActionTypes.USER_QUESTIONS_LOADING:\n      return { ...state,\n        isLoading: true,\n        errMess: null,\n        questions: []\n      };\n\n    case ActionTypes.USER_QUESTIONS_FAILED:\n      return { ...state,\n        isLoading: false,\n        errMess: action.payload.err,\n        questions: []\n      };\n\n    default:\n      return state;\n  }\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"Questions\");","map":{"version":3,"sources":["/home/jaskaran/Desktop/Poogle/src/redux/reducers/questions.js"],"names":["ActionTypes","Questions","state","isLoading","errMess","questions","postFail","postFailMess","action","type","ADD_QUESTIONS","payload","QUESTIONS_FAILED","QUESTIONS_LOADING","ADD_QUESTION","question","concat","POST_FAIL","DELETE_QUESTION","questionId","index","indexOf","filter","_id","splice","userQuestions","GET_USER_QUESTIONS","USER_QUESTIONS_LOADING","USER_QUESTIONS_FAILED","err"],"mappings":"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","sourcesContent":["import * as ActionTypes from \"../ActionTypes\";\n\nexport const Questions = (\n\tstate = { isLoading: true, errMess: null, questions: [], postFail: false, postFailMess: '' },\n\taction\n) => {\n\tswitch (action.type) {\n\t\tcase ActionTypes.ADD_QUESTIONS:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tisLoading: false,\n\t\t\t\terrMess: null,\n\t\t\t\tquestions: action.payload,\n\t\t\t\tpostFail: false, postFailMess: ''\n\t\t\t};\n\n\t\tcase ActionTypes.QUESTIONS_FAILED:\n\t\t\treturn { ...state, isLoading: false, errMess: action.payload, postFail: false, postFailMess: ''};\n\n\t\tcase ActionTypes.QUESTIONS_LOADING:\n\t\t\treturn { ...state, isLoading: true, errMess: null, questions: [], postFail: false, postFailMess: '' };\n\n\t\tcase ActionTypes.ADD_QUESTION:\n\t\t\tvar question = action.payload;\n\t\t\treturn { ...state, questions: state.questions.concat(question), postFail: false, postFailMess: ''};\n\n\t\tcase ActionTypes.POST_FAIL:\n\t\t\treturn { ...state, postFail: true, postFailMess: action.payload}\n\t\t\n\t\tcase ActionTypes.DELETE_QUESTION: \n\t\t\tvar questionId = action.payload;\n\t\t\tvar index = state.questions.indexOf(state.questions.filter(question => question._id === questionId)[0]);\n\t\t\tstate.questions.splice(index, 1);\n\t\t\treturn {...state, questions: state.questions}\n\n\t\tdefault:\n\t\t\treturn state;\n\t}\n};\n\nexport const userQuestions = (state={isLoading: true, errMess: null, questions: []}, action)=>{\n\tswitch(action.type){\n\t\tcase ActionTypes.GET_USER_QUESTIONS:\n\t\t\treturn {...state, isLoading:false, errMess:null, questions:action.payload}\n\t\tcase ActionTypes.USER_QUESTIONS_LOADING:\n\t\t\treturn {...state, isLoading:true, errMess:null, questions:[]}\n\t\tcase ActionTypes.USER_QUESTIONS_FAILED:\n\t\t\treturn {...state, isLoading:false, errMess:action.payload.err, questions:[]}\n\t\tdefault:\n\t\t\treturn state;\n\n\t}\n\n};"]},"metadata":{},"sourceType":"module"}