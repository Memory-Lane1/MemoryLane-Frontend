{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/jaskaran/Desktop/Poogle/src/components/login_signup/login.js\";\nimport React, { Component } from 'react';\nimport { Container, Row, Col, Image } from 'react-bootstrap';\nimport { Breadcrumb, BreadcrumbItem, Button } from \"reactstrap\";\nimport Jumbotron from 'react-bootstrap/Jumbotron';\nimport Form from 'react-bootstrap/Form';\nimport { Link, Redirect } from 'react-router-dom';\nimport { AiOutlineMail } from 'react-icons/ai';\nimport { RiLockPasswordFill } from 'react-icons/ri';\nimport './login_signup.css';\nimport GoogleIcon from \"../../Images/google_color.svg\";\nimport FacebookIcon from \"../../Images/facebook_color.svg\";\nimport { signIn } from '../../redux/ActionCreators';\nimport { connect } from 'react-redux';\nimport { ToastContainer, toast } from 'react-toastify';\nimport LoginCorousel from \"./loginCorousel\";\nimport 'react-toastify/dist/ReactToastify.css';\n\nclass login extends Component {\n  constructor(props) {\n    super(props);\n\n    this.formValidation = () => {\n      const {\n        email,\n        password\n      } = this.state;\n      let emailError = \"\",\n          passwordError = \"\",\n          error;\n\n      if (!email) {\n        emailError = \"Email is required\";\n        error = true;\n      } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(email)) {\n        emailError = \"Email address is Invalid\";\n        error = true;\n      }\n\n      if (!password.trim()) {\n        passwordError = \"Password is required\";\n        error = true;\n      } else if (password.length < 5) {\n        passwordError = \"Length of password must be 5 characters or more\";\n        error = true;\n      }\n\n      this.setState(prevState => ({\n        errors: {\n          email: emailError,\n          password: passwordError\n        }\n      }));\n      return !error;\n    };\n\n    this.notifyS = message => toast.success(message);\n\n    this.notifyF = message => toast.error(message);\n\n    this.notifyI = message => toast.info(message);\n\n    this.handleSubmit = async event => {\n      event.preventDefault();\n      const isValid = this.formValidation();\n      this.setState({\n        validated: isValid\n      });\n\n      if (isValid) {\n        const {\n          email,\n          password\n        } = this.state;\n        await this.props.signIn({\n          email,\n          password\n        });\n\n        if (this.props.auth.err) {\n          this.notifyI(this.props.auth.err.message);\n          this.notifyF(\"Login Unsuccesful!!\");\n        } else {\n          this.notifyS(\"Login Succesful!!\");\n          setTimeout(() => {\n            let {\n              from\n            } = this.props.location.state || {\n              from: {\n                pathname: \"/\"\n              }\n            };\n            this.props.history.push(from.pathname);\n          }, 5000);\n        }\n      }\n\n      console.log(this.state);\n    };\n\n    this.state = {\n      passShow: \"password\",\n      email: \"\",\n      password: \"\",\n      errors: {\n        email: \"\",\n        password: \"\"\n      },\n      validated: false,\n      authFailed: false\n    };\n    this.handleInputChange = this.handleInputChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleInputChange(event) {\n    const target = event.target;\n    const name = target.name;\n    this.setState({\n      [name]: event.target.value\n    });\n  }\n\n  changePassShow() {\n    if (this.state.passShow === 'password') {\n      this.setState({\n        passShow: \"text\"\n      });\n    } else {\n      this.setState({\n        passShow: \"password\"\n      });\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"forms__section\",\n      children: [/*#__PURE__*/_jsxDEV(Container, {\n        children: /*#__PURE__*/_jsxDEV(Col, {\n          md: 12,\n          className: \"contact__main__content\",\n          children: [/*#__PURE__*/_jsxDEV(Row, {\n            children: /*#__PURE__*/_jsxDEV(Breadcrumb, {\n              className: \"mb-4 page__navigation__breadCrump\",\n              children: [/*#__PURE__*/_jsxDEV(BreadcrumbItem, {\n                children: /*#__PURE__*/_jsxDEV(Link, {\n                  to: \"/home\",\n                  children: \"Home\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 129,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 128,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(BreadcrumbItem, {\n                active: true,\n                children: \"Login\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 131,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 127,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(Row, {\n              md: 12,\n              children: [/*#__PURE__*/_jsxDEV(Col, {\n                xl: 6,\n                children: /*#__PURE__*/_jsxDEV(Jumbotron, {\n                  className: \"form__content__div form__content__div--login\",\n                  children: /*#__PURE__*/_jsxDEV(Form, {\n                    validated: this.state.validated,\n                    children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n                      controlId: \"formBasicEmail\",\n                      children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                          className: \"form__icon\",\n                          children: /*#__PURE__*/_jsxDEV(AiOutlineMail, {}, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 141,\n                            columnNumber: 78\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 141,\n                          columnNumber: 49\n                        }, this), \"Email address\"]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 141,\n                        columnNumber: 37\n                      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                        name: \"email\",\n                        className: \"form-control\",\n                        type: \"email\",\n                        value: this.state.name,\n                        placeholder: \"Enter email\",\n                        onChange: this.handleInputChange\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 142,\n                        columnNumber: 37\n                      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"invalid__feedback\",\n                        children: this.state.errors.email\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 143,\n                        columnNumber: 37\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 140,\n                      columnNumber: 33\n                    }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n                      controlId: \"formBasicTextbox\",\n                      children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                          className: \"form__icon\",\n                          children: /*#__PURE__*/_jsxDEV(RiLockPasswordFill, {}, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 147,\n                            columnNumber: 78\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 147,\n                          columnNumber: 49\n                        }, this), \"Password\"]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 147,\n                        columnNumber: 37\n                      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                        name: \"password\",\n                        type: this.state.passShow,\n                        className: \"form-control\",\n                        value: this.state.name,\n                        placeholder: \"Enter password\",\n                        onChange: this.handleInputChange\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 148,\n                        columnNumber: 37\n                      }, this), /*#__PURE__*/_jsxDEV(Link, {\n                        style: {\n                          fontSize: '0.9rem'\n                        },\n                        onClick: () => this.changePassShow(),\n                        children: this.state.passShow === \"password\" ? \"Show password\" : \"Hide password\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 149,\n                        columnNumber: 37\n                      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"invalid__feedback\",\n                        children: this.state.errors.password\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 158,\n                        columnNumber: 37\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 146,\n                      columnNumber: 33\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"form__btn\",\n                      children: /*#__PURE__*/_jsxDEV(\"button\", {\n                        className: \"btn contact__form__button\",\n                        type: \"submit\",\n                        onClick: this.handleSubmit,\n                        children: \"Submit\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 162,\n                        columnNumber: 37\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 161,\n                      columnNumber: 33\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"form__other__text\",\n                      children: [\"New user? \", /*#__PURE__*/_jsxDEV(Link, {\n                        to: \"/signup\",\n                        children: \"Sign Up\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 167,\n                        columnNumber: 47\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 166,\n                      columnNumber: 33\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 139,\n                    columnNumber: 29\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 138,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 137,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(Col, {\n                xl: 6,\n                children: /*#__PURE__*/_jsxDEV(LoginCorousel, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 176,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 175,\n                columnNumber: 25\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 135,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ToastContainer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    auth: state.auth\n  };\n};\n\nexport default connect(mapStateToProps, {\n  signIn\n})(login);","map":{"version":3,"sources":["/home/jaskaran/Desktop/Poogle/src/components/login_signup/login.js"],"names":["React","Component","Container","Row","Col","Image","Breadcrumb","BreadcrumbItem","Button","Jumbotron","Form","Link","Redirect","AiOutlineMail","RiLockPasswordFill","signIn","connect","ToastContainer","toast","LoginCorousel","login","constructor","props","formValidation","email","password","state","emailError","passwordError","error","test","trim","length","setState","prevState","errors","notifyS","message","success","notifyF","notifyI","info","handleSubmit","event","preventDefault","isValid","validated","auth","err","setTimeout","from","location","pathname","history","push","console","log","passShow","authFailed","handleInputChange","bind","target","name","value","changePassShow","render","fontSize","mapStateToProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport {Container, Row, Col, Image} from 'react-bootstrap';\nimport { Breadcrumb, BreadcrumbItem, Button } from \"reactstrap\";\nimport Jumbotron from 'react-bootstrap/Jumbotron';\nimport Form from 'react-bootstrap/Form';\nimport {Link, Redirect} from 'react-router-dom';\nimport {AiOutlineMail} from 'react-icons/ai';\nimport {RiLockPasswordFill} from 'react-icons/ri';\nimport './login_signup.css';\nimport GoogleIcon from '../../Images/google_color.svg';\nimport FacebookIcon from '../../Images/facebook_color.svg';\nimport {signIn} from '../../redux/ActionCreators';\nimport {connect} from 'react-redux';\nimport { ToastContainer, toast } from 'react-toastify';\nimport LoginCorousel from  \"./loginCorousel\";\nimport 'react-toastify/dist/ReactToastify.css';\n\nclass login extends Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            passShow: \"password\",\n            email:\"\",\n            password:\"\",\n            errors:{\n                email:\"\",\n                password:\"\"\n            },\n            validated:false,\n            authFailed: false\n        }\n        this.handleInputChange = this.handleInputChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    handleInputChange(event) {\n        const target = event.target;\n        const name = target.name;\n        this.setState({\n          [name]: event.target.value\n        });\n    }\n\n    formValidation = () =>{\n        const{email, password} = this.state;\n        let emailError=\"\", passwordError = \"\", error;\n        if(!email){\n            emailError = \"Email is required\";\n            error = true;            \n        }\n        else if(!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(email))\n        {\n            emailError = \"Email address is Invalid\";\n            error= true;\n        }\n        if(!password.trim())\n        {\n            passwordError=\"Password is required\"\n            error= true;\n        }\n        else if(password.length<5)\n        {\n            passwordError=\"Length of password must be 5 characters or more\"\n            error= true;\n        }\n        \n        this.setState(prevState => ({\n            errors:{\n                email:emailError,\n                password: passwordError\n            }\n        }))\n        \n        return !error;\n    }\n\n\n    notifyS = (message) => toast.success(message);\n    notifyF = (message) => toast.error(message);\n    notifyI = (message) => toast.info(message);\n\n\n    handleSubmit = async (event) => {\n        event.preventDefault();\n        const isValid = this.formValidation();\n        this.setState({\n            validated:isValid\n        })\n        if(isValid){\n            const{email, password} = this.state;\n            await this.props.signIn({email, password});\n\n            if(this.props.auth.err)\n            {\n                this.notifyI(this.props.auth.err.message);\n                this.notifyF(\"Login Unsuccesful!!\");\n            }    \n            else \n            {\n                this.notifyS(\"Login Succesful!!\")\n                setTimeout(() => {\n                    let { from } = this.props.location.state || { from: { pathname: \"/\" } };\n                    this.props.history.push(from.pathname);\n                }, 5000);\n\n            }   \n        }\n        console.log(this.state);\n    }\n\n    changePassShow(){\n        if(this.state.passShow==='password'){\n            this.setState({passShow: \"text\"});\n        }\n        else{\n            this.setState({passShow: \"password\"});\n        }\n    }\n\n    render() {\n\n        return (\n            <div className=\"forms__section\">\n                <Container>\n                    <Col md={12} className=\"contact__main__content\">\n                        <Row>\n                            <Breadcrumb className=\"mb-4 page__navigation__breadCrump\">\n                                <BreadcrumbItem>\n                                    <Link to=\"/home\">Home</Link>\n                                </BreadcrumbItem>\n                                <BreadcrumbItem active>Login</BreadcrumbItem>\n                            </Breadcrumb>            \n                        </Row>\n                        <div>\n                        <Row md={12}>\n                        \n                        <Col xl={6}>\n                        <Jumbotron className=\"form__content__div form__content__div--login\">\n                            <Form validated={this.state.validated}>\n                                <Form.Group controlId=\"formBasicEmail\">\n                                    <Form.Label><span className=\"form__icon\"><AiOutlineMail/></span>Email address</Form.Label>\n                                    <input name=\"email\" className=\"form-control\" type=\"email\" value={this.state.name} placeholder=\"Enter email\" onChange={this.handleInputChange} />\n                                    <div className=\"invalid__feedback\">{this.state.errors.email}</div>\n                                </Form.Group>\n\n                                <Form.Group controlId=\"formBasicTextbox\">\n                                    <Form.Label><span className=\"form__icon\"><RiLockPasswordFill/></span>Password</Form.Label>\n                                    <input name=\"password\"  type={this.state.passShow} className=\"form-control\"  value={this.state.name} placeholder=\"Enter password\" onChange={this.handleInputChange} />\n                                    <Link style={{fontSize: '0.9rem'}} onClick={() => this.changePassShow()}>\n                                        {\n                                            this.state.passShow === \"password\"\n                                            ?\n                                            \"Show password\"\n                                            :\n                                            \"Hide password\"\n                                        }\n                                    </Link>\n                                    <div className=\"invalid__feedback\">{this.state.errors.password}</div>\n                                </Form.Group>\n\n                                <div className=\"form__btn\">\n                                    <button className=\"btn contact__form__button\" type=\"submit\" onClick={this.handleSubmit}>\n                                        Submit\n                                    </button>\n                                </div>\n                                <div className=\"form__other__text\">\n                                    New user? <Link to=\"/signup\">Sign Up</Link>\n                                </div>\n\n\n                            </Form>\n                    \n                        </Jumbotron>\n                        </Col>\n                        <Col xl={6}>\n                        <LoginCorousel/>\n                        </Col>\n                        </Row>\n                        </div>\n                    </Col>\n                </Container>\n                <ToastContainer\n                />\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state)=> {\n    return {auth: state.auth};\n}\n\nexport default connect(mapStateToProps,{signIn})(login);\n"]},"metadata":{},"sourceType":"module"}