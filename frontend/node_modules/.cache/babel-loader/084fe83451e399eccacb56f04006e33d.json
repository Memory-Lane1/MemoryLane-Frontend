{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/jaskaran/Desktop/Poogle/src/components/all-category/all-category.js\";\nimport React, { Component } from \"react\";\nimport questionMan from \"../../Images/questionMan3.jpg\";\nimport { Row, Col, Image } from \"react-bootstrap\";\nimport { ListGroup, List, ListGroupItemHeading, ListGroupItemText, ListGroupItem, Card, CardBody, CardTitle, CardSubtitle, Badge, Nav, NavItem, NavLink, Button, Jumbotron, Carousel, CarouselItem, CarouselControl, CarouselIndicators, CarouselCaption } from \"reactstrap\";\nimport { Link } from \"react-router-dom\";\nimport Loading from \"../loading\";\nimport { baseUrl } from \"../../shared/baseUrl\";\nimport \"../followed-spaces/Spaces.css\";\nimport \"./all-category.css\";\nimport \"../all_ques_page/questions.css\";\n\nconst RenderTags = ({\n  question\n}) => question.tagNames.map(tag => {\n  return /*#__PURE__*/_jsxDEV(Badge, {\n    pill: true,\n    className: \"tag\",\n    children: tag\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 7\n  }, this);\n});\n\n_c = RenderTags;\n\nasync function viewAdd(views, postReaction, question, user) {\n  if (views && views.length && views.filter(v => v.user === user)[0]) {\n    console.log(\"another view\");\n  } else {\n    var reac = {\n      user: user,\n      question: question,\n      category: \"View\"\n    };\n    await postReaction(reac);\n  }\n}\n\nfunction RenderMenuItem({\n  question,\n  spaceId,\n  class_Name,\n  onClick,\n  auth,\n  deleteQuestion,\n  answers,\n  reactions,\n  postReaction,\n  filter\n}) {\n  //var ans = answers.filter(a => a.question === question._id);\n  var ansCount = answers.filter(a => a.question === question._id).length;\n  var uvotesCount = reactions.filter(r => r.category === \"UpVote\").filter(r => r.question === question._id).length;\n  var dvotesCount = reactions.filter(r => r.category === \"DownVote\").filter(r => r.question === question._id).length;\n  var views = reactions.filter(r => r.category === \"View\").filter(r => r.question === question._id);\n  var viewsCount = views.length;\n\n  if (filter === \"Unanswered\") {\n    if (ansCount === 0) {\n      return /*#__PURE__*/_jsxDEV(ListGroup, {\n        className: \"container question-container\",\n        children: /*#__PURE__*/_jsxDEV(ListGroupItem, {\n          className: class_Name + \" list-item-style\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"row\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-12 col-sm-8\",\n              children: [/*#__PURE__*/_jsxDEV(ListGroupItemHeading, {\n                className: \"question-heading\",\n                children: [/*#__PURE__*/_jsxDEV(Link, {\n                  className: \"question-heading\",\n                  to: `/question-${question._id}-${question.heading}`,\n                  onClick: () => viewAdd(views, postReaction, question._id, auth.userId),\n                  children: question.heading\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 88,\n                  columnNumber: 19\n                }, this), auth.userId === question.author._id ? /*#__PURE__*/_jsxDEV(Button, {\n                  color: \"danger\",\n                  style: {\n                    marginTop: 6\n                  },\n                  onClick: () => deleteQuestion(question._id),\n                  children: /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"fa fa-trash\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 103,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 98,\n                  columnNumber: 21\n                }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 87,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(RenderTags, {\n                question: question\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 109,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(ListGroupItemText, {\n                className: \"question-text\",\n                children: [\"Posted by :- \", question.author.user_name]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 110,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(ListGroupItemText, {\n                className: \"question-text\",\n                children: [\"Posted at :-\", \" \", new Intl.DateTimeFormat(\"en-US\", {\n                  year: \"numeric\",\n                  month: \"short\",\n                  day: \"2-digit\"\n                }).format(new Date(Date.parse(question.createdAt)))]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 113,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-12 col-sm-4\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"prop-div\",\n                children: [/*#__PURE__*/_jsxDEV(Badge, {\n                  className: \"prop\",\n                  color: \"light\",\n                  children: viewsCount\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 124,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: \"views\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 127,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 123,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"prop-div\",\n                children: [/*#__PURE__*/_jsxDEV(Badge, {\n                  className: \"prop\",\n                  color: \"light\",\n                  children: ansCount\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 130,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: \"answers\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 133,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 129,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"prop-div\",\n                children: [/*#__PURE__*/_jsxDEV(Badge, {\n                  className: \"prop\",\n                  color: \"light\",\n                  children: uvotesCount - dvotesCount\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 136,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: \"votes\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 139,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 135,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 122,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this);\n    } else return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n  } else {\n    return /*#__PURE__*/_jsxDEV(ListGroup, {\n      className: \"container question-container\",\n      children: /*#__PURE__*/_jsxDEV(ListGroupItem, {\n        className: class_Name + \" list-item-style\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-12 col-sm-8\",\n            children: [/*#__PURE__*/_jsxDEV(ListGroupItemHeading, {\n              className: \"question-heading\",\n              children: [/*#__PURE__*/_jsxDEV(Link, {\n                className: \"question-heading\",\n                to: `/question-${question._id}-${question.heading}`,\n                onClick: () => viewAdd(views, postReaction, question._id, auth.userId),\n                children: question.heading\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 154,\n                columnNumber: 17\n              }, this), auth.userId === question.author._id ? /*#__PURE__*/_jsxDEV(Button, {\n                color: \"danger\",\n                onClick: () => deleteQuestion(question._id),\n                children: /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"fa fa-lg fa-trash\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 168,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 164,\n                columnNumber: 19\n              }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 153,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(RenderTags, {\n              question: question\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 174,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(ListGroupItemText, {\n              className: \"question-text\",\n              children: [\"Posted by :- \", question.author.user_name]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 175,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(ListGroupItemText, {\n              className: \"question-text\",\n              children: [\"Posted at :-\", \" \", new Intl.DateTimeFormat(\"en-US\", {\n                year: \"numeric\",\n                month: \"short\",\n                day: \"2-digit\"\n              }).format(new Date(Date.parse(question.createdAt)))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 178,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-12 col-sm-4\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"prop-div\",\n              children: [/*#__PURE__*/_jsxDEV(Badge, {\n                className: \"prop\",\n                color: \"light\",\n                children: viewsCount\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 189,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: \"views\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 192,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 188,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"prop-div\",\n              children: [/*#__PURE__*/_jsxDEV(Badge, {\n                className: \"prop\",\n                color: \"light\",\n                children: ansCount\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 195,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: \"answers\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 198,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 194,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"prop-div\",\n              children: [/*#__PURE__*/_jsxDEV(Badge, {\n                className: \"prop\",\n                color: \"light\",\n                children: uvotesCount - dvotesCount\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 201,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: \"votes\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 204,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 200,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 187,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 7\n    }, this);\n  }\n}\n\n_c2 = RenderMenuItem;\n\nclass AllCategory extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      filter: this.props.filter,\n      latestActive: true,\n      votesActive: false,\n      unansweredActive: false,\n      suggetsedActive: false,\n      viewActive: false\n    };\n  }\n\n  onLatestSelect() {\n    this.setState({\n      filter: \"Latest\",\n      latestActive: true,\n      votesActive: false,\n      unansweredActive: false,\n      suggetsedActive: false\n    });\n  }\n\n  onVotesSelect() {\n    this.setState({\n      filter: \"Votes\",\n      latestActive: false,\n      votesActive: true,\n      unansweredActive: false,\n      suggetsedActive: false\n    });\n  }\n\n  onUnansweredSelect() {\n    this.setState({\n      filter: \"Unanswered\",\n      latestActive: false,\n      votesActive: false,\n      unansweredActive: true,\n      suggetsedActive: false\n    });\n  }\n\n  onViewsSelect() {\n    this.setState({\n      filter: \"Views\",\n      latestActive: false,\n      votesActive: false,\n      unansweredActive: false,\n      suggetsedActive: false,\n      viewActive: true\n    });\n  }\n\n  render() {\n    const voteCount = (reactions, question) => {\n      var uvotesCount = reactions.filter(r => r.category === \"UpVote\");\n      uvotesCount = uvotesCount.length ? uvotesCount.filter(r => r.question === question._id).length : 0;\n      var dvotesCount = reactions.filter(r => r.category === \"DownVote\");\n      dvotesCount = dvotesCount.length ? dvotesCount.filter(r => r.question === question._id).length : 0;\n      return uvotesCount - dvotesCount;\n    };\n\n    const viewCount = (reactions, question) => {\n      var uvotesCount = reactions.filter(r => r.category === \"View\");\n      uvotesCount = uvotesCount.length ? uvotesCount.filter(r => r.question === question._id).length : 0;\n      return uvotesCount;\n    };\n\n    var count = -1;\n    const MenuDate = this.props.questions.length ? this.props.questions.sort((a, b) => b.dateNum - a.dateNum).map(question => {\n      count += 1;\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-12\",\n        children: /*#__PURE__*/_jsxDEV(RenderMenuItem, {\n          question: question,\n          class_Name: count % 2 == 0 ? \"questionEven\" : \"questionOdd\",\n          onClick: this.props.onClick,\n          auth: this.props.auth,\n          deleteQuestion: this.props.deleteQuestion,\n          answers: this.props.answers,\n          reactions: this.props.reactions,\n          postReaction: this.props.postReaction,\n          filter: this.state.filter\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 299,\n          columnNumber: 13\n        }, this)\n      }, question.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 298,\n        columnNumber: 11\n      }, this);\n    }) : /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"info-text\",\n      children: \"No Questions Matched your interests and query\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 314,\n      columnNumber: 7\n    }, this);\n    const MenuVotes = this.props.questions.length ? this.props.questions.sort((a, b) => voteCount(this.props.reactions, b) - voteCount(this.props.reactions, a)).map(question => {\n      count += 1;\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-12\",\n        children: /*#__PURE__*/_jsxDEV(RenderMenuItem, {\n          question: question,\n          class_Name: count % 2 == 0 ? \"questionEven\" : \"questionOdd\",\n          onClick: this.props.onClick,\n          auth: this.props.auth,\n          deleteQuestion: this.props.deleteQuestion,\n          answers: this.props.answers,\n          reactions: this.props.reactions,\n          postReaction: this.props.postReaction,\n          filter: this.state.filter\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 326,\n          columnNumber: 13\n        }, this)\n      }, question.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 325,\n        columnNumber: 11\n      }, this);\n    }) : /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"info-text\",\n      children: \"No Questions Matched your interests and query\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 341,\n      columnNumber: 7\n    }, this);\n    const MenuViews = this.props.questions.length ? this.props.questions.sort((a, b) => viewCount(this.props.reactions, b) - viewCount(this.props.reactions, a)).map(question => {\n      count += 1;\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-12\",\n        children: /*#__PURE__*/_jsxDEV(RenderMenuItem, {\n          question: question,\n          class_Name: count % 2 == 0 ? \"questionEven\" : \"questionOdd\",\n          onClick: this.props.onClick,\n          auth: this.props.auth,\n          deleteQuestion: this.props.deleteQuestion,\n          answers: this.props.answers,\n          reactions: this.props.reactions,\n          postReaction: this.props.postReaction,\n          filter: this.state.filter\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 353,\n          columnNumber: 13\n        }, this)\n      }, question.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 352,\n        columnNumber: 11\n      }, this);\n    }) : /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"info-text\",\n      children: \"No Questions Matched your interests and query\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 368,\n      columnNumber: 7\n    }, this);\n    const MenuUnanswered = this.props.questions.length ? this.props.questions.map(question => {\n      count += 1;\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-12\",\n        children: /*#__PURE__*/_jsxDEV(RenderMenuItem, {\n          question: question,\n          class_Name: count % 2 == 0 ? \"questionEven\" : \"questionOdd\",\n          onClick: this.props.onClick,\n          auth: this.props.auth,\n          deleteQuestion: this.props.deleteQuestion,\n          answers: this.props.answers,\n          reactions: this.props.reactions,\n          postReaction: this.props.postReaction,\n          filter: this.state.filter\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 374,\n          columnNumber: 11\n        }, this)\n      }, question.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 373,\n        columnNumber: 9\n      }, this);\n    }) : /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"info-text\",\n      children: \"No Questions Matched your interests and query\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 389,\n      columnNumber: 7\n    }, this);\n\n    if (this.props.isLoading || this.props.answersIsLoading || this.props.reactionsIsLoading) {\n      return /*#__PURE__*/_jsxDEV(Loading, {\n        type: \"spokes\",\n        color: \"grey\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 396,\n        columnNumber: 14\n      }, this);\n    } else if (this.props.errMess || this.props.answersErrMess || this.props.reactionsErrMess) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container spaces\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-12\",\n            children: /*#__PURE__*/_jsxDEV(\"h4\", {\n              children: this.props.errMess || this.props.answersErrMess || this.props.reactionsErrMess\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 406,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 405,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 404,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 403,\n        columnNumber: 9\n      }, this);\n    } else if (this.props.questions) {\n      var renderQuestions;\n\n      if (this.state.filter === \"Latest\") {\n        renderQuestions = MenuDate;\n      } else if (this.state.filter === \"Votes\") {\n        renderQuestions = MenuVotes;\n      } else if (this.state.filter === \"Unanswered\") renderQuestions = MenuUnanswered;else if (this.state.filter === \"Views\") renderQuestions = MenuViews;\n\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"section\", {\n            className: \"new_section\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"container col-12 home-questions\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"row\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"container category-div \",\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"row ml-1 mt-2 mr-1\",\n                    children: /*#__PURE__*/_jsxDEV(Nav, {\n                      className: \"col-12 \",\n                      tabs: true,\n                      children: [/*#__PURE__*/_jsxDEV(NavItem, {\n                        className: \"mb-4 filters\",\n                        children: /*#__PURE__*/_jsxDEV(NavLink, {\n                          href: \"#\",\n                          active: this.state.filter === \"Latest\" ? true : false,\n                          onClick: () => this.onLatestSelect(),\n                          children: \"Latest\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 432,\n                          columnNumber: 27\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 431,\n                        columnNumber: 25\n                      }, this), /*#__PURE__*/_jsxDEV(NavItem, {\n                        className: \"mb-4 filters\",\n                        children: /*#__PURE__*/_jsxDEV(NavLink, {\n                          href: \"#\",\n                          active: this.state.filter === \"Votes\" ? true : false,\n                          onClick: () => this.onVotesSelect(),\n                          children: \"Votes\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 443,\n                          columnNumber: 27\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 442,\n                        columnNumber: 25\n                      }, this), /*#__PURE__*/_jsxDEV(NavItem, {\n                        className: \"mb-4 filters\",\n                        children: /*#__PURE__*/_jsxDEV(NavLink, {\n                          href: \"#\",\n                          active: this.state.filter === \"Views\" ? true : false,\n                          onClick: () => this.onViewsSelect(),\n                          children: \"Views\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 454,\n                          columnNumber: 27\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 453,\n                        columnNumber: 25\n                      }, this), /*#__PURE__*/_jsxDEV(NavItem, {\n                        className: \"mb-4 filters\",\n                        children: /*#__PURE__*/_jsxDEV(NavLink, {\n                          href: \"#\",\n                          active: this.state.filter === \"Unanswered\" ? true : false,\n                          onClick: () => this.onUnansweredSelect(),\n                          children: \"Unanswered\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 465,\n                          columnNumber: 27\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 464,\n                        columnNumber: 25\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 430,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 429,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 428,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 427,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                id: \"all-questions-id\",\n                className: \"row mt-4 justify-content-center\",\n                children: renderQuestions\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 479,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 426,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 425,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 424,\n          columnNumber: 11\n        }, this)\n      }, void 0, false);\n    }\n  }\n\n}\n\nexport default AllCategory;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"RenderTags\");\n$RefreshReg$(_c2, \"RenderMenuItem\");","map":{"version":3,"sources":["/home/jaskaran/Desktop/Poogle/src/components/all-category/all-category.js"],"names":["React","Component","questionMan","Row","Col","Image","ListGroup","List","ListGroupItemHeading","ListGroupItemText","ListGroupItem","Card","CardBody","CardTitle","CardSubtitle","Badge","Nav","NavItem","NavLink","Button","Jumbotron","Carousel","CarouselItem","CarouselControl","CarouselIndicators","CarouselCaption","Link","Loading","baseUrl","RenderTags","question","tagNames","map","tag","viewAdd","views","postReaction","user","length","filter","v","console","log","reac","category","RenderMenuItem","spaceId","class_Name","onClick","auth","deleteQuestion","answers","reactions","ansCount","a","_id","uvotesCount","r","dvotesCount","viewsCount","heading","userId","author","marginTop","user_name","Intl","DateTimeFormat","year","month","day","format","Date","parse","createdAt","AllCategory","constructor","props","state","latestActive","votesActive","unansweredActive","suggetsedActive","viewActive","onLatestSelect","setState","onVotesSelect","onUnansweredSelect","onViewsSelect","render","voteCount","viewCount","count","MenuDate","questions","sort","b","dateNum","id","MenuVotes","MenuViews","MenuUnanswered","isLoading","answersIsLoading","reactionsIsLoading","errMess","answersErrMess","reactionsErrMess","renderQuestions"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport questionMan from \"../../Images/questionMan3.jpg\";\nimport { Row, Col, Image } from \"react-bootstrap\";\nimport {\n  ListGroup,\n  List,\n  ListGroupItemHeading,\n  ListGroupItemText,\n  ListGroupItem,\n  Card,\n  CardBody,\n  CardTitle,\n  CardSubtitle,\n  Badge,\n  Nav,\n  NavItem,\n  NavLink,\n  Button,\n  Jumbotron,\n  Carousel,\n  CarouselItem,\n  CarouselControl,\n  CarouselIndicators,\n  CarouselCaption,\n} from \"reactstrap\";\nimport { Link } from \"react-router-dom\";\nimport Loading from \"../loading\";\nimport { baseUrl } from \"../../shared/baseUrl\";\nimport \"../followed-spaces/Spaces.css\";\nimport \"./all-category.css\";\nimport \"../all_ques_page/questions.css\";\n\nconst RenderTags = ({ question }) =>\n  question.tagNames.map((tag) => {\n    return (\n      <Badge pill className=\"tag\">\n        {tag}\n      </Badge>\n    );\n  });\n\nasync function viewAdd(views, postReaction, question, user) {\n  if (views && views.length && views.filter((v) => v.user === user)[0]) {\n    console.log(\"another view\");\n  } else {\n    var reac = {\n      user: user,\n      question: question,\n      category: \"View\",\n    };\n    await postReaction(reac);\n  }\n}\n\nfunction RenderMenuItem({\n  question,\n  spaceId,\n  class_Name,\n  onClick,\n  auth,\n  deleteQuestion,\n  answers,\n  reactions,\n  postReaction,\n  filter,\n}) {\n  //var ans = answers.filter(a => a.question === question._id);\n  var ansCount = answers.filter((a) => a.question === question._id).length;\n  var uvotesCount = reactions\n    .filter((r) => r.category === \"UpVote\")\n    .filter((r) => r.question === question._id).length;\n  var dvotesCount = reactions\n    .filter((r) => r.category === \"DownVote\")\n    .filter((r) => r.question === question._id).length;\n  var views = reactions\n    .filter((r) => r.category === \"View\")\n    .filter((r) => r.question === question._id);\n  var viewsCount = views.length;\n\n  if (filter === \"Unanswered\") {\n    if (ansCount === 0) {\n      return (\n        <ListGroup className=\"container question-container\">\n          <ListGroupItem className={class_Name + \" list-item-style\"}>\n            <div className=\"row\">\n              <div className=\"col-12 col-sm-8\">\n                <ListGroupItemHeading className=\"question-heading\">\n                  <Link\n                    className=\"question-heading\"\n                    to={`/question-${question._id}-${question.heading}`}\n                    onClick={() =>\n                      viewAdd(views, postReaction, question._id, auth.userId)\n                    }\n                  >\n                    {question.heading}\n                  </Link>\n                  {auth.userId === question.author._id ? (\n                    <Button\n                      color=\"danger\"\n                      style={{ marginTop: 6 }}\n                      onClick={() => deleteQuestion(question._id)}\n                    >\n                      <span className=\"fa fa-trash\"></span>\n                    </Button>\n                  ) : (\n                    <></>\n                  )}\n                </ListGroupItemHeading>\n                <RenderTags question={question} />\n                <ListGroupItemText className=\"question-text\">\n                  Posted by :- {question.author.user_name}\n                </ListGroupItemText>\n                <ListGroupItemText className=\"question-text\">\n                  Posted at :-{\" \"}\n                  {new Intl.DateTimeFormat(\"en-US\", {\n                    year: \"numeric\",\n                    month: \"short\",\n                    day: \"2-digit\",\n                  }).format(new Date(Date.parse(question.createdAt)))}\n                </ListGroupItemText>\n              </div>\n              <div className=\"col-12 col-sm-4\">\n                <div className=\"prop-div\">\n                  <Badge className=\"prop\" color=\"light\">\n                    {viewsCount}\n                  </Badge>\n                  <p>views</p>\n                </div>\n                <div className=\"prop-div\">\n                  <Badge className=\"prop\" color=\"light\">\n                    {ansCount}\n                  </Badge>\n                  <p>answers</p>\n                </div>\n                <div className=\"prop-div\">\n                  <Badge className=\"prop\" color=\"light\">\n                    {uvotesCount - dvotesCount}\n                  </Badge>\n                  <p>votes</p>\n                </div>\n              </div>\n            </div>\n          </ListGroupItem>\n        </ListGroup>\n      );\n    } else return <></>;\n  } else {\n    return (\n      <ListGroup className=\"container question-container\">\n        <ListGroupItem className={class_Name + \" list-item-style\"}>\n          <div className=\"row\">\n            <div className=\"col-12 col-sm-8\">\n              <ListGroupItemHeading className=\"question-heading\">\n                <Link\n                  className=\"question-heading\"\n                  to={`/question-${question._id}-${question.heading}`}\n                  onClick={() =>\n                    viewAdd(views, postReaction, question._id, auth.userId)\n                  }\n                >\n                  {question.heading}\n                </Link>\n                {auth.userId === question.author._id ? (\n                  <Button\n                    color=\"danger\"\n                    onClick={() => deleteQuestion(question._id)}\n                  >\n                    <span className=\"fa fa-lg fa-trash\"></span>\n                  </Button>\n                ) : (\n                  <></>\n                )}\n              </ListGroupItemHeading>\n              <RenderTags question={question} />\n              <ListGroupItemText className=\"question-text\">\n                Posted by :- {question.author.user_name}\n              </ListGroupItemText>\n              <ListGroupItemText className=\"question-text\">\n                Posted at :-{\" \"}\n                {new Intl.DateTimeFormat(\"en-US\", {\n                  year: \"numeric\",\n                  month: \"short\",\n                  day: \"2-digit\",\n                }).format(new Date(Date.parse(question.createdAt)))}\n              </ListGroupItemText>\n            </div>\n            <div className=\"col-12 col-sm-4\">\n              <div className=\"prop-div\">\n                <Badge className=\"prop\" color=\"light\">\n                  {viewsCount}\n                </Badge>\n                <p>views</p>\n              </div>\n              <div className=\"prop-div\">\n                <Badge className=\"prop\" color=\"light\">\n                  {ansCount}\n                </Badge>\n                <p>answers</p>\n              </div>\n              <div className=\"prop-div\">\n                <Badge className=\"prop\" color=\"light\">\n                  {uvotesCount - dvotesCount}\n                </Badge>\n                <p>votes</p>\n              </div>\n            </div>\n          </div>\n        </ListGroupItem>\n      </ListGroup>\n    );\n  }\n}\n\nclass AllCategory extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      filter: this.props.filter,\n      latestActive: true,\n      votesActive: false,\n      unansweredActive: false,\n      suggetsedActive: false,\n      viewActive: false,\n    };\n  }\n\n  onLatestSelect() {\n    this.setState({\n      filter: \"Latest\",\n      latestActive: true,\n      votesActive: false,\n      unansweredActive: false,\n      suggetsedActive: false,\n    });\n  }\n\n  onVotesSelect() {\n    this.setState({\n      filter: \"Votes\",\n      latestActive: false,\n      votesActive: true,\n      unansweredActive: false,\n      suggetsedActive: false,\n    });\n  }\n\n  onUnansweredSelect() {\n    this.setState({\n      filter: \"Unanswered\",\n      latestActive: false,\n      votesActive: false,\n      unansweredActive: true,\n      suggetsedActive: false,\n    });\n  }\n\n  onViewsSelect() {\n    this.setState({\n      filter: \"Views\",\n      latestActive: false,\n      votesActive: false,\n      unansweredActive: false,\n      suggetsedActive: false,\n      viewActive: true,\n    });\n  }\n\n  render() {\n    const voteCount = (reactions, question) => {\n      var uvotesCount = reactions.filter((r) => r.category === \"UpVote\");\n      uvotesCount = uvotesCount.length\n        ? uvotesCount.filter((r) => r.question === question._id).length\n        : 0;\n      var dvotesCount = reactions.filter((r) => r.category === \"DownVote\");\n      dvotesCount = dvotesCount.length\n        ? dvotesCount.filter((r) => r.question === question._id).length\n        : 0;\n\n      return uvotesCount - dvotesCount;\n    };\n\n    const viewCount = (reactions, question) => {\n      var uvotesCount = reactions.filter((r) => r.category === \"View\");\n      uvotesCount = uvotesCount.length\n        ? uvotesCount.filter((r) => r.question === question._id).length\n        : 0;\n\n      return uvotesCount;\n    };\n\n    var count = -1;\n    const MenuDate = this.props.questions.length ? this.props.questions\n      .sort((a, b) => b.dateNum - a.dateNum)\n      .map((question) => {\n        count += 1;\n        return (\n          <div className=\"col-12\" key={question.id}>\n            <RenderMenuItem\n              question={question}\n              class_Name={count % 2 == 0 ? \"questionEven\" : \"questionOdd\"}\n              onClick={this.props.onClick}\n              auth={this.props.auth}\n              deleteQuestion={this.props.deleteQuestion}\n              answers={this.props.answers}\n              reactions={this.props.reactions}\n              postReaction={this.props.postReaction}\n              filter={this.state.filter}\n            />\n          </div>\n        );\n      })\n      :\n      <p className='info-text'>No Questions Matched your interests and query</p>\n\n    const MenuVotes = this.props.questions.length ? this.props.questions\n      .sort(\n        (a, b) =>\n          voteCount(this.props.reactions, b) -\n          voteCount(this.props.reactions, a)\n      )\n      .map((question) => {\n        count += 1;\n        return (\n          <div className=\"col-12\" key={question.id}>\n            <RenderMenuItem\n              question={question}\n              class_Name={count % 2 == 0 ? \"questionEven\" : \"questionOdd\"}\n              onClick={this.props.onClick}\n              auth={this.props.auth}\n              deleteQuestion={this.props.deleteQuestion}\n              answers={this.props.answers}\n              reactions={this.props.reactions}\n              postReaction={this.props.postReaction}\n              filter={this.state.filter}\n            />\n          </div>\n        );\n      })\n      :\n      <p className='info-text'>No Questions Matched your interests and query</p>\n\n    const MenuViews = this.props.questions.length ? this.props.questions\n      .sort(\n        (a, b) =>\n          viewCount(this.props.reactions, b) -\n          viewCount(this.props.reactions, a)\n      )\n      .map((question) => {\n        count += 1;\n        return (\n          <div className=\"col-12\" key={question.id}>\n            <RenderMenuItem\n              question={question}\n              class_Name={count % 2 == 0 ? \"questionEven\" : \"questionOdd\"}\n              onClick={this.props.onClick}\n              auth={this.props.auth}\n              deleteQuestion={this.props.deleteQuestion}\n              answers={this.props.answers}\n              reactions={this.props.reactions}\n              postReaction={this.props.postReaction}\n              filter={this.state.filter}\n            />\n          </div>\n        );\n      })\n      :\n      <p className='info-text'>No Questions Matched your interests and query</p>\n\n    const MenuUnanswered = this.props.questions.length ? this.props.questions.map((question) => {\n      count += 1;\n      return (\n        <div className=\"col-12\" key={question.id}>\n          <RenderMenuItem\n            question={question}\n            class_Name={count % 2 == 0 ? \"questionEven\" : \"questionOdd\"}\n            onClick={this.props.onClick}\n            auth={this.props.auth}\n            deleteQuestion={this.props.deleteQuestion}\n            answers={this.props.answers}\n            reactions={this.props.reactions}\n            postReaction={this.props.postReaction}\n            filter={this.state.filter}\n          />\n        </div>\n      );\n    })\n    :\n      <p className='info-text'>No Questions Matched your interests and query</p>\n\n    if (\n      this.props.isLoading ||\n      this.props.answersIsLoading ||\n      this.props.reactionsIsLoading\n    ) {\n      return <Loading type=\"spokes\" color=\"grey\" />;\n    } else if (\n      this.props.errMess ||\n      this.props.answersErrMess ||\n      this.props.reactionsErrMess\n    ) {\n      return (\n        <div className=\"container spaces\">\n          <div className=\"row\">\n            <div className=\"col-12\">\n              <h4>{this.props.errMess || this.props.answersErrMess || this.props.reactionsErrMess}</h4>\n            </div>\n          </div>\n        </div>\n      );\n    } else if (this.props.questions) {\n      var renderQuestions;\n\n      if (this.state.filter === \"Latest\") {\n        renderQuestions = MenuDate;\n      } else if (this.state.filter === \"Votes\") {\n        renderQuestions = MenuVotes;\n      } else if (this.state.filter === \"Unanswered\")\n        renderQuestions = MenuUnanswered;\n      else if (this.state.filter === \"Views\") renderQuestions = MenuViews;\n\n      return (\n        <>\n          <div>\n            <section className=\"new_section\">\n              <div className=\"container col-12 home-questions\">\n                <div className=\"row\">\n                  <div className=\"container category-div \">\n                    <div className=\"row ml-1 mt-2 mr-1\">\n                      <Nav className=\"col-12 \" tabs>\n                        <NavItem className=\"mb-4 filters\">\n                          <NavLink\n                            href=\"#\"\n                            active={\n                              this.state.filter === \"Latest\" ? true : false\n                            }\n                            onClick={() => this.onLatestSelect()}\n                          >\n                            Latest\n                          </NavLink>\n                        </NavItem>\n                        <NavItem className=\"mb-4 filters\">\n                          <NavLink\n                            href=\"#\"\n                            active={\n                              this.state.filter === \"Votes\" ? true : false\n                            }\n                            onClick={() => this.onVotesSelect()}\n                          >\n                            Votes\n                          </NavLink>\n                        </NavItem>\n                        <NavItem className=\"mb-4 filters\">\n                          <NavLink\n                            href=\"#\"\n                            active={\n                              this.state.filter === \"Views\" ? true : false\n                            }\n                            onClick={() => this.onViewsSelect()}\n                          >\n                            Views\n                          </NavLink>\n                        </NavItem>\n                        <NavItem className=\"mb-4 filters\">\n                          <NavLink\n                            href=\"#\"\n                            active={\n                              this.state.filter === \"Unanswered\" ? true : false\n                            }\n                            onClick={() => this.onUnansweredSelect()}\n                          >\n                            Unanswered\n                          </NavLink>\n                        </NavItem>\n                      </Nav>\n                    </div>\n                  </div>\n                </div>\n                <div\n                  id=\"all-questions-id\"\n                  className=\"row mt-4 justify-content-center\"\n                >\n                  {renderQuestions}\n                </div>\n              </div>\n            </section>\n          </div>\n        </>\n      );\n    }\n  }\n}\nexport default AllCategory;\n"]},"metadata":{},"sourceType":"module"}