{"ast":null,"code":"import * as ActionTypes from \"../ActionTypes\";\nimport { baseUrl } from \"../../shared/baseUrl\";\n\nconst axios = require(\"axios\");\n\nexport const userBlogs = details => async (dispatch, getState) => {\n  const {\n    token,\n    Skip,\n    Limit,\n    userId\n  } = details;\n  let bearer_token = \"Bearer \" + token;\n  let queryParams = {\n    Skip,\n    Limit,\n    userId\n  };\n\n  try {\n    let response = await axios.get(baseUrl + \"userblogs\", {\n      headers: {\n        \"Authorization\": bearer_token\n      },\n      params: queryParams\n    }); // console.log(response.data);\n\n    dispatch({\n      type: ActionTypes.GET_USER_BLOGS,\n      payload: response.data\n    });\n  } catch (err) {\n    console.log(err);\n    dispatch({\n      type: ActionTypes.USER_BLOGS_FAILED,\n      payload: err\n    });\n  }\n};\nexport const userBlogDemands = details => async (dispatch, getState) => {\n  const {\n    token,\n    Skip,\n    Limit,\n    userId\n  } = details;\n  let bearer_token = \"Bearer \" + token;\n  let queryParams = {\n    Skip,\n    Limit,\n    userId\n  };\n\n  try {\n    let response = await axios.get(baseUrl + \"userblogDemands\", {\n      headers: {\n        \"Authorization\": bearer_token\n      },\n      params: queryParams\n    }); // console.log(response.data);\n\n    dispatch({\n      type: ActionTypes.GET_USER_BLOG_DEMANDS,\n      payload: response.data\n    });\n  } catch (err) {\n    console.log(err);\n    dispatch({\n      type: ActionTypes.USER_BLOG_DEMANDS_FAILED,\n      payload: err\n    });\n  }\n};","map":{"version":3,"sources":["/home/jaskaran/Desktop/Poogle/src/redux/actions/blogs.js"],"names":["ActionTypes","baseUrl","axios","require","userBlogs","details","dispatch","getState","token","Skip","Limit","userId","bearer_token","queryParams","response","get","headers","params","type","GET_USER_BLOGS","payload","data","err","console","log","USER_BLOGS_FAILED","userBlogDemands","GET_USER_BLOG_DEMANDS","USER_BLOG_DEMANDS_FAILED"],"mappings":"AAAA,OAAO,KAAKA,WAAZ,MAA6B,gBAA7B;AACA,SAASC,OAAT,QAAwB,sBAAxB;;AACA,MAAMC,KAAK,GAAGC,OAAO,CAAC,OAAD,CAArB;;AAEA,OAAO,MAAMC,SAAS,GAAIC,OAAD,IAAa,OAAMC,QAAN,EAAgBC,QAAhB,KAA2B;AAC7D,QAAM;AAACC,IAAAA,KAAD;AAAQC,IAAAA,IAAR;AAAcC,IAAAA,KAAd;AAAqBC,IAAAA;AAArB,MAA+BN,OAArC;AACA,MAAIO,YAAY,GAAG,YAAYJ,KAA/B;AACA,MAAIK,WAAW,GAAE;AAACJ,IAAAA,IAAD;AAAOC,IAAAA,KAAP;AAAcC,IAAAA;AAAd,GAAjB;;AACA,MAAG;AACC,QAAIG,QAAQ,GAAE,MAAMZ,KAAK,CAACa,GAAN,CAChBd,OAAO,GAAG,WADM,EAEhB;AACIe,MAAAA,OAAO,EAAC;AACJ,yBAAgBJ;AADZ,OADZ;AAIIK,MAAAA,MAAM,EAACJ;AAJX,KAFgB,CAApB,CADD,CAUC;;AACAP,IAAAA,QAAQ,CAAC;AAAEY,MAAAA,IAAI,EAAElB,WAAW,CAACmB,cAApB;AAAoCC,MAAAA,OAAO,EAAEN,QAAQ,CAACO;AAAtD,KAAD,CAAR;AAEH,GAbD,CAaC,OAAMC,GAAN,EAAU;AACPC,IAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACAhB,IAAAA,QAAQ,CAAC;AAACY,MAAAA,IAAI,EAAClB,WAAW,CAACyB,iBAAlB;AAAqCL,MAAAA,OAAO,EAACE;AAA7C,KAAD,CAAR;AACH;AACJ,CArBM;AAuBP,OAAO,MAAMI,eAAe,GAAIrB,OAAD,IAAa,OAAMC,QAAN,EAAgBC,QAAhB,KAA2B;AACnE,QAAM;AAACC,IAAAA,KAAD;AAAQC,IAAAA,IAAR;AAAcC,IAAAA,KAAd;AAAqBC,IAAAA;AAArB,MAA+BN,OAArC;AACA,MAAIO,YAAY,GAAG,YAAYJ,KAA/B;AACA,MAAIK,WAAW,GAAE;AAACJ,IAAAA,IAAD;AAAOC,IAAAA,KAAP;AAAcC,IAAAA;AAAd,GAAjB;;AACA,MAAG;AACC,QAAIG,QAAQ,GAAE,MAAMZ,KAAK,CAACa,GAAN,CAChBd,OAAO,GAAG,iBADM,EAEhB;AACIe,MAAAA,OAAO,EAAC;AACJ,yBAAgBJ;AADZ,OADZ;AAIIK,MAAAA,MAAM,EAACJ;AAJX,KAFgB,CAApB,CADD,CAUC;;AACAP,IAAAA,QAAQ,CAAC;AAAEY,MAAAA,IAAI,EAAElB,WAAW,CAAC2B,qBAApB;AAA2CP,MAAAA,OAAO,EAAEN,QAAQ,CAACO;AAA7D,KAAD,CAAR;AAEH,GAbD,CAaC,OAAMC,GAAN,EAAU;AACPC,IAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACAhB,IAAAA,QAAQ,CAAC;AAACY,MAAAA,IAAI,EAAClB,WAAW,CAAC4B,wBAAlB;AAA4CR,MAAAA,OAAO,EAACE;AAApD,KAAD,CAAR;AACH;AACJ,CArBM","sourcesContent":["import * as ActionTypes from \"../ActionTypes\";\nimport { baseUrl } from \"../../shared/baseUrl\";\nconst axios = require(\"axios\");\n\nexport const userBlogs = (details) => async(dispatch, getState)=>{\n    const {token, Skip, Limit, userId} = details;\n    let bearer_token = \"Bearer \" + token;\n    let queryParams ={Skip, Limit, userId}; \n    try{\n        let response= await axios.get(\n            baseUrl + \"userblogs\",\n            {\n                headers:{\n                    \"Authorization\":bearer_token,\n                },\n                params:queryParams\n            }\n        )\n        // console.log(response.data);\n        dispatch({ type: ActionTypes.GET_USER_BLOGS, payload: response.data });\n\n    }catch(err){\n        console.log(err);\n        dispatch({type:ActionTypes.USER_BLOGS_FAILED, payload:err});\n    }\n}\n\nexport const userBlogDemands = (details) => async(dispatch, getState)=>{\n    const {token, Skip, Limit, userId} = details;\n    let bearer_token = \"Bearer \" + token;\n    let queryParams ={Skip, Limit, userId}; \n    try{\n        let response= await axios.get(\n            baseUrl + \"userblogDemands\",\n            {\n                headers:{\n                    \"Authorization\":bearer_token,\n                },\n                params:queryParams\n            }\n        )\n        // console.log(response.data);\n        dispatch({ type: ActionTypes.GET_USER_BLOG_DEMANDS, payload: response.data });\n\n    }catch(err){\n        console.log(err);\n        dispatch({type:ActionTypes.USER_BLOG_DEMANDS_FAILED, payload:err});\n    }\n}"]},"metadata":{},"sourceType":"module"}