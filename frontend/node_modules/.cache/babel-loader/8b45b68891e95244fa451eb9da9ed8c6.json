{"ast":null,"code":"import * as ActionTypes from \"./ActionTypes\";\nimport { baseUrl } from \"../shared/baseUrl\";\nimport { logOut, signIn, signUp, ChangeSpaces } from './actions/auth';\nimport { contactUs } from './actions/contact';\nimport { fetchUser, updateUser } from './actions/user';\nimport { userQuestions } from './actions/questions';\nimport { userAnswers } from './actions/answers';\nimport { userBlogs, userBlogDemands } from './actions/blogs'; //--------------------------AUTHENTICATION-----------------------------------/\n\nexport { logOut };\nexport { signIn };\nexport { signUp };\n/*************************************************************** */\n\n/*------------CONTACT US FORM----------------------------*/\n\nexport { contactUs };\n/******************************************************************* */\n\n/*------------FETCH USER----------------------------*/\n\nexport { fetchUser };\nexport { updateUser }; //**************************************************************************** */\n// ------------------------------------ SPACES -------------------------------/\n\nexport { ChangeSpaces };\nexport const fetchFollowSpaces = interests => dispatch => {\n  // redux thunk allows to pass an action method instead of just action object and automayically recieves dispatch parameter.\n  dispatch(spacesLoading(true)); // could do this or anything at anytime as middleware operation.\n\n  return fetch(baseUrl + `followedSpaces?interests=${interests}`).then(response => {\n    if (response.ok) {\n      return response;\n    } else {\n      var error = new Error(\"Error \" + response.status + \": \" + response.statusText);\n      error.response = response;\n      throw error;\n    }\n  }, error => {\n    var errmess = new Error(error.message);\n    throw errmess;\n  }).then(response => response.json()).then(spaces => dispatch(addSpaces(spaces))) // perform certain operations only when certain condition is met like only without err and json format dispatch to store.\n  .catch(error => dispatch(spacesFailed(error.message))); // else dispatch for err.\n};\nexport const fetchSpaces = () => dispatch => {\n  // redux thunk allows to pass an action method instead of just action object and automayically recieves dispatch parameter.\n  dispatch(spacesLoading(true)); // could do this or anything at anytime as middleware operation.\n\n  return fetch(baseUrl + 'spaces').then(response => {\n    if (response.ok) {\n      return response;\n    } else {\n      var error = new Error(\"Error \" + response.status + \": \" + response.statusText);\n      error.response = response;\n      throw error;\n    }\n  }, error => {\n    var errmess = new Error(error.message);\n    throw errmess;\n  }).then(response => response.json()).then(spaces => dispatch(addSpaces(spaces))) // perform certain operations only when certain condition is met like only without err and json format dispatch to store.\n  .catch(error => dispatch(spacesFailed(error.message))); // else dispatch for err.\n};\nexport const spacesLoading = () => ({\n  type: ActionTypes.SPACES_LOADING\n});\nexport const spacesFailed = errmess => ({\n  type: ActionTypes.SPACES_FAILED,\n  payload: errmess\n});\nexport const addSpaces = spaces => ({\n  type: ActionTypes.ADD_SPACES,\n  payload: spaces\n}); //************************************************************************************/\n//--------------------------------------  QUESTIONS  ------------------------------- /\n\nexport { userQuestions };\nexport const addQuestion = question => ({\n  type: ActionTypes.ADD_QUESTION,\n  payload: question\n});\nexport const postFail = errormess => ({\n  type: ActionTypes.POST_FAIL,\n  payload: errormess\n});\nexport const postQuestion = question => dispatch => {\n  const newQuestion = question;\n  newQuestion.dateNum = Date.now();\n  const bearer = \"Bearer \" + localStorage.getItem(\"token\");\n  return fetch(baseUrl + \"questions\", {\n    method: \"POST\",\n    body: JSON.stringify(newQuestion),\n    headers: {\n      \"Content-Type\": \"application/json\",\n      Authorization: bearer\n    } //credentials: \"same-origin\"\n\n  }).then(response => {\n    if (response.ok) {\n      return response;\n    } else {\n      var error = new Error(\"Error \" + response.status + \": \" + response.statusText);\n      error.response = response;\n      throw error;\n    }\n  }, error => {\n    throw error;\n  }).then(response => response.json()).then(response => dispatch(addQuestion(response))).catch(error => {\n    dispatch(postFail(error.message));\n    console.log(\"post questions\", error.message); //alert(\"Your question could not be posted\\nError: \" + error.message);\n  });\n};\nexport const fetchHomeFeed = interests => dispatch => {\n  dispatch(questionsLoading(true));\n  return fetch(baseUrl + `homeFeed?interests=${interests}`).then(response => {\n    if (response.ok) {\n      return response;\n    } else {\n      var error = new Error(\"Error \" + response.status + \": \" + response.statusText);\n      error.response = response;\n      throw error;\n    }\n  }, error => {\n    var errmess = new Error(error.message);\n    throw errmess;\n  }).then(response => response.json()).then(questions => dispatch(addQuestions(questions))).catch(error => dispatch(questionsFailed(error.message)));\n};\nexport const fetchQuestions = () => dispatch => {\n  dispatch(questionsLoading(true));\n  return fetch(baseUrl + \"questions\").then(response => {\n    if (response.ok) {\n      return response;\n    } else {\n      var error = new Error(\"Error \" + response.status + \": \" + response.statusText);\n      error.response = response;\n      throw error;\n    }\n  }, error => {\n    var errmess = new Error(error.message);\n    throw errmess;\n  }).then(response => response.json()).then(questions => dispatch(addQuestions(questions))).catch(error => dispatch(questionsFailed(error.message)));\n};\nexport const deleteQuestion = questionId => dispatch => {\n  const bearer = \"Bearer \" + localStorage.getItem(\"token\");\n  return fetch(baseUrl + \"questions/\" + questionId, {\n    method: \"DELETE\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n      Authorization: bearer\n    } //credentials: \"same-origin\"\n\n  }).then(response => {\n    if (response.ok) {\n      return response;\n    } else {\n      var error = new Error('Error ' + response.status + ': ' + response.statusText);\n      error.response = response;\n      throw error;\n    }\n  }, error => {\n    throw error;\n  }).then(response => response.json()).then(() => dispatch(removeQuestion(questionId))).then(() => console.log('Question deleted!!')).catch(error => dispatch(questionsFailed(error.message)));\n};\nexport const removeQuestion = questionId => ({\n  type: ActionTypes.DELETE_QUESTION,\n  payload: questionId\n});\nexport const questionsLoading = () => ({\n  type: ActionTypes.QUESTIONS_LOADING\n});\nexport const questionsFailed = errmess => ({\n  type: ActionTypes.QUESTIONS_FAILED,\n  payload: errmess\n});\nexport const addQuestions = questions => ({\n  type: ActionTypes.ADD_QUESTIONS,\n  payload: questions\n}); // --------------------------     QUESTION REACTION   -------------------------/\n\nexport const addReaction = reac => ({\n  type: ActionTypes.ADD_QREACTION,\n  payload: reac\n});\nexport const postReaction = reac => dispatch => {\n  const bearer = \"Bearer \" + localStorage.getItem(\"token\");\n  return fetch(baseUrl + \"questionReactions\", {\n    method: \"POST\",\n    body: JSON.stringify(reac),\n    headers: {\n      \"Content-Type\": \"application/json\",\n      Authorization: bearer\n    } //credentials: \"same-origin\",\n\n  }).then(response => {\n    if (response.ok) {\n      return response;\n    } else {\n      var error = new Error(\"Error \" + response.status + \": \" + response.statusText);\n      error.response = response;\n      throw error;\n    }\n  }, error => {\n    throw error;\n  }).then(response => response.json()).then(response => dispatch(addReaction(response))).catch(error => {\n    console.log(\"post reactions\", error.message);\n    alert(\"Your Reaction could not be posted\\nError: \" + error.message);\n  });\n};\nexport const fetchReactions = () => dispatch => {\n  return fetch(baseUrl + \"questionReactions\").then(response => {\n    if (response.ok) {\n      return response;\n    } else {\n      var error = new Error(\"Error \" + response.status + \": \" + response.statusText);\n      error.response = response;\n      throw error;\n    }\n  }, error => {\n    var errmess = new Error(error.message);\n    throw errmess;\n  }).then(response => response.json()).then(reactions => dispatch(addReactions(reactions))).catch(error => dispatch(reactionsFailed(error.message)));\n};\nexport const reactionsFailed = errmess => ({\n  type: ActionTypes.QREACTIONS_FAILED,\n  payload: errmess\n});\nexport const addReactions = reactions => ({\n  type: ActionTypes.ADD_QREACTIONS,\n  payload: reactions\n});\nexport const deleteReaction = reacId => dispatch => {\n  const bearer = \"Bearer \" + localStorage.getItem(\"token\");\n  return fetch(baseUrl + \"questionReactions/\" + reacId, {\n    method: \"DELETE\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n      Authorization: bearer\n    },\n    credentials: \"same-origin\"\n  }).then(response => {\n    if (response.ok) {\n      return response;\n    } else {\n      var error = new Error(\"Error \" + response.status + \": \" + response.statusText);\n      error.response = response;\n      throw error;\n    }\n  }, error => {\n    throw error;\n  }).then(response => response.json()).then(reactions => {\n    console.log(\"Reaction Deleted\", reactions);\n    dispatch(removeReaction(reacId));\n  }).catch(error => {\n    console.log(\"delete Reactions\", error.message);\n    alert(\"Your Reaction could not be deleted\\nError: \" + error.message);\n  });\n};\nexport const removeReaction = reacId => ({\n  type: ActionTypes.DELETE_QREACTION,\n  payload: reacId\n}); // --------------------------      ANSWERES ----------------------------------/\n\nexport { userAnswers };\nexport const addAnswer = answer => ({\n  type: ActionTypes.ADD_ANSWER,\n  payload: answer\n});\nexport const postAnswer = answer => dispatch => {\n  const newAnswer = answer;\n  newAnswer.dateNum = Date.now();\n  const bearer = \"Bearer \" + localStorage.getItem(\"token\");\n  return fetch(baseUrl + \"answers\", {\n    method: \"POST\",\n    body: JSON.stringify(newAnswer),\n    headers: {\n      \"Content-Type\": \"application/json\",\n      Authorization: bearer\n    } //credentials: \"same-origin\",\n\n  }).then(response => {\n    if (response.ok) {\n      return response;\n    } else {\n      var error = new Error(\"Error \" + response.status + \": \" + response.statusText);\n      error.response = response;\n      throw error;\n    }\n  }, error => {\n    throw error;\n  }).then(response => response.json()).then(response => dispatch(addAnswer(response))).catch(error => {\n    dispatch(postFail(error.message));\n    console.log(\"post answers\", error.message); //alert(\"Your answer could not be posted\\nError: \" + error.message);\n  });\n};\nexport const fetchAnswers = () => dispatch => {\n  dispatch(answersLoading(true));\n  return fetch(baseUrl + \"answers\").then(response => {\n    if (response.ok) {\n      return response;\n    } else {\n      var error = new Error(\"Error \" + response.status + \": \" + response.statusText);\n      error.response = response;\n      throw error;\n    }\n  }, error => {\n    var errmess = new Error(error.message);\n    throw errmess;\n  }).then(response => response.json()).then(answers => dispatch(addAnswers(answers))).catch(error => dispatch(answersFailed(error.message)));\n};\nexport const deleteAnswer = answerId => dispatch => {\n  const bearer = \"Bearer \" + localStorage.getItem(\"token\");\n  return fetch(baseUrl + \"answers/\" + answerId, {\n    method: \"DELETE\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n      Authorization: bearer\n    } //credentials: \"same-origin\",\n\n  }).then(response => {\n    if (response.ok) {\n      return response;\n    } else {\n      var error = new Error(\"Error \" + response.status + \": \" + response.statusText);\n      error.response = response;\n      throw error;\n    }\n  }, error => {\n    throw error;\n  }).then(response => response.json()).then(answers => {\n    console.log(\"Answer Deleted\", answers);\n    dispatch(removeAnswer(answerId));\n  }).catch(error => dispatch(answersFailed(error.message)));\n};\nexport const removeAnswer = answerId => ({\n  type: ActionTypes.DELETE_ANSWER,\n  payload: answerId\n});\nexport const answersLoading = () => ({\n  type: ActionTypes.ANSWERS_LOADING\n});\nexport const answersFailed = errmess => ({\n  type: ActionTypes.ANSWERS_FAILED,\n  payload: errmess\n});\nexport const addAnswers = answers => ({\n  type: ActionTypes.ADD_ANSWERS,\n  payload: answers\n}); // --------------------------   Answer Reaction   -------------------------\n\nexport const addAReaction = reac => ({\n  type: ActionTypes.ADD_AREACTION,\n  payload: reac\n});\nexport const postAReaction = reac => dispatch => {\n  const bearer = \"Bearer \" + localStorage.getItem(\"token\");\n  return fetch(baseUrl + \"answerReactions\", {\n    method: \"POST\",\n    body: JSON.stringify(reac),\n    headers: {\n      \"Content-Type\": \"application/json\",\n      Authorization: bearer\n    } //credentials: \"same-origin\",\n\n  }).then(response => {\n    if (response.ok) {\n      return response;\n    } else {\n      var error = new Error(\"Error \" + response.status + \": \" + response.statusText);\n      error.response = response;\n      throw error;\n    }\n  }, error => {\n    throw error;\n  }).then(response => response.json()).then(response => dispatch(addAReaction(response))).catch(error => {\n    console.log(\"post reactions\", error.message);\n    alert(\"Your Reaction could not be posted\\nError: \" + error.message);\n  });\n};\nexport const fetchAReactions = () => dispatch => {\n  return fetch(baseUrl + \"answerReactions\").then(response => {\n    if (response.ok) {\n      return response;\n    } else {\n      var error = new Error(\"Error \" + response.status + \": \" + response.statusText);\n      error.response = response;\n      throw error;\n    }\n  }, error => {\n    var errmess = new Error(error.message);\n    throw errmess;\n  }).then(response => response.json()).then(reactions => dispatch(addAReactions(reactions))).catch(error => dispatch(areactionsFailed(error.message)));\n};\nexport const areactionsFailed = errmess => ({\n  type: ActionTypes.AREACTIONS_FAILED,\n  payload: errmess\n});\nexport const addAReactions = reactions => ({\n  type: ActionTypes.ADD_AREACTIONS,\n  payload: reactions\n});\nexport const deleteAReaction = reacId => dispatch => {\n  const bearer = \"Bearer \" + localStorage.getItem(\"token\");\n  return fetch(baseUrl + \"answerReactions/\" + reacId, {\n    method: \"DELETE\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n      Authorization: bearer\n    } //credentials: \"same-origin\",\n\n  }).then(response => {\n    if (response.ok) {\n      return response;\n    } else {\n      var error = new Error(\"Error \" + response.status + \": \" + response.statusText);\n      error.response = response;\n      throw error;\n    }\n  }, error => {\n    throw error;\n  }).then(response => response.json()).then(reactions => {\n    console.log(\"Reaction Deleted\", reactions);\n    dispatch(removeAReaction(reacId));\n  }).catch(error => {\n    console.log(\"delete Reactions\", error.message);\n    alert(\"Your Reaction could not be deleted\\nError: \" + error.message);\n  });\n};\nexport const removeAReaction = reacId => ({\n  type: ActionTypes.DELETE_AREACTION,\n  payload: reacId\n}); // --------------------------   questionComments ------------------------\n\nexport const addComment = comment => ({\n  type: ActionTypes.ADD_COMMENT,\n  payload: comment\n});\nexport const postComment = comment => dispatch => {\n  const newComment = comment;\n  newComment.dateNum = Date.now();\n  const bearer = \"Bearer \" + localStorage.getItem(\"token\");\n  return fetch(baseUrl + \"questionComments\", {\n    method: \"POST\",\n    body: JSON.stringify(newComment),\n    headers: {\n      \"Content-Type\": \"application/json\",\n      Authorization: bearer\n    }\n  }).then(response => {\n    if (response.ok) {\n      return response;\n    } else {\n      var error = new Error(\"Error \" + response.status + \": \" + response.statusText);\n      error.response = response;\n      throw error;\n    }\n  }, error => {\n    throw error;\n  }).then(response => response.json()).then(response => dispatch(addComment(response))).catch(error => {\n    dispatch(postFail(error.message));\n    console.log(\"post comments\", error.message);\n  });\n};\nexport const fetchComments = () => dispatch => {\n  return fetch(baseUrl + \"questionComments\").then(response => {\n    if (response.ok) {\n      return response;\n    } else {\n      var error = new Error(\"Error \" + response.status + \": \" + response.statusText);\n      error.response = response;\n      throw error;\n    }\n  }, error => {\n    var errmess = new Error(error.message);\n    throw errmess;\n  }).then(response => response.json()).then(comments => dispatch(addComments(comments))).catch(error => dispatch(commentsFailed(error.message)));\n};\nexport const commentsFailed = errmess => ({\n  type: ActionTypes.COMMENTS_FAILED,\n  payload: errmess\n});\nexport const addComments = comments => ({\n  type: ActionTypes.ADD_COMMENTS,\n  payload: comments\n});\nexport const deleteComment = commentId => dispatch => {\n  const bearer = \"Bearer \" + localStorage.getItem(\"token\");\n  return fetch(baseUrl + \"questionComments/\" + commentId, {\n    method: \"DELETE\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n      Authorization: bearer\n    },\n    credentials: \"same-origin\"\n  }).then(response => {\n    if (response.ok) {\n      return response;\n    } else {\n      var error = new Error(\"Error \" + response.status + \": \" + response.statusText);\n      error.response = response;\n      throw error;\n    }\n  }, error => {\n    throw error;\n  }).then(response => response.json()).then(comments => {\n    console.log(\"Comment Deleted\", comments);\n    dispatch(removeComment(commentId));\n  }).catch(error => {\n    console.log(\"delete comments\", error.message);\n    alert(\"Your comment could not be deleted\\nError: \" + error.message);\n  });\n};\nexport const removeComment = commentId => ({\n  type: ActionTypes.DELETE_COMMENT,\n  payload: commentId\n}); //----------------BLOGS---------------------------------//\n\nexport { userBlogs };\nexport const addBlog = blog => ({\n  type: ActionTypes.ADD_BLOG,\n  payload: blog\n});\nexport const postBlog = blog => dispatch => {\n  const newBlog = blog;\n  newBlog.dateNum = Date.now();\n  const bearer = \"Bearer \" + localStorage.getItem(\"token\");\n  return fetch(baseUrl + \"blogs\", {\n    method: \"POST\",\n    body: JSON.stringify(newBlog),\n    headers: {\n      \"Content-Type\": \"application/json\",\n      Authorization: bearer\n    } //credentials: \"same-origin\"\n\n  }).then(response => {\n    if (response.ok) {\n      return response;\n    } else {\n      var error = new Error(\"Error \" + response.status + \": \" + response.statusText);\n      error.response = response;\n      throw error;\n    }\n  }, error => {\n    throw error;\n  }).then(response => response.json()).then(response => dispatch(addBlog(response))).catch(error => {\n    dispatch(postFail(error.message));\n    console.log(\"post blogs\", error.message);\n  });\n};\nexport const fetchBlogs = interests => dispatch => {\n  dispatch(blogsLoading(true));\n  return fetch(baseUrl + `blogs?interests=${interests}`).then(response => {\n    if (response.ok) {\n      return response;\n    } else {\n      var error = new Error(\"Error \" + response.status + \": \" + response.statusText);\n      error.response = response;\n      throw error;\n    }\n  }, error => {\n    var errmess = new Error(error.message);\n    throw errmess;\n  }).then(response => response.json()).then(blogs => dispatch(addBlogs(blogs))).catch(error => dispatch(blogsFailed(error.message)));\n};\nexport const deleteBlog = blogId => dispatch => {\n  const bearer = \"Bearer \" + localStorage.getItem(\"token\");\n  return fetch(baseUrl + \"blogs/\" + blogId, {\n    method: \"DELETE\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n      Authorization: bearer\n    } //credentials: \"same-origin\"\n\n  }).then(response => {\n    if (response.ok) {\n      return response;\n    } else {\n      var error = new Error('Error ' + response.status + ': ' + response.statusText);\n      error.response = response;\n      throw error;\n    }\n  }, error => {\n    throw error;\n  }).then(response => response.json()).then(() => dispatch(removeBlog(blogId))).then(() => console.log('Blog deleted!!')).catch(error => dispatch(blogsFailed(error.message)));\n};\nexport const removeBlog = blogId => ({\n  type: ActionTypes.DELETE_BLOG,\n  payload: blogId\n});\nexport const blogsLoading = () => ({\n  type: ActionTypes.BLOGS_LOADING\n});\nexport const blogsFailed = errmess => ({\n  type: ActionTypes.BLOGS_FAILED,\n  payload: errmess\n});\nexport const addBlogs = blogs => ({\n  type: ActionTypes.ADD_BLOGS,\n  payload: blogs\n}); //------------------------------------------BLOGS REACTIONS--------------------------------------------------------------------//\n\nexport const addBReaction = reac => ({\n  type: ActionTypes.ADD_BREACTION,\n  payload: reac\n});\nexport const postBReaction = reac => dispatch => {\n  const bearer = \"Bearer \" + localStorage.getItem(\"token\");\n  return fetch(baseUrl + \"blogReactions\", {\n    method: \"POST\",\n    body: JSON.stringify(reac),\n    headers: {\n      \"Content-Type\": \"application/json\",\n      Authorization: bearer\n    } //credentials: \"same-origin\",\n\n  }).then(response => {\n    if (response.ok) {\n      return response;\n    } else {\n      var error = new Error(\"Error \" + response.status + \": \" + response.statusText);\n      error.response = response;\n      throw error;\n    }\n  }, error => {\n    throw error;\n  }).then(response => response.json()).then(response => dispatch(addBReaction(response))).catch(error => {\n    console.log(\"post reactions\", error.message);\n    alert(\"Your Reaction could not be posted\\nError: \" + error.message);\n  });\n};\nexport const fetchBReactions = () => dispatch => {\n  return fetch(baseUrl + \"blogReactions\").then(response => {\n    if (response.ok) {\n      return response;\n    } else {\n      var error = new Error(\"Error \" + response.status + \": \" + response.statusText);\n      error.response = response;\n      throw error;\n    }\n  }, error => {\n    var errmess = new Error(error.message);\n    throw errmess;\n  }).then(response => response.json()).then(reactions => dispatch(addBReactions(reactions))).catch(error => dispatch(reactionsBFailed(error.message)));\n};\nexport const reactionsBFailed = errmess => ({\n  type: ActionTypes.REACTIONS_BFAILED,\n  payload: errmess\n});\nexport const addBReactions = reactions => ({\n  type: ActionTypes.ADD_BREACTIONS,\n  payload: reactions\n});\nexport const deleteBReaction = reacId => dispatch => {\n  const bearer = \"Bearer \" + localStorage.getItem(\"token\");\n  return fetch(baseUrl + \"blogReactions/\" + reacId, {\n    method: \"DELETE\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n      Authorization: bearer\n    },\n    credentials: \"same-origin\"\n  }).then(response => {\n    if (response.ok) {\n      return response;\n    } else {\n      var error = new Error(\"Error \" + response.status + \": \" + response.statusText);\n      error.response = response;\n      throw error;\n    }\n  }, error => {\n    throw error;\n  }).then(response => response.json()).then(reactions => {\n    console.log(\"Reaction Deleted\", reactions);\n    dispatch(removeBReaction(reacId));\n  }).catch(error => {\n    console.log(\"delete Reactions\", error.message);\n    alert(\"Your Reaction could not be deleted\\nError: \" + error.message);\n  });\n};\nexport const removeBReaction = reacId => ({\n  type: ActionTypes.DELETE_BREACTION,\n  payload: reacId\n}); //---------------------------------------------BLOG COMMENTS---------------------------------------------------//\n\nexport const addBComment = comment => ({\n  type: ActionTypes.ADD_BCOMMENT,\n  payload: comment\n});\nexport const postBComment = comment => dispatch => {\n  const newBComment = comment;\n  newBComment.dateNum = Date.now();\n  const bearer = \"Bearer \" + localStorage.getItem(\"token\");\n  return fetch(baseUrl + \"blogComments\", {\n    method: \"POST\",\n    body: JSON.stringify(newBComment),\n    headers: {\n      \"Content-Type\": \"application/json\",\n      Authorization: bearer\n    } //credentials: \"same-origin\",\n\n  }).then(response => {\n    if (response.ok) {\n      return response;\n    } else {\n      var error = new Error(\"Error \" + response.status + \": \" + response.statusText);\n      error.response = response;\n      throw error;\n    }\n  }, error => {\n    throw error;\n  }).then(response => response.json()).then(response => dispatch(addBComment(response))).catch(error => {\n    dispatch(postFail(error.message));\n    console.log(\"post comments\", error.message);\n  });\n};\nexport const fetchBComments = () => dispatch => {\n  return fetch(baseUrl + \"blogComments\").then(response => {\n    if (response.ok) {\n      return response;\n    } else {\n      var error = new Error(\"Error \" + response.status + \": \" + response.statusText);\n      error.response = response;\n      throw error;\n    }\n  }, error => {\n    var errmess = new Error(error.message);\n    throw errmess;\n  }).then(response => response.json()).then(comments => dispatch(addBComments(comments))).catch(error => dispatch(commentsBFailed(error.message)));\n};\nexport const commentsBFailed = errmess => ({\n  type: ActionTypes.COMMENTS_BFAILED,\n  payload: errmess\n});\nexport const addBComments = comments => ({\n  type: ActionTypes.ADD_BCOMMENTS,\n  payload: comments\n});\nexport const deleteBComment = commentId => dispatch => {\n  const bearer = \"Bearer \" + localStorage.getItem(\"token\");\n  return fetch(baseUrl + \"blogComments/\" + commentId, {\n    method: \"DELETE\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n      Authorization: bearer\n    },\n    credentials: \"same-origin\"\n  }).then(response => {\n    if (response.ok) {\n      return response;\n    } else {\n      var error = new Error(\"Error \" + response.status + \": \" + response.statusText);\n      error.response = response;\n      throw error;\n    }\n  }, error => {\n    throw error;\n  }).then(response => response.json()).then(comments => {\n    console.log(\"Comment Deleted\", comments);\n    dispatch(removeBComment(commentId));\n  }).catch(error => {\n    console.log(\"delete comments\", error.message);\n    alert(\"Your comment could not be deleted\\nError: \" + error.message);\n  });\n};\nexport const removeBComment = commentId => ({\n  type: ActionTypes.DELETE_BCOMMENT,\n  payload: commentId\n}); //---------------------------------------BLOG DEMANDS------------------------------------------------//\n\nexport { userBlogDemands };\nexport const addBlogDemand = blogDemand => ({\n  type: ActionTypes.ADD_BLOGDEMAND,\n  payload: blogDemand\n});\nexport const postBlogDemand = blogDemand => dispatch => {\n  const newBlogDemand = blogDemand;\n  newBlogDemand.dateNum = Date.now();\n  const bearer = \"Bearer \" + localStorage.getItem(\"token\");\n  return fetch(baseUrl + \"blogDemands\", {\n    method: \"POST\",\n    body: JSON.stringify(newBlogDemand),\n    headers: {\n      \"Content-Type\": \"application/json\",\n      Authorization: bearer\n    } //credentials: \"same-origin\"\n\n  }).then(response => {\n    if (response.ok) {\n      return response;\n    } else {\n      var error = new Error(\"Error \" + response.status + \": \" + response.statusText);\n      error.response = response;\n      throw error;\n    }\n  }, error => {\n    throw error;\n  }).then(response => response.json()).then(response => dispatch(addBlogDemand(response))).catch(error => {\n    console.log(\"post blogDemands\", error.message);\n    alert(\"Your blogDemand could not be posted\\nError: \" + error.message);\n  });\n};\nexport const fetchBlogDemands = interests => dispatch => {\n  dispatch(blogDemandsLoading(true));\n  return fetch(baseUrl + \"blogDemands?interests=\" + interests).then(response => {\n    if (response.ok) {\n      return response;\n    } else {\n      var error = new Error(\"Error \" + response.status + \": \" + response.statusText);\n      error.response = response;\n      throw error;\n    }\n  }, error => {\n    var errmess = new Error(error.message);\n    throw errmess;\n  }).then(response => response.json()).then(blogDemands => dispatch(addBlogDemands(blogDemands))).catch(error => dispatch(blogDemandsFailed(error.message)));\n};\nexport const deleteBlogDemand = blogDemandId => dispatch => {\n  const bearer = \"Bearer \" + localStorage.getItem(\"token\");\n  return fetch(baseUrl + \"blogDemands/\" + blogDemandId, {\n    method: \"DELETE\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n      Authorization: bearer\n    } //credentials: \"same-origin\"\n\n  }).then(response => {\n    if (response.ok) {\n      return response;\n    } else {\n      var error = new Error('Error ' + response.status + ': ' + response.statusText);\n      error.response = response;\n      throw error;\n    }\n  }, error => {\n    throw error;\n  }).then(response => response.json()).then(() => dispatch(removeBlogDemand(blogDemandId))).then(() => console.log('BlogDemand deleted!!')).catch(error => dispatch(blogDemandsFailed(error.message)));\n};\nexport const removeBlogDemand = blogDemandId => ({\n  type: ActionTypes.DELETE_BLOGDEMAND,\n  payload: blogDemandId\n});\nexport const blogDemandsLoading = () => ({\n  type: ActionTypes.BLOGDEMANDS_LOADING\n});\nexport const blogDemandsFailed = errmess => ({\n  type: ActionTypes.BLOGDEMANDS_FAILED,\n  payload: errmess\n});\nexport const addBlogDemands = blogdemands => ({\n  type: ActionTypes.ADD_BLOGDEMANDS,\n  payload: blogdemands\n});","map":{"version":3,"sources":["/home/jaskaran/Desktop/poogle/Poogle/src/redux/ActionCreators.js"],"names":["ActionTypes","baseUrl","logOut","signIn","signUp","ChangeSpaces","contactUs","fetchUser","updateUser","userQuestions","userAnswers","userBlogs","userBlogDemands","fetchFollowSpaces","interests","dispatch","spacesLoading","fetch","then","response","ok","error","Error","status","statusText","errmess","message","json","spaces","addSpaces","catch","spacesFailed","fetchSpaces","type","SPACES_LOADING","SPACES_FAILED","payload","ADD_SPACES","addQuestion","question","ADD_QUESTION","postFail","errormess","POST_FAIL","postQuestion","newQuestion","dateNum","Date","now","bearer","localStorage","getItem","method","body","JSON","stringify","headers","Authorization","console","log","fetchHomeFeed","questionsLoading","questions","addQuestions","questionsFailed","fetchQuestions","deleteQuestion","questionId","removeQuestion","DELETE_QUESTION","QUESTIONS_LOADING","QUESTIONS_FAILED","ADD_QUESTIONS","addReaction","reac","ADD_QREACTION","postReaction","alert","fetchReactions","reactions","addReactions","reactionsFailed","QREACTIONS_FAILED","ADD_QREACTIONS","deleteReaction","reacId","credentials","removeReaction","DELETE_QREACTION","addAnswer","answer","ADD_ANSWER","postAnswer","newAnswer","fetchAnswers","answersLoading","answers","addAnswers","answersFailed","deleteAnswer","answerId","removeAnswer","DELETE_ANSWER","ANSWERS_LOADING","ANSWERS_FAILED","ADD_ANSWERS","addAReaction","ADD_AREACTION","postAReaction","fetchAReactions","addAReactions","areactionsFailed","AREACTIONS_FAILED","ADD_AREACTIONS","deleteAReaction","removeAReaction","DELETE_AREACTION","addComment","comment","ADD_COMMENT","postComment","newComment","fetchComments","comments","addComments","commentsFailed","COMMENTS_FAILED","ADD_COMMENTS","deleteComment","commentId","removeComment","DELETE_COMMENT","addBlog","blog","ADD_BLOG","postBlog","newBlog","fetchBlogs","blogsLoading","blogs","addBlogs","blogsFailed","deleteBlog","blogId","removeBlog","DELETE_BLOG","BLOGS_LOADING","BLOGS_FAILED","ADD_BLOGS","addBReaction","ADD_BREACTION","postBReaction","fetchBReactions","addBReactions","reactionsBFailed","REACTIONS_BFAILED","ADD_BREACTIONS","deleteBReaction","removeBReaction","DELETE_BREACTION","addBComment","ADD_BCOMMENT","postBComment","newBComment","fetchBComments","addBComments","commentsBFailed","COMMENTS_BFAILED","ADD_BCOMMENTS","deleteBComment","removeBComment","DELETE_BCOMMENT","addBlogDemand","blogDemand","ADD_BLOGDEMAND","postBlogDemand","newBlogDemand","fetchBlogDemands","blogDemandsLoading","blogDemands","addBlogDemands","blogDemandsFailed","deleteBlogDemand","blogDemandId","removeBlogDemand","DELETE_BLOGDEMAND","BLOGDEMANDS_LOADING","BLOGDEMANDS_FAILED","blogdemands","ADD_BLOGDEMANDS"],"mappings":"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","sourcesContent":["import * as ActionTypes from \"./ActionTypes\";\nimport { baseUrl } from \"../shared/baseUrl\";\nimport {logOut, signIn, signUp, ChangeSpaces} from './actions/auth'\nimport {contactUs} from './actions/contact'\nimport {fetchUser, updateUser} from './actions/user';\nimport {userQuestions} from './actions/questions';\nimport {userAnswers} from './actions/answers';\nimport {userBlogs, userBlogDemands} from './actions/blogs';\n\n//--------------------------AUTHENTICATION-----------------------------------/\nexport {logOut};\nexport {signIn};\nexport {signUp};\n\n/*************************************************************** */\n/*------------CONTACT US FORM----------------------------*/\nexport {contactUs};\n\n/******************************************************************* */\n/*------------FETCH USER----------------------------*/\nexport {fetchUser}\nexport {updateUser};\n\n\n\n\n//**************************************************************************** */\n// ------------------------------------ SPACES -------------------------------/\nexport {ChangeSpaces};\nexport const fetchFollowSpaces = (interests) => (dispatch) => {\n\t// redux thunk allows to pass an action method instead of just action object and automayically recieves dispatch parameter.\n\n\tdispatch(spacesLoading(true)); // could do this or anything at anytime as middleware operation.\n\treturn fetch(baseUrl + `followedSpaces?interests=${interests}`)\n\t\t.then(\n\t\t\t(response) => {\n\t\t\t\tif (response.ok) {\n\t\t\t\t\treturn response;\n\t\t\t\t} else {\n\t\t\t\t\tvar error = new Error(\n\t\t\t\t\t\t\"Error \" + response.status + \": \" + response.statusText\n\t\t\t\t\t);\n\t\t\t\t\terror.response = response;\n\t\t\t\t\tthrow error;\n\t\t\t\t}\n\t\t\t},\n\t\t\t(error) => {\n\t\t\t\tvar errmess = new Error(error.message);\n\t\t\t\tthrow errmess;\n\t\t\t}\n\t\t)\n\t\t.then((response) => response.json())\n\t\t.then((spaces) => dispatch(addSpaces(spaces))) // perform certain operations only when certain condition is met like only without err and json format dispatch to store.\n\t\t.catch((error) => dispatch(spacesFailed(error.message))); // else dispatch for err.\n};\n\nexport const fetchSpaces = () => (dispatch) => {\n\t// redux thunk allows to pass an action method instead of just action object and automayically recieves dispatch parameter.\n\n\tdispatch(spacesLoading(true)); // could do this or anything at anytime as middleware operation.\n\treturn fetch(baseUrl + 'spaces')\n\t\t.then(\n\t\t\t(response) => {\n\t\t\t\tif (response.ok) {\n\t\t\t\t\treturn response;\n\t\t\t\t} else {\n\t\t\t\t\tvar error = new Error(\n\t\t\t\t\t\t\"Error \" + response.status + \": \" + response.statusText\n\t\t\t\t\t);\n\t\t\t\t\terror.response = response;\n\t\t\t\t\tthrow error;\n\t\t\t\t}\n\t\t\t},\n\t\t\t(error) => {\n\t\t\t\tvar errmess = new Error(error.message);\n\t\t\t\tthrow errmess;\n\t\t\t}\n\t\t)\n\t\t.then((response) => response.json())\n\t\t.then((spaces) => dispatch(addSpaces(spaces))) // perform certain operations only when certain condition is met like only without err and json format dispatch to store.\n\t\t.catch((error) => dispatch(spacesFailed(error.message))); // else dispatch for err.\n};\n\nexport const spacesLoading = () => ({\n\ttype: ActionTypes.SPACES_LOADING,\n});\n\nexport const spacesFailed = (errmess) => ({\n\ttype: ActionTypes.SPACES_FAILED,\n\tpayload: errmess,\n});\n\nexport const addSpaces = (spaces) => ({\n\ttype: ActionTypes.ADD_SPACES,\n\tpayload: spaces,\n});\n//************************************************************************************/\n//--------------------------------------  QUESTIONS  ------------------------------- /\nexport {userQuestions};\n\nexport const addQuestion = (question) => ({\n\ttype: ActionTypes.ADD_QUESTION,\n\tpayload: question,\n});\n\nexport const postFail = (errormess) => ({\n\ttype: ActionTypes.POST_FAIL,\n\tpayload: errormess,\n});\n\nexport const postQuestion = (question) => (dispatch) => {\n\tconst newQuestion = question;\n\tnewQuestion.dateNum = Date.now();\n\tconst bearer = \"Bearer \" + localStorage.getItem(\"token\");\n\n\treturn fetch(baseUrl + \"questions\", {\n\t\tmethod: \"POST\",\n\t\tbody: JSON.stringify(newQuestion),\n\t\theaders: {\n\t\t\t\"Content-Type\": \"application/json\",\n\t\t\tAuthorization: bearer,\n\t\t},\n\t\t//credentials: \"same-origin\"\n\t})\n\t\t.then(\n\t\t\t(response) => {\n\t\t\t\tif (response.ok) {\n\t\t\t\t\treturn response;\n\t\t\t\t} else {\n\t\t\t\t\tvar error = new Error(\n\t\t\t\t\t\t\"Error \" + response.status + \": \" + response.statusText\n\t\t\t\t\t);\n\t\t\t\t\terror.response = response;\n\t\t\t\t\tthrow error;\n\t\t\t\t}\n\t\t\t},\n\t\t\t(error) => {\n\t\t\t\tthrow error;\n\t\t\t}\n\t\t)\n\t\t.then((response) => response.json())\n\t\t.then((response) => dispatch(addQuestion(response)))\n\t\t.catch((error) => {\n\t\t\tdispatch(postFail(error.message))\n\t\t\tconsole.log(\"post questions\", error.message);\n\t\t\t//alert(\"Your question could not be posted\\nError: \" + error.message);\n\t\t});\n};\n\nexport const fetchHomeFeed = (interests) => (dispatch) => {\n\tdispatch(questionsLoading(true));\n\n\treturn fetch(baseUrl + `homeFeed?interests=${interests}`)\n\t\t.then(\n\t\t\t(response) => {\n\t\t\t\tif (response.ok) {\n\t\t\t\t\treturn response;\n\t\t\t\t} else {\n\t\t\t\t\tvar error = new Error(\n\t\t\t\t\t\t\"Error \" + response.status + \": \" + response.statusText\n\t\t\t\t\t);\n\t\t\t\t\terror.response = response;\n\t\t\t\t\tthrow error;\n\t\t\t\t}\n\t\t\t},\n\t\t\t(error) => {\n\t\t\t\tvar errmess = new Error(error.message);\n\t\t\t\tthrow errmess;\n\t\t\t}\n\t\t)\n\t\t.then((response) => response.json())\n\t\t.then((questions) => dispatch(addQuestions(questions)))\n\t\t.catch((error) => dispatch(questionsFailed(error.message)));\n}\n\nexport const fetchQuestions = () => (dispatch) => {\n\tdispatch(questionsLoading(true));\n\n\treturn fetch(baseUrl + \"questions\")\n\t\t.then(\n\t\t\t(response) => {\n\t\t\t\tif (response.ok) {\n\t\t\t\t\treturn response;\n\t\t\t\t} else {\n\t\t\t\t\tvar error = new Error(\n\t\t\t\t\t\t\"Error \" + response.status + \": \" + response.statusText\n\t\t\t\t\t);\n\t\t\t\t\terror.response = response;\n\t\t\t\t\tthrow error;\n\t\t\t\t}\n\t\t\t},\n\t\t\t(error) => {\n\t\t\t\tvar errmess = new Error(error.message);\n\t\t\t\tthrow errmess;\n\t\t\t}\n\t\t)\n\t\t.then((response) => response.json())\n\t\t.then((questions) => dispatch(addQuestions(questions)))\n\t\t.catch((error) => dispatch(questionsFailed(error.message)));\n};\n\nexport const deleteQuestion = (questionId) => (dispatch) => {\n\tconst bearer = \"Bearer \" + localStorage.getItem(\"token\");\n\n\treturn fetch(baseUrl + \"questions/\" + questionId, {\n\t\tmethod: \"DELETE\",\n\t\theaders: {\n\t\t\t\"Content-Type\": \"application/json\",\n\t\t\tAuthorization: bearer,\n\t\t},\n        //credentials: \"same-origin\"\n    })\n    .then(response => {\n        if (response.ok) {\n          return response;\n        } else {\n          var error = new Error('Error ' + response.status + ': ' + response.statusText);\n          error.response = response;\n          throw error;\n        }\n      },\n      error => {\n            throw error;\n      })\n    .then(response => response.json())\n    .then(() => dispatch(removeQuestion(questionId)))\n\t.then(() => console.log('Question deleted!!'))\n    .catch(error => dispatch(questionsFailed(error.message)));\n};\n\nexport const removeQuestion = (questionId) => ({\n\ttype: ActionTypes.DELETE_QUESTION,\n\tpayload: questionId,\n});\n\nexport const questionsLoading = () => ({\n\ttype: ActionTypes.QUESTIONS_LOADING,\n});\n\nexport const questionsFailed = (errmess) => ({\n\ttype: ActionTypes.QUESTIONS_FAILED,\n\tpayload: errmess,\n});\n\nexport const addQuestions = (questions) => ({\n\ttype: ActionTypes.ADD_QUESTIONS,\n\tpayload: questions,\n});\n\n\n// --------------------------     QUESTION REACTION   -------------------------/\n\nexport const addReaction = (reac) => ({\n\ttype: ActionTypes.ADD_QREACTION,\n\tpayload: reac,\n});\n\nexport const postReaction = (reac) => (dispatch) => {\n\t\n\tconst bearer = \"Bearer \" + localStorage.getItem(\"token\");\n\n\treturn fetch(baseUrl + \"questionReactions\", {\n\t\tmethod: \"POST\",\n\t\tbody: JSON.stringify(reac),\n\t\theaders: {\n\t\t\t\"Content-Type\": \"application/json\",\n\t\t\tAuthorization: bearer,\n\t\t},\n\t\t//credentials: \"same-origin\",\n\t})\n\t\t.then(\n\t\t\t(response) => {\n\t\t\t\tif (response.ok) {\n\t\t\t\t\treturn response;\n\t\t\t\t} else {\n\t\t\t\t\tvar error = new Error(\n\t\t\t\t\t\t\"Error \" + response.status + \": \" + response.statusText\n\t\t\t\t\t);\n\t\t\t\t\terror.response = response;\n\t\t\t\t\tthrow error;\n\t\t\t\t}\n\t\t\t},\n\t\t\t(error) => {\n\t\t\t\tthrow error;\n\t\t\t}\n\t\t)\n\t\t.then((response) => response.json())\n\t\t.then((response) => dispatch(addReaction(response)))\n\t\t.catch((error) => {\n\t\t\tconsole.log(\"post reactions\", error.message);\n\t\t\talert(\"Your Reaction could not be posted\\nError: \" + error.message);\n\t\t});\n};\n\nexport const fetchReactions = () => (dispatch) => {\n\treturn fetch(baseUrl + \"questionReactions\")\n\t\t.then(\n\t\t\t(response) => {\n\t\t\t\tif (response.ok) {\n\t\t\t\t\treturn response;\n\t\t\t\t} else {\n\t\t\t\t\tvar error = new Error(\n\t\t\t\t\t\t\"Error \" + response.status + \": \" + response.statusText\n\t\t\t\t\t);\n\t\t\t\t\terror.response = response;\n\t\t\t\t\tthrow error;\n\t\t\t\t}\n\t\t\t},\n\t\t\t(error) => {\n\t\t\t\tvar errmess = new Error(error.message);\n\t\t\t\tthrow errmess;\n\t\t\t}\n\t\t)\n\t\t.then((response) => response.json())\n\t\t.then((reactions) => dispatch(addReactions(reactions)))\n\t\t.catch((error) => dispatch(reactionsFailed(error.message)));\n};\n\nexport const reactionsFailed = (errmess) => ({\n\ttype: ActionTypes.QREACTIONS_FAILED,\n\tpayload: errmess,\n});\n\nexport const addReactions = (reactions) => ({\n\ttype: ActionTypes.ADD_QREACTIONS,\n\tpayload: reactions,\n});\n\nexport const deleteReaction = (reacId) => (dispatch) => {\n\tconst bearer = \"Bearer \" + localStorage.getItem(\"token\");\n\n\treturn fetch(baseUrl + \"questionReactions/\" + reacId, {\n\t\tmethod: \"DELETE\",\n\t\theaders: {\n\t\t\t\"Content-Type\": \"application/json\",\n\t\t\tAuthorization: bearer\n\t\t},\n\t\tcredentials: \"same-origin\",\n\t})\n\t\t.then(\n\t\t\t(response) => {\n\t\t\t\tif (response.ok) {\n\t\t\t\t\treturn response;\n\t\t\t\t} else {\n\t\t\t\t\tvar error = new Error(\n\t\t\t\t\t\t\"Error \" + response.status + \": \" + response.statusText\n\t\t\t\t\t);\n\t\t\t\t\terror.response = response;\n\t\t\t\t\tthrow error;\n\t\t\t\t}\n\t\t\t},\n\t\t\t(error) => {\n\t\t\t\tthrow error;\n\t\t\t}\n\t\t)\n\t\t.then((response) => response.json())\n\t\t.then((reactions) => {\n\t\t\tconsole.log(\"Reaction Deleted\", reactions);\n\t\t\tdispatch(removeReaction(reacId));\n\t\t})\n\t\t.catch((error) => {\n\t\t\tconsole.log(\"delete Reactions\", error.message);\n\t\t\talert(\"Your Reaction could not be deleted\\nError: \" + error.message);\n\t\t});\n};\n\nexport const removeReaction = (reacId) => ({\n\ttype: ActionTypes.DELETE_QREACTION,\n\tpayload: reacId,\n});\n\n\n// --------------------------      ANSWERES ----------------------------------/\nexport {userAnswers};\nexport const addAnswer = (answer) => ({\n\ttype: ActionTypes.ADD_ANSWER,\n\tpayload: answer,\n});\n\nexport const postAnswer = (answer) => (dispatch) => {\n\tconst newAnswer = answer;\n\tnewAnswer.dateNum = Date.now();\n\tconst bearer = \"Bearer \" + localStorage.getItem(\"token\");\n\n\treturn fetch(baseUrl + \"answers\", {\n\t\tmethod: \"POST\",\n\t\tbody: JSON.stringify(newAnswer),\n\t\theaders: {\n\t\t\t\"Content-Type\": \"application/json\",\n\t\t\tAuthorization: bearer,\n\t\t},\n\t\t//credentials: \"same-origin\",\n\t})\n\t\t.then(\n\t\t\t(response) => {\n\t\t\t\tif (response.ok) {\n\t\t\t\t\treturn response;\n\t\t\t\t} else {\n\t\t\t\t\tvar error = new Error(\n\t\t\t\t\t\t\"Error \" + response.status + \": \" + response.statusText\n\t\t\t\t\t);\n\t\t\t\t\terror.response = response;\n\t\t\t\t\tthrow error;\n\t\t\t\t}\n\t\t\t},\n\t\t\t(error) => {\n\t\t\t\tthrow error;\n\t\t\t}\n\t\t)\n\t\t.then((response) => response.json())\n\t\t.then((response) => dispatch(addAnswer(response)))\n\t\t.catch((error) => {\n\t\t\tdispatch(postFail(error.message))\n\t\t\tconsole.log(\"post answers\", error.message);\n\t\t\t//alert(\"Your answer could not be posted\\nError: \" + error.message);\n\t\t});\n};\n\nexport const fetchAnswers = () => (dispatch) => {\n\tdispatch(answersLoading(true));\n\n\treturn fetch(baseUrl + \"answers\")\n\t\t.then(\n\t\t\t(response) => {\n\t\t\t\tif (response.ok) {\n\t\t\t\t\treturn response;\n\t\t\t\t} else {\n\t\t\t\t\tvar error = new Error(\n\t\t\t\t\t\t\"Error \" + response.status + \": \" + response.statusText\n\t\t\t\t\t);\n\t\t\t\t\terror.response = response;\n\t\t\t\t\tthrow error;\n\t\t\t\t}\n\t\t\t},\n\t\t\t(error) => {\n\t\t\t\tvar errmess = new Error(error.message);\n\t\t\t\tthrow errmess;\n\t\t\t}\n\t\t)\n\t\t.then((response) => response.json())\n\t\t.then((answers) => dispatch(addAnswers(answers)))\n\t\t.catch((error) => dispatch(answersFailed(error.message)));\n};\n\nexport const deleteAnswer = (answerId) => (dispatch) => {\n\tconst bearer = \"Bearer \" + localStorage.getItem(\"token\");\n\n\treturn fetch(baseUrl + \"answers/\" + answerId, {\n\t\tmethod: \"DELETE\",\n\t\theaders: {\n\t\t\t\"Content-Type\": \"application/json\",\n\t\t\tAuthorization: bearer,\n\t\t},\n\t\t//credentials: \"same-origin\",\n\t})\n\t\t.then(\n\t\t\t(response) => {\n\t\t\t\tif (response.ok) {\n\t\t\t\t\treturn response;\n\t\t\t\t} else {\n\t\t\t\t\tvar error = new Error(\n\t\t\t\t\t\t\"Error \" + response.status + \": \" + response.statusText\n\t\t\t\t\t);\n\t\t\t\t\terror.response = response;\n\t\t\t\t\tthrow error;\n\t\t\t\t}\n\t\t\t},\n\t\t\t(error) => {\n\t\t\t\tthrow error;\n\t\t\t}\n\t\t)\n\t\t.then((response) => response.json())\n\t\t.then((answers) => {\n\t\t\tconsole.log(\"Answer Deleted\", answers);\n\t\t\tdispatch(removeAnswer(answerId));\n\t\t})\n\t\t.catch((error) => dispatch(answersFailed(error.message)));\n};\n\nexport const removeAnswer = (answerId) => ({\n\ttype: ActionTypes.DELETE_ANSWER,\n\tpayload: answerId,\n});\n\nexport const answersLoading = () => ({\n\ttype: ActionTypes.ANSWERS_LOADING,\n});\n\nexport const answersFailed = (errmess) => ({\n\ttype: ActionTypes.ANSWERS_FAILED,\n\tpayload: errmess,\n});\n\nexport const addAnswers = (answers) => ({\n\ttype: ActionTypes.ADD_ANSWERS,\n\tpayload: answers,\n});\n\n// --------------------------   Answer Reaction   -------------------------\n\n\nexport const addAReaction = (reac) => ({\n\ttype: ActionTypes.ADD_AREACTION,\n\tpayload: reac,\n});\n\nexport const postAReaction = (reac) => (dispatch) => {\n\t\n\tconst bearer = \"Bearer \" + localStorage.getItem(\"token\");\n\n\treturn fetch(baseUrl + \"answerReactions\", {\n\t\tmethod: \"POST\",\n\t\tbody: JSON.stringify(reac),\n\t\theaders: {\n\t\t\t\"Content-Type\": \"application/json\",\n\t\t\tAuthorization: bearer,\n\t\t},\n\t\t//credentials: \"same-origin\",\n\t})\n\t\t.then(\n\t\t\t(response) => {\n\t\t\t\tif (response.ok) {\n\t\t\t\t\treturn response;\n\t\t\t\t} else {\n\t\t\t\t\tvar error = new Error(\n\t\t\t\t\t\t\"Error \" + response.status + \": \" + response.statusText\n\t\t\t\t\t);\n\t\t\t\t\terror.response = response;\n\t\t\t\t\tthrow error;\n\t\t\t\t}\n\t\t\t},\n\t\t\t(error) => {\n\t\t\t\tthrow error;\n\t\t\t}\n\t\t)\n\t\t.then((response) => response.json())\n\t\t.then((response) => dispatch(addAReaction(response)))\n\t\t.catch((error) => {\n\t\t\tconsole.log(\"post reactions\", error.message);\n\t\t\talert(\"Your Reaction could not be posted\\nError: \" + error.message);\n\t\t});\n};\n\nexport const fetchAReactions = () => (dispatch) => {\n\treturn fetch(baseUrl + \"answerReactions\")\n\t\t.then(\n\t\t\t(response) => {\n\t\t\t\tif (response.ok) {\n\t\t\t\t\treturn response;\n\t\t\t\t} else {\n\t\t\t\t\tvar error = new Error(\n\t\t\t\t\t\t\"Error \" + response.status + \": \" + response.statusText\n\t\t\t\t\t);\n\t\t\t\t\terror.response = response;\n\t\t\t\t\tthrow error;\n\t\t\t\t}\n\t\t\t},\n\t\t\t(error) => {\n\t\t\t\tvar errmess = new Error(error.message);\n\t\t\t\tthrow errmess;\n\t\t\t}\n\t\t)\n\t\t.then((response) => response.json())\n\t\t.then((reactions) => dispatch(addAReactions(reactions)))\n\t\t.catch((error) => dispatch(areactionsFailed(error.message)));\n};\n\nexport const areactionsFailed = (errmess) => ({\n\ttype: ActionTypes.AREACTIONS_FAILED,\n\tpayload: errmess,\n});\n\nexport const addAReactions = (reactions) => ({\n\ttype: ActionTypes.ADD_AREACTIONS,\n\tpayload: reactions,\n});\n\nexport const deleteAReaction = (reacId) => (dispatch) => {\n\tconst bearer = \"Bearer \" + localStorage.getItem(\"token\");\n\n\treturn fetch(baseUrl + \"answerReactions/\" + reacId, {\n\t\tmethod: \"DELETE\",\n\t\theaders: {\n\t\t\t\"Content-Type\": \"application/json\",\n\t\t\tAuthorization: bearer\n\t\t},\n\t\t//credentials: \"same-origin\",\n\t})\n\t\t.then(\n\t\t\t(response) => {\n\t\t\t\tif (response.ok) {\n\t\t\t\t\treturn response;\n\t\t\t\t} else {\n\t\t\t\t\tvar error = new Error(\n\t\t\t\t\t\t\"Error \" + response.status + \": \" + response.statusText\n\t\t\t\t\t);\n\t\t\t\t\terror.response = response;\n\t\t\t\t\tthrow error;\n\t\t\t\t}\n\t\t\t},\n\t\t\t(error) => {\n\t\t\t\tthrow error;\n\t\t\t}\n\t\t)\n\t\t.then((response) => response.json())\n\t\t.then((reactions) => {\n\t\t\tconsole.log(\"Reaction Deleted\", reactions);\n\t\t\tdispatch(removeAReaction(reacId));\n\t\t})\n\t\t.catch((error) => {\n\t\t\tconsole.log(\"delete Reactions\", error.message);\n\t\t\talert(\"Your Reaction could not be deleted\\nError: \" + error.message);\n\t\t});\n};\n\nexport const removeAReaction = (reacId) => ({\n\ttype: ActionTypes.DELETE_AREACTION,\n\tpayload: reacId,\n});\n\n// --------------------------   questionComments ------------------------\n\nexport const addComment = (comment) => ({\n\ttype: ActionTypes.ADD_COMMENT,\n\tpayload: comment,\n});\n\nexport const postComment = (comment) => (dispatch) => {\n\tconst newComment = comment;\n\tnewComment.dateNum = Date.now();\n\tconst bearer = \"Bearer \" + localStorage.getItem(\"token\");\n\n\treturn fetch(baseUrl + \"questionComments\", {\n\t\tmethod: \"POST\",\n\t\tbody: JSON.stringify(newComment),\n\t\theaders: {\n\t\t\t\"Content-Type\": \"application/json\",\n\t\t\tAuthorization: bearer,\n\t\t},\n\t})\n\t\t.then(\n\t\t\t(response) => {\n\t\t\t\tif (response.ok) {\n\t\t\t\t\treturn response;\n\t\t\t\t} else {\n\t\t\t\t\tvar error = new Error(\n\t\t\t\t\t\t\"Error \" + response.status + \": \" + response.statusText\n\t\t\t\t\t);\n\t\t\t\t\terror.response = response;\n\t\t\t\t\tthrow error;\n\t\t\t\t}\n\t\t\t},\n\t\t\t(error) => {\n\t\t\t\tthrow error;\n\t\t\t}\n\t\t)\n\t\t.then((response) => response.json())\n\t\t.then((response) => dispatch(addComment(response)))\n\t\t.catch((error) => {\n\t\t\tdispatch(postFail(error.message))\n\t\t\tconsole.log(\"post comments\", error.message);\n\t\t});\n};\n\nexport const fetchComments = () => (dispatch) => {\n\treturn fetch(baseUrl + \"questionComments\")\n\t\t.then(\n\t\t\t(response) => {\n\t\t\t\tif (response.ok) {\n\t\t\t\t\treturn response;\n\t\t\t\t} else {\n\t\t\t\t\tvar error = new Error(\n\t\t\t\t\t\t\"Error \" + response.status + \": \" + response.statusText\n\t\t\t\t\t);\n\t\t\t\t\terror.response = response;\n\t\t\t\t\tthrow error;\n\t\t\t\t}\n\t\t\t},\n\t\t\t(error) => {\n\t\t\t\tvar errmess = new Error(error.message);\n\t\t\t\tthrow errmess;\n\t\t\t}\n\t\t)\n\t\t.then((response) => response.json())\n\t\t.then((comments) => dispatch(addComments(comments)))\n\t\t.catch((error) => dispatch(commentsFailed(error.message)));\n};\n\nexport const commentsFailed = (errmess) => ({\n\ttype: ActionTypes.COMMENTS_FAILED,\n\tpayload: errmess,\n});\n\nexport const addComments = (comments) => ({\n\ttype: ActionTypes.ADD_COMMENTS,\n\tpayload: comments,\n});\n\nexport const deleteComment = (commentId) => (dispatch) => {\n\tconst bearer = \"Bearer \" + localStorage.getItem(\"token\");\n\n\treturn fetch(baseUrl + \"questionComments/\" + commentId, {\n\t\tmethod: \"DELETE\",\n\t\theaders: {\n\t\t\t\"Content-Type\": \"application/json\",\n\t\t\tAuthorization: bearer\n\t\t},\n\t\tcredentials: \"same-origin\",\n\t})\n\t\t.then(\n\t\t\t(response) => {\n\t\t\t\tif (response.ok) {\n\t\t\t\t\treturn response;\n\t\t\t\t} else {\n\t\t\t\t\tvar error = new Error(\n\t\t\t\t\t\t\"Error \" + response.status + \": \" + response.statusText\n\t\t\t\t\t);\n\t\t\t\t\terror.response = response;\n\t\t\t\t\tthrow error;\n\t\t\t\t}\n\t\t\t},\n\t\t\t(error) => {\n\t\t\t\tthrow error;\n\t\t\t}\n\t\t)\n\t\t.then((response) => response.json())\n\t\t.then((comments) => {\n\t\t\tconsole.log(\"Comment Deleted\", comments);\n\t\t\tdispatch(removeComment(commentId));\n\t\t})\n\t\t.catch((error) => {\n\t\t\tconsole.log(\"delete comments\", error.message);\n\t\t\talert(\"Your comment could not be deleted\\nError: \" + error.message);\n\t\t});\n};\n\nexport const removeComment = (commentId) => ({\n\ttype: ActionTypes.DELETE_COMMENT,\n\tpayload: commentId,\n});\n\n\n\n\n\n\n\n//----------------BLOGS---------------------------------//\nexport{userBlogs};\n\nexport const addBlog = (blog) => ({\n\ttype: ActionTypes.ADD_BLOG,\n\tpayload: blog,\n});\n\nexport const postBlog = (blog) => (dispatch) => {\n\tconst newBlog = blog;\n\tnewBlog.dateNum = Date.now();\n\tconst bearer = \"Bearer \" + localStorage.getItem(\"token\");\n\n\treturn fetch(baseUrl + \"blogs\", {\n\t\tmethod: \"POST\",\n\t\tbody: JSON.stringify(newBlog),\n\t\theaders: {\n\t\t\t\"Content-Type\": \"application/json\",\n\t\t\tAuthorization: bearer,\n\t\t},\n\t\t//credentials: \"same-origin\"\n\t})\n\t\t.then(\n\t\t\t(response) => {\n\t\t\t\tif (response.ok) {\n\t\t\t\t\treturn response;\n\t\t\t\t} else {\n\t\t\t\t\tvar error = new Error(\n\t\t\t\t\t\t\"Error \" + response.status + \": \" + response.statusText\n\t\t\t\t\t);\n\t\t\t\t\terror.response = response;\n\t\t\t\t\tthrow error;\n\t\t\t\t}\n\t\t\t},\n\t\t\t(error) => {\n\t\t\t\tthrow error;\n\t\t\t}\n\t\t)\n\t\t.then((response) => response.json())\n\t\t.then((response) => dispatch(addBlog(response)))\n\t\t.catch((error) => {\n\t\t\tdispatch(postFail(error.message))\n\t\t\tconsole.log(\"post blogs\", error.message);\n\t\t});\n};\n\nexport const fetchBlogs = (interests) => (dispatch) => {\n\tdispatch(blogsLoading(true));\n\n\treturn fetch(baseUrl + `blogs?interests=${interests}`)\n\t\t.then(\n\t\t\t(response) => {\n\t\t\t\tif (response.ok) {\n\t\t\t\t\treturn response;\n\t\t\t\t} else {\n\t\t\t\t\tvar error = new Error(\n\t\t\t\t\t\t\"Error \" + response.status + \": \" + response.statusText\n\t\t\t\t\t);\n\t\t\t\t\terror.response = response;\n\t\t\t\t\tthrow error;\n\t\t\t\t}\n\t\t\t},\n\t\t\t(error) => {\n\t\t\t\tvar errmess = new Error(error.message);\n\t\t\t\tthrow errmess;\n\t\t\t}\n\t\t)\n\t\t.then((response) => response.json())\n\t\t.then((blogs) => dispatch(addBlogs(blogs)))\n\t\t.catch((error) => dispatch(blogsFailed(error.message)));\n};\n\n\nexport const deleteBlog = (blogId) => (dispatch) => {\n\tconst bearer = \"Bearer \" + localStorage.getItem(\"token\");\n\n\treturn fetch(baseUrl + \"blogs/\" + blogId, {\n\t\tmethod: \"DELETE\",\n\t\theaders: {\n\t\t\t\"Content-Type\": \"application/json\",\n\t\t\tAuthorization: bearer,\n\t\t},\n        //credentials: \"same-origin\"\n    })\n    .then(response => {\n        if (response.ok) {\n          return response;\n        } else {\n          var error = new Error('Error ' + response.status + ': ' + response.statusText);\n          error.response = response;\n          throw error;\n        }\n      },\n      error => {\n            throw error;\n      })\n    .then(response => response.json())\n    .then(() => dispatch(removeBlog(blogId)))\n\t.then(() => console.log('Blog deleted!!'))\n    .catch(error => dispatch(blogsFailed(error.message)));\n};\n\nexport const removeBlog = (blogId) => ({\n\ttype: ActionTypes.DELETE_BLOG,\n\tpayload: blogId,\n});\n\nexport const blogsLoading = () => ({\n\ttype: ActionTypes.BLOGS_LOADING,\n});\n\nexport const blogsFailed = (errmess) => ({\n\ttype: ActionTypes.BLOGS_FAILED,\n\tpayload: errmess,\n});\n\nexport const addBlogs = (blogs) => ({\n\ttype: ActionTypes.ADD_BLOGS,\n\tpayload: blogs,\n});\n\n\n//------------------------------------------BLOGS REACTIONS--------------------------------------------------------------------//\n\n\nexport const addBReaction = (reac) => ({\n\ttype: ActionTypes.ADD_BREACTION,\n\tpayload: reac,\n});\n\nexport const postBReaction = (reac) => (dispatch) => {\n\t\n\tconst bearer = \"Bearer \" + localStorage.getItem(\"token\");\n\n\treturn fetch(baseUrl + \"blogReactions\", {\n\t\tmethod: \"POST\",\n\t\tbody: JSON.stringify(reac),\n\t\theaders: {\n\t\t\t\"Content-Type\": \"application/json\",\n\t\t\tAuthorization: bearer,\n\t\t},\n\t\t//credentials: \"same-origin\",\n\t})\n\t\t.then(\n\t\t\t(response) => {\n\t\t\t\tif (response.ok) {\n\t\t\t\t\treturn response;\n\t\t\t\t} else {\n\t\t\t\t\tvar error = new Error(\n\t\t\t\t\t\t\"Error \" + response.status + \": \" + response.statusText\n\t\t\t\t\t);\n\t\t\t\t\terror.response = response;\n\t\t\t\t\tthrow error;\n\t\t\t\t}\n\t\t\t},\n\t\t\t(error) => {\n\t\t\t\tthrow error;\n\t\t\t}\n\t\t)\n\t\t.then((response) => response.json())\n\t\t.then((response) => dispatch(addBReaction(response)))\n\t\t.catch((error) => {\n\t\t\tconsole.log(\"post reactions\", error.message);\n\t\t\talert(\"Your Reaction could not be posted\\nError: \" + error.message);\n\t\t});\n};\n\nexport const fetchBReactions = () => (dispatch) => {\n\treturn fetch(baseUrl + \"blogReactions\")\n\t\t.then(\n\t\t\t(response) => {\n\t\t\t\tif (response.ok) {\n\t\t\t\t\treturn response;\n\t\t\t\t} else {\n\t\t\t\t\tvar error = new Error(\n\t\t\t\t\t\t\"Error \" + response.status + \": \" + response.statusText\n\t\t\t\t\t);\n\t\t\t\t\terror.response = response;\n\t\t\t\t\tthrow error;\n\t\t\t\t}\n\t\t\t},\n\t\t\t(error) => {\n\t\t\t\tvar errmess = new Error(error.message);\n\t\t\t\tthrow errmess;\n\t\t\t}\n\t\t)\n\t\t.then((response) => response.json())\n\t\t.then((reactions) => dispatch(addBReactions(reactions)))\n\t\t.catch((error) => dispatch(reactionsBFailed(error.message)));\n};\n\nexport const reactionsBFailed = (errmess) => ({\n\ttype: ActionTypes.REACTIONS_BFAILED,\n\tpayload: errmess,\n});\n\nexport const addBReactions = (reactions) => ({\n\ttype: ActionTypes.ADD_BREACTIONS,\n\tpayload: reactions,\n});\n\nexport const deleteBReaction = (reacId) => (dispatch) => {\n\tconst bearer = \"Bearer \" + localStorage.getItem(\"token\");\n\n\treturn fetch(baseUrl + \"blogReactions/\" + reacId, {\n\t\tmethod: \"DELETE\",\n\t\theaders: {\n\t\t\t\"Content-Type\": \"application/json\",\n\t\t\tAuthorization: bearer\n\t\t},\n\t\tcredentials: \"same-origin\",\n\t})\n\t\t.then(\n\t\t\t(response) => {\n\t\t\t\tif (response.ok) {\n\t\t\t\t\treturn response;\n\t\t\t\t} else {\n\t\t\t\t\tvar error = new Error(\n\t\t\t\t\t\t\"Error \" + response.status + \": \" + response.statusText\n\t\t\t\t\t);\n\t\t\t\t\terror.response = response;\n\t\t\t\t\tthrow error;\n\t\t\t\t}\n\t\t\t},\n\t\t\t(error) => {\n\t\t\t\tthrow error;\n\t\t\t}\n\t\t)\n\t\t.then((response) => response.json())\n\t\t.then((reactions) => {\n\t\t\tconsole.log(\"Reaction Deleted\", reactions);\n\t\t\tdispatch(removeBReaction(reacId));\n\t\t})\n\t\t.catch((error) => {\n\t\t\tconsole.log(\"delete Reactions\", error.message);\n\t\t\talert(\"Your Reaction could not be deleted\\nError: \" + error.message);\n\t\t});\n};\n\nexport const removeBReaction = (reacId) => ({\n\ttype: ActionTypes.DELETE_BREACTION,\n\tpayload: reacId,\n});\n\n//---------------------------------------------BLOG COMMENTS---------------------------------------------------//\n\n\nexport const addBComment = (comment) => ({\n\ttype: ActionTypes.ADD_BCOMMENT,\n\tpayload: comment,\n});\n\nexport const postBComment = (comment) => (dispatch) => {\n\tconst newBComment = comment;\n\tnewBComment.dateNum = Date.now();\n\tconst bearer = \"Bearer \" + localStorage.getItem(\"token\");\n\n\treturn fetch(baseUrl + \"blogComments\", {\n\t\tmethod: \"POST\",\n\t\tbody: JSON.stringify(newBComment),\n\t\theaders: {\n\t\t\t\"Content-Type\": \"application/json\",\n\t\t\tAuthorization: bearer,\n\t\t},\n\t\t//credentials: \"same-origin\",\n\t})\n\t\t.then(\n\t\t\t(response) => {\n\t\t\t\tif (response.ok) {\n\t\t\t\t\treturn response;\n\t\t\t\t} else {\n\t\t\t\t\tvar error = new Error(\n\t\t\t\t\t\t\"Error \" + response.status + \": \" + response.statusText\n\t\t\t\t\t);\n\t\t\t\t\terror.response = response;\n\t\t\t\t\tthrow error;\n\t\t\t\t}\n\t\t\t},\n\t\t\t(error) => {\n\t\t\t\tthrow error;\n\t\t\t}\n\t\t)\n\t\t.then((response) => response.json())\n\t\t.then((response) => dispatch(addBComment(response)))\n\t\t.catch((error) => {\n\t\t\tdispatch(postFail(error.message))\n\t\t\tconsole.log(\"post comments\", error.message);\n\t\t});\n};\n\nexport const fetchBComments = () => (dispatch) => {\n\treturn fetch(baseUrl + \"blogComments\")\n\t\t.then(\n\t\t\t(response) => {\n\t\t\t\tif (response.ok) {\n\t\t\t\t\treturn response;\n\t\t\t\t} else {\n\t\t\t\t\tvar error = new Error(\n\t\t\t\t\t\t\"Error \" + response.status + \": \" + response.statusText\n\t\t\t\t\t);\n\t\t\t\t\terror.response = response;\n\t\t\t\t\tthrow error;\n\t\t\t\t}\n\t\t\t},\n\t\t\t(error) => {\n\t\t\t\tvar errmess = new Error(error.message);\n\t\t\t\tthrow errmess;\n\t\t\t}\n\t\t)\n\t\t.then((response) => response.json())\n\t\t.then((comments) => dispatch(addBComments(comments)))\n\t\t.catch((error) => dispatch(commentsBFailed(error.message)));\n};\n\nexport const commentsBFailed = (errmess) => ({\n\ttype: ActionTypes.COMMENTS_BFAILED,\n\tpayload: errmess,\n});\n\nexport const addBComments = (comments) => ({\n\ttype: ActionTypes.ADD_BCOMMENTS,\n\tpayload: comments,\n});\n\nexport const deleteBComment = (commentId) => (dispatch) => {\n\tconst bearer = \"Bearer \" + localStorage.getItem(\"token\");\n\n\treturn fetch(baseUrl + \"blogComments/\" + commentId, {\n\t\tmethod: \"DELETE\",\n\t\theaders: {\n\t\t\t\"Content-Type\": \"application/json\",\n\t\t\tAuthorization: bearer\n\t\t},\n\t\tcredentials: \"same-origin\",\n\t})\n\t\t.then(\n\t\t\t(response) => {\n\t\t\t\tif (response.ok) {\n\t\t\t\t\treturn response;\n\t\t\t\t} else {\n\t\t\t\t\tvar error = new Error(\n\t\t\t\t\t\t\"Error \" + response.status + \": \" + response.statusText\n\t\t\t\t\t);\n\t\t\t\t\terror.response = response;\n\t\t\t\t\tthrow error;\n\t\t\t\t}\n\t\t\t},\n\t\t\t(error) => {\n\t\t\t\tthrow error;\n\t\t\t}\n\t\t)\n\t\t.then((response) => response.json())\n\t\t.then((comments) => {\n\t\t\tconsole.log(\"Comment Deleted\", comments);\n\t\t\tdispatch(removeBComment(commentId));\n\t\t})\n\t\t.catch((error) => {\n\t\t\tconsole.log(\"delete comments\", error.message);\n\t\t\talert(\"Your comment could not be deleted\\nError: \" + error.message);\n\t\t});\n};\n\nexport const removeBComment = (commentId) => ({\n\ttype: ActionTypes.DELETE_BCOMMENT,\n\tpayload: commentId,\n});\n\n\n//---------------------------------------BLOG DEMANDS------------------------------------------------//\nexport {userBlogDemands};\n\nexport const addBlogDemand = (blogDemand) => ({\n\ttype: ActionTypes.ADD_BLOGDEMAND,\n\tpayload: blogDemand,\n});\n\nexport const postBlogDemand = (blogDemand) => (dispatch) => {\n\tconst newBlogDemand = blogDemand;\n\tnewBlogDemand.dateNum = Date.now();\n\tconst bearer = \"Bearer \" + localStorage.getItem(\"token\");\n\n\treturn fetch(baseUrl + \"blogDemands\", {\n\t\tmethod: \"POST\",\n\t\tbody: JSON.stringify(newBlogDemand),\n\t\theaders: {\n\t\t\t\"Content-Type\": \"application/json\",\n\t\t\tAuthorization: bearer,\n\t\t},\n\t\t//credentials: \"same-origin\"\n\t})\n\t\t.then(\n\t\t\t(response) => {\n\t\t\t\tif (response.ok) {\n\t\t\t\t\treturn response;\n\t\t\t\t} else {\n\t\t\t\t\tvar error = new Error(\n\t\t\t\t\t\t\"Error \" + response.status + \": \" + response.statusText\n\t\t\t\t\t);\n\t\t\t\t\terror.response = response;\n\t\t\t\t\tthrow error;\n\t\t\t\t}\n\t\t\t},\n\t\t\t(error) => {\n\t\t\t\tthrow error;\n\t\t\t}\n\t\t)\n\t\t.then((response) => response.json())\n\t\t.then((response) => dispatch(addBlogDemand(response)))\n\t\t.catch((error) => {\n\t\t\tconsole.log(\"post blogDemands\", error.message);\n\t\t\talert(\"Your blogDemand could not be posted\\nError: \" + error.message);\n\t\t});\n};\n\nexport const fetchBlogDemands = (interests) => (dispatch) => {\n\tdispatch(blogDemandsLoading(true));\n\n\treturn fetch(baseUrl + \"blogDemands?interests=\"+interests)\n\t\t.then(\n\t\t\t(response) => {\n\t\t\t\tif (response.ok) {\n\t\t\t\t\treturn response;\n\t\t\t\t} else {\n\t\t\t\t\tvar error = new Error(\n\t\t\t\t\t\t\"Error \" + response.status + \": \" + response.statusText\n\t\t\t\t\t);\n\t\t\t\t\terror.response = response;\n\t\t\t\t\tthrow error;\n\t\t\t\t}\n\t\t\t},\n\t\t\t(error) => {\n\t\t\t\tvar errmess = new Error(error.message);\n\t\t\t\tthrow errmess;\n\t\t\t}\n\t\t)\n\t\t.then((response) => response.json())\n\t\t.then((blogDemands) => dispatch(addBlogDemands(blogDemands)))\n\t\t.catch((error) => dispatch(blogDemandsFailed(error.message)));\n};\n\n\nexport const deleteBlogDemand = (blogDemandId) => (dispatch) => {\n\tconst bearer = \"Bearer \" + localStorage.getItem(\"token\");\n\n\treturn fetch(baseUrl + \"blogDemands/\" + blogDemandId, {\n\t\tmethod: \"DELETE\",\n\t\theaders: {\n\t\t\t\"Content-Type\": \"application/json\",\n\t\t\tAuthorization: bearer,\n\t\t},\n        //credentials: \"same-origin\"\n    })\n    .then(response => {\n        if (response.ok) {\n          return response;\n        } else {\n          var error = new Error('Error ' + response.status + ': ' + response.statusText);\n          error.response = response;\n          throw error;\n        }\n      },\n      error => {\n            throw error;\n      })\n    .then(response => response.json())\n    .then(() => dispatch(removeBlogDemand(blogDemandId)))\n\t.then(() => console.log('BlogDemand deleted!!'))\n    .catch(error => dispatch(blogDemandsFailed(error.message)));\n};\n\nexport const removeBlogDemand = (blogDemandId) => ({\n\ttype: ActionTypes.DELETE_BLOGDEMAND,\n\tpayload: blogDemandId,\n});\n\nexport const blogDemandsLoading = () => ({\n\ttype: ActionTypes.BLOGDEMANDS_LOADING,\n});\n\nexport const blogDemandsFailed = (errmess) => ({\n\ttype: ActionTypes.BLOGDEMANDS_FAILED,\n\tpayload: errmess,\n});\n\nexport const addBlogDemands = (blogdemands) => ({\n\ttype: ActionTypes.ADD_BLOGDEMANDS,\n\tpayload: blogdemands,\n});\n\n\n\n\n\n\n\n\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}