{"ast":null,"code":"import * as ActionTypes from \"../ActionTypes\";\nexport const BlogDemands = (state = {\n  isLoading: true,\n  errMess: null,\n  blogDemands: []\n}, action) => {\n  switch (action.type) {\n    case ActionTypes.ADD_BLOGDEMANDS:\n      return { ...state,\n        isLoading: false,\n        errMess: null,\n        blogDemands: action.payload\n      };\n\n    case ActionTypes.BLOGDEMANDS_FAILED:\n      return { ...state,\n        isLoading: false,\n        errMess: action.payload\n      };\n\n    case ActionTypes.BLOGDEMANDS_LOADING:\n      return { ...state,\n        isLoading: true,\n        errMess: null,\n        blogDemands: []\n      };\n\n    case ActionTypes.ADD_BLOGDEMAND:\n      var blogDemand = action.payload;\n      return { ...state,\n        blogDemands: state.blogDemands.concat(blogDemand)\n      };\n\n    case ActionTypes.DELETE_BLOGDEMAND:\n      var blogDemandId = action.payload;\n      var index = state.blogDemands.indexOf(state.blogDemands.filter(blogDemand => blogDemand._id === blogDemandId)[0]);\n      state.blogDemands.splice(index, 1);\n      return { ...state,\n        blogDemands: state.blogDemands\n      };\n\n    default:\n      return state;\n  }\n};\n_c = BlogDemands;\nexport const userBlogDemands = (state = {\n  isLoading: true,\n  errMess: null,\n  blogDemands: []\n}, action) => {\n  switch (action.type) {\n    case ActionTypes.GET_USER_BLOG_DEMANDS:\n      return { ...state,\n        isLoading: false,\n        errMess: null,\n        blogDemands: action.payload\n      };\n\n    case ActionTypes.USER_BLOG_DEMAND_LOADING:\n      return { ...state,\n        isLoading: true,\n        errMess: null,\n        blogDemands: []\n      };\n\n    case ActionTypes.USER_BLOG_DEMANDS_FAILED:\n      return { ...state,\n        isLoading: false,\n        errMess: action.payload.err,\n        blogDemands: []\n      };\n\n    default:\n      return state;\n  }\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"BlogDemands\");","map":{"version":3,"sources":["/home/jaskaran/Desktop/Poogle/src/redux/reducers/blogDemands.js"],"names":["ActionTypes","BlogDemands","state","isLoading","errMess","blogDemands","action","type","ADD_BLOGDEMANDS","payload","BLOGDEMANDS_FAILED","BLOGDEMANDS_LOADING","ADD_BLOGDEMAND","blogDemand","concat","DELETE_BLOGDEMAND","blogDemandId","index","indexOf","filter","_id","splice","userBlogDemands","GET_USER_BLOG_DEMANDS","USER_BLOG_DEMAND_LOADING","USER_BLOG_DEMANDS_FAILED","err"],"mappings":"AAAA,OAAO,KAAKA,WAAZ,MAA6B,gBAA7B;AAEA,OAAO,MAAMC,WAAW,GAAG,CAC1BC,KAAK,GAAG;AAAEC,EAAAA,SAAS,EAAE,IAAb;AAAmBC,EAAAA,OAAO,EAAE,IAA5B;AAAkCC,EAAAA,WAAW,EAAE;AAA/C,CADkB,EAE1BC,MAF0B,KAGtB;AACJ,UAAQA,MAAM,CAACC,IAAf;AACC,SAAKP,WAAW,CAACQ,eAAjB;AACC,aAAO,EACN,GAAGN,KADG;AAENC,QAAAA,SAAS,EAAE,KAFL;AAGNC,QAAAA,OAAO,EAAE,IAHH;AAINC,QAAAA,WAAW,EAAEC,MAAM,CAACG;AAJd,OAAP;;AAOD,SAAKT,WAAW,CAACU,kBAAjB;AACC,aAAO,EAAE,GAAGR,KAAL;AAAYC,QAAAA,SAAS,EAAE,KAAvB;AAA8BC,QAAAA,OAAO,EAAEE,MAAM,CAACG;AAA9C,OAAP;;AAED,SAAKT,WAAW,CAACW,mBAAjB;AACC,aAAO,EAAE,GAAGT,KAAL;AAAYC,QAAAA,SAAS,EAAE,IAAvB;AAA6BC,QAAAA,OAAO,EAAE,IAAtC;AAA4CC,QAAAA,WAAW,EAAE;AAAzD,OAAP;;AAED,SAAKL,WAAW,CAACY,cAAjB;AACE,UAAIC,UAAU,GAAGP,MAAM,CAACG,OAAxB;AACA,aAAO,EAAE,GAAGP,KAAL;AAAYG,QAAAA,WAAW,EAAEH,KAAK,CAACG,WAAN,CAAkBS,MAAlB,CAAyBD,UAAzB;AAAzB,OAAP;;AAEF,SAAKb,WAAW,CAACe,iBAAjB;AACE,UAAIC,YAAY,GAAGV,MAAM,CAACG,OAA1B;AACA,UAAIQ,KAAK,GAAGf,KAAK,CAACG,WAAN,CAAkBa,OAAlB,CAA0BhB,KAAK,CAACG,WAAN,CAAkBc,MAAlB,CAAyBN,UAAU,IAAIA,UAAU,CAACO,GAAX,KAAmBJ,YAA1D,EAAwE,CAAxE,CAA1B,CAAZ;AACAd,MAAAA,KAAK,CAACG,WAAN,CAAkBgB,MAAlB,CAAyBJ,KAAzB,EAAgC,CAAhC;AACA,aAAO,EAAC,GAAGf,KAAJ;AAAWG,QAAAA,WAAW,EAAEH,KAAK,CAACG;AAA9B,OAAP;;AAEF;AACC,aAAOH,KAAP;AA1BF;AA4BA,CAhCM;KAAMD,W;AAkCb,OAAO,MAAMqB,eAAe,GAAG,CAACpB,KAAK,GAAC;AAACC,EAAAA,SAAS,EAAE,IAAZ;AAAkBC,EAAAA,OAAO,EAAE,IAA3B;AAAiCC,EAAAA,WAAW,EAAE;AAA9C,CAAP,EAA0DC,MAA1D,KAAmE;AACjG,UAAOA,MAAM,CAACC,IAAd;AACC,SAAKP,WAAW,CAACuB,qBAAjB;AACC,aAAO,EAAC,GAAGrB,KAAJ;AAAWC,QAAAA,SAAS,EAAC,KAArB;AAA4BC,QAAAA,OAAO,EAAC,IAApC;AAA0CC,QAAAA,WAAW,EAACC,MAAM,CAACG;AAA7D,OAAP;;AACD,SAAKT,WAAW,CAACwB,wBAAjB;AACC,aAAO,EAAC,GAAGtB,KAAJ;AAAWC,QAAAA,SAAS,EAAC,IAArB;AAA2BC,QAAAA,OAAO,EAAC,IAAnC;AAAyCC,QAAAA,WAAW,EAAC;AAArD,OAAP;;AACD,SAAKL,WAAW,CAACyB,wBAAjB;AACC,aAAO,EAAC,GAAGvB,KAAJ;AAAWC,QAAAA,SAAS,EAAC,KAArB;AAA4BC,QAAAA,OAAO,EAACE,MAAM,CAACG,OAAP,CAAeiB,GAAnD;AAAwDrB,QAAAA,WAAW,EAAC;AAApE,OAAP;;AACD;AACC,aAAOH,KAAP;AARF;AAYA,CAbM","sourcesContent":["import * as ActionTypes from \"../ActionTypes\";\n\nexport const BlogDemands = (\n\tstate = { isLoading: true, errMess: null, blogDemands: [] },\n\taction\n) => {\n\tswitch (action.type) {\n\t\tcase ActionTypes.ADD_BLOGDEMANDS:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tisLoading: false,\n\t\t\t\terrMess: null,\n\t\t\t\tblogDemands: action.payload,\n\t\t\t};\n\n\t\tcase ActionTypes.BLOGDEMANDS_FAILED:\n\t\t\treturn { ...state, isLoading: false, errMess: action.payload };\n\n\t\tcase ActionTypes.BLOGDEMANDS_LOADING:\n\t\t\treturn { ...state, isLoading: true, errMess: null, blogDemands: [] };\n\n\t\tcase ActionTypes.ADD_BLOGDEMAND:\n\t\t\t\tvar blogDemand = action.payload;\n\t\t\t\treturn { ...state, blogDemands: state.blogDemands.concat(blogDemand)};\t\n\t\t\n\t\tcase ActionTypes.DELETE_BLOGDEMAND: \n\t\t\t\tvar blogDemandId = action.payload;\n\t\t\t\tvar index = state.blogDemands.indexOf(state.blogDemands.filter(blogDemand => blogDemand._id === blogDemandId)[0]);\n\t\t\t\tstate.blogDemands.splice(index, 1);\n\t\t\t\treturn {...state, blogDemands: state.blogDemands}\n\t\n\t\tdefault:\n\t\t\treturn state;\n\t}\n};\n\nexport const userBlogDemands = (state={isLoading: true, errMess: null, blogDemands: []}, action)=>{\n\tswitch(action.type){\n\t\tcase ActionTypes.GET_USER_BLOG_DEMANDS:\n\t\t\treturn {...state, isLoading:false, errMess:null, blogDemands:action.payload}\n\t\tcase ActionTypes.USER_BLOG_DEMAND_LOADING:\n\t\t\treturn {...state, isLoading:true, errMess:null, blogDemands:[]}\n\t\tcase ActionTypes.USER_BLOG_DEMANDS_FAILED:\n\t\t\treturn {...state, isLoading:false, errMess:action.payload.err, blogDemands:[]}\n\t\tdefault:\n\t\t\treturn state;\n\n\t}\n\n};"]},"metadata":{},"sourceType":"module"}