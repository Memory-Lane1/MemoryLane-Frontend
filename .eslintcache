[{"D:\\project\\final\\Poogle\\src\\index.js":"1","D:\\project\\final\\Poogle\\src\\reportWebVitals.js":"2","D:\\project\\final\\Poogle\\src\\redux\\configureStore.js":"3","D:\\project\\final\\Poogle\\src\\App.js":"4","D:\\project\\final\\Poogle\\src\\history.js":"5","D:\\project\\final\\Poogle\\src\\redux\\reducers\\comments.js":"6","D:\\project\\final\\Poogle\\src\\redux\\reducers\\spaces.js":"7","D:\\project\\final\\Poogle\\src\\redux\\reducers\\questions.js":"8","D:\\project\\final\\Poogle\\src\\redux\\reducers\\answers.js":"9","D:\\project\\final\\Poogle\\src\\redux\\reducers\\chat.js":"10","D:\\project\\final\\Poogle\\src\\redux\\reducers\\user_reducer.js":"11","D:\\project\\final\\Poogle\\src\\redux\\reducers\\qReactions.js":"12","D:\\project\\final\\Poogle\\src\\redux\\reducers\\aReactions.js":"13","D:\\project\\final\\Poogle\\src\\redux\\reducers\\authReducer.js":"14","D:\\project\\final\\Poogle\\src\\redux\\reducers\\blogs.js":"15","D:\\project\\final\\Poogle\\src\\redux\\reducers\\contactUs.js":"16","D:\\project\\final\\Poogle\\src\\redux\\reducers\\bReactions.js":"17","D:\\project\\final\\Poogle\\src\\redux\\reducers\\blogDemands.js":"18","D:\\project\\final\\Poogle\\src\\redux\\reducers\\updateUser.js":"19","D:\\project\\final\\Poogle\\src\\components\\scroll-to-top\\scroll-to-top.js":"20","D:\\project\\final\\Poogle\\src\\components\\main.js":"21","D:\\project\\final\\Poogle\\src\\redux\\reducers\\bComments.js":"22","D:\\project\\final\\Poogle\\src\\components\\sidebar\\sidebar.js":"23","D:\\project\\final\\Poogle\\src\\components\\header_footer\\header.js":"24","D:\\project\\final\\Poogle\\src\\components\\header_footer\\footer.js":"25","D:\\project\\final\\Poogle\\src\\redux\\ActionTypes.js":"26","D:\\project\\final\\Poogle\\src\\redux\\ActionCreators.js":"27","D:\\project\\final\\Poogle\\src\\components\\home_page\\home.js":"28","D:\\project\\final\\Poogle\\src\\components\\followed-spaces\\Spaces.js":"29","D:\\project\\final\\Poogle\\src\\components\\all_blog_page\\blogs.js":"30","D:\\project\\final\\Poogle\\src\\components\\all_ques_page\\questions.js":"31","D:\\project\\final\\Poogle\\src\\components\\single_ques\\SingleQues.js":"32","D:\\project\\final\\Poogle\\src\\components\\chat\\Chat.js":"33","D:\\project\\final\\Poogle\\src\\components\\profile_page\\profile.js":"34","D:\\project\\final\\Poogle\\src\\components\\login_signup\\login.js":"35","D:\\project\\final\\Poogle\\src\\components\\login_signup\\signup.js":"36","D:\\project\\final\\Poogle\\src\\components\\login_signup\\logout.js":"37","D:\\project\\final\\Poogle\\src\\components\\ContactUs\\contact.js":"38","D:\\project\\final\\Poogle\\src\\components\\add_forms\\addQuestions.js":"39","D:\\project\\final\\Poogle\\src\\components\\add_forms\\addBlogs.js":"40","D:\\project\\final\\Poogle\\src\\components\\aboutUs\\aboutUs.js":"41","D:\\project\\final\\Poogle\\src\\components\\single-blog\\SingleBlog.js":"42","D:\\project\\final\\Poogle\\src\\components\\all_blogDemands_page\\all_blogDemands.js":"43","D:\\project\\final\\Poogle\\src\\components\\news\\NewsProvider.js":"44","D:\\project\\final\\Poogle\\src\\components\\loading.js":"45","D:\\project\\final\\Poogle\\src\\redux\\actions\\auth.js":"46","D:\\project\\final\\Poogle\\src\\redux\\actions\\user.js":"47","D:\\project\\final\\Poogle\\src\\redux\\actions\\questions.js":"48","D:\\project\\final\\Poogle\\src\\redux\\actions\\contact.js":"49","D:\\project\\final\\Poogle\\src\\redux\\actions\\answers.js":"50","D:\\project\\final\\Poogle\\src\\redux\\actions\\blogs.js":"51","D:\\project\\final\\Poogle\\src\\shared\\baseUrl.js":"52","D:\\project\\final\\Poogle\\src\\components\\news\\News.js":"53","D:\\project\\final\\Poogle\\src\\components\\news\\NewsContext.js":"54","D:\\project\\final\\Poogle\\src\\components\\variables.js":"55","D:\\project\\final\\Poogle\\src\\components\\login_signup\\loginCorousel.js":"56","D:\\project\\final\\Poogle\\src\\components\\profile_page\\about.js":"57","D:\\project\\final\\Poogle\\src\\components\\news\\NewsArticle.js":"58","D:\\project\\final\\Poogle\\src\\components\\chat\\ChatSideBar.js":"59","D:\\project\\final\\Poogle\\src\\redux\\actions\\chat.js":"60","D:\\project\\final\\Poogle\\src\\components\\chat\\PersonChatProfile.js":"61","D:\\project\\final\\Poogle\\src\\components\\all-category\\all-category.js":"62"},{"size":829,"mtime":1638335399138,"results":"63","hashOfConfig":"64"},{"size":356,"mtime":1638335399169,"results":"65","hashOfConfig":"64"},{"size":1589,"mtime":1638335399145,"results":"66","hashOfConfig":"64"},{"size":1289,"mtime":1638335398877,"results":"67","hashOfConfig":"64"},{"size":91,"mtime":1638335399128,"results":"68","hashOfConfig":"64"},{"size":1073,"mtime":1638335399150,"results":"69","hashOfConfig":"64"},{"size":845,"mtime":1638335399162,"results":"70","hashOfConfig":"64"},{"size":1798,"mtime":1638335399159,"results":"71","hashOfConfig":"64"},{"size":1804,"mtime":1638335399147,"results":"72","hashOfConfig":"64"},{"size":241,"mtime":1638335399149,"results":"73","hashOfConfig":"64"},{"size":588,"mtime":1638335399167,"results":"74","hashOfConfig":"64"},{"size":937,"mtime":1638335399151,"results":"75","hashOfConfig":"64"},{"size":1000,"mtime":1638335399146,"results":"76","hashOfConfig":"64"},{"size":1334,"mtime":1638335399147,"results":"77","hashOfConfig":"64"},{"size":1690,"mtime":1638335399149,"results":"78","hashOfConfig":"64"},{"size":416,"mtime":1638335399150,"results":"79","hashOfConfig":"64"},{"size":937,"mtime":1638335399148,"results":"80","hashOfConfig":"64"},{"size":1588,"mtime":1638335399148,"results":"81","hashOfConfig":"64"},{"size":519,"mtime":1638335399165,"results":"82","hashOfConfig":"64"},{"size":1320,"mtime":1638335399111,"results":"83","hashOfConfig":"64"},{"size":7068,"mtime":1638371867080,"results":"84","hashOfConfig":"64"},{"size":1087,"mtime":1638335399148,"results":"85","hashOfConfig":"64"},{"size":2804,"mtime":1638335399112,"results":"86","hashOfConfig":"64"},{"size":800,"mtime":1638335399078,"results":"87","hashOfConfig":"64"},{"size":2759,"mtime":1638335399077,"results":"88","hashOfConfig":"64"},{"size":3402,"mtime":1638335399140,"results":"89","hashOfConfig":"64"},{"size":31781,"mtime":1638335399139,"results":"90","hashOfConfig":"64"},{"size":4076,"mtime":1638335399080,"results":"91","hashOfConfig":"64"},{"size":11029,"mtime":1638335399076,"results":"92","hashOfConfig":"64"},{"size":9619,"mtime":1638335399052,"results":"93","hashOfConfig":"64"},{"size":14971,"mtime":1638335399066,"results":"94","hashOfConfig":"64"},{"size":30359,"mtime":1638335399117,"results":"95","hashOfConfig":"64"},{"size":7995,"mtime":1638335399071,"results":"96","hashOfConfig":"64"},{"size":22313,"mtime":1638335399110,"results":"97","hashOfConfig":"64"},{"size":7346,"mtime":1638335399082,"results":"98","hashOfConfig":"64"},{"size":15531,"mtime":1638426010584,"results":"99","hashOfConfig":"64"},{"size":2480,"mtime":1638335399084,"results":"100","hashOfConfig":"64"},{"size":5855,"mtime":1638335399046,"results":"101","hashOfConfig":"64"},{"size":12725,"mtime":1638347237713,"results":"102","hashOfConfig":"64"},{"size":7771,"mtime":1638335399047,"results":"103","hashOfConfig":"64"},{"size":8137,"mtime":1638335399047,"results":"104","hashOfConfig":"64"},{"size":8644,"mtime":1638335399114,"results":"105","hashOfConfig":"64"},{"size":11964,"mtime":1638335399050,"results":"106","hashOfConfig":"64"},{"size":296,"mtime":1638335399105,"results":"107","hashOfConfig":"64"},{"size":591,"mtime":1638335399081,"results":"108","hashOfConfig":"64"},{"size":5094,"mtime":1638348655810,"results":"109","hashOfConfig":"64"},{"size":1836,"mtime":1638335399145,"results":"110","hashOfConfig":"64"},{"size":823,"mtime":1638335399143,"results":"111","hashOfConfig":"64"},{"size":759,"mtime":1638335399143,"results":"112","hashOfConfig":"64"},{"size":855,"mtime":1638335399141,"results":"113","hashOfConfig":"64"},{"size":1589,"mtime":1638351348443,"results":"114","hashOfConfig":"64"},{"size":107,"mtime":1638348893482,"results":"115","hashOfConfig":"64"},{"size":777,"mtime":1638335399097,"results":"116","hashOfConfig":"64"},{"size":696,"mtime":1638335399101,"results":"117","hashOfConfig":"64"},{"size":9517,"mtime":1638335399118,"results":"118","hashOfConfig":"64"},{"size":2118,"mtime":1638335399082,"results":"119","hashOfConfig":"64"},{"size":9049,"mtime":1638371141333,"results":"120","hashOfConfig":"64"},{"size":1308,"mtime":1638335399099,"results":"121","hashOfConfig":"64"},{"size":2820,"mtime":1638335399072,"results":"122","hashOfConfig":"64"},{"size":964,"mtime":1638335399142,"results":"123","hashOfConfig":"64"},{"size":1991,"mtime":1638335399073,"results":"124","hashOfConfig":"64"},{"size":16343,"mtime":1638335399049,"results":"125","hashOfConfig":"64"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},"rdt5d6",{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133","usedDeprecatedRules":"128"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"136","usedDeprecatedRules":"128"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"151","usedDeprecatedRules":"128"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"158","usedDeprecatedRules":"128"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"169","usedDeprecatedRules":"128"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":"178","usedDeprecatedRules":"128"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"181","usedDeprecatedRules":"128"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"190","usedDeprecatedRules":"128"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"193","usedDeprecatedRules":"194"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"197","usedDeprecatedRules":"194"},{"filePath":"198","messages":"199","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"200","usedDeprecatedRules":"194"},{"filePath":"201","messages":"202","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"203","usedDeprecatedRules":"194"},{"filePath":"204","messages":"205","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"206","usedDeprecatedRules":"194"},{"filePath":"207","messages":"208","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"209","usedDeprecatedRules":"128"},{"filePath":"210","messages":"211","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"212","usedDeprecatedRules":"128"},{"filePath":"213","messages":"214","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"215","messages":"216","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"217","messages":"218","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"219","messages":"220","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"221","usedDeprecatedRules":"128"},{"filePath":"222","messages":"223","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"224","usedDeprecatedRules":"128"},{"filePath":"225","messages":"226","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"227","usedDeprecatedRules":"128"},{"filePath":"228","messages":"229","errorCount":0,"warningCount":19,"fixableErrorCount":0,"fixableWarningCount":0,"source":"230","usedDeprecatedRules":"194"},{"filePath":"231","messages":"232","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"233","usedDeprecatedRules":"194"},{"filePath":"234","messages":"235","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"236","messages":"237","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"238","messages":"239","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"240","usedDeprecatedRules":"128"},{"filePath":"241","messages":"242","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"243","messages":"244","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"245","messages":"246","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"247","messages":"248","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"249","messages":"250","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"251","messages":"252","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"253","messages":"254","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"255","usedDeprecatedRules":"128"},{"filePath":"256","messages":"257","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"258","usedDeprecatedRules":"128"},{"filePath":"259","messages":"260","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"261","messages":"262","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"263","messages":"264","errorCount":0,"warningCount":19,"fixableErrorCount":0,"fixableWarningCount":0,"source":"265","usedDeprecatedRules":"128"},{"filePath":"266","messages":"267","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"268","usedDeprecatedRules":"128"},{"filePath":"269","messages":"270","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"271","usedDeprecatedRules":"194"},{"filePath":"272","messages":"273","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"194"},{"filePath":"274","messages":"275","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"194"},{"filePath":"276","messages":"277","errorCount":0,"warningCount":20,"fixableErrorCount":0,"fixableWarningCount":0,"source":"278","usedDeprecatedRules":"194"},"D:\\project\\final\\Poogle\\src\\index.js",[],["279","280"],"D:\\project\\final\\Poogle\\src\\reportWebVitals.js",[],"D:\\project\\final\\Poogle\\src\\redux\\configureStore.js",["281"],"import { createStore, combineReducers, applyMiddleware, compose } from \"redux\";\r\nimport { Comments } from \"./reducers/comments\";\r\nimport { Spaces } from \"./reducers/spaces\";\r\nimport { Questions, userQuestions } from \"./reducers/questions\";\r\nimport { Answers, userAnswers } from \"./reducers/answers\";\r\nimport { user } from \"./reducers/user_reducer\";\r\nimport { Chat } from \"./reducers/chat\";\r\nimport { Qreactions } from \"./reducers/qReactions\";\r\nimport { Areactions } from \"./reducers/aReactions\";\r\nimport {Blogs, userBlogs} from './reducers/blogs'\r\nimport thunk from \"redux-thunk\";\r\nimport logger from \"redux-logger\";\r\nimport authReducer from \"./reducers/authReducer\";\r\nimport {contact} from './reducers/contactUs'\r\nimport { Breactions } from \"./reducers/bReactions\";\r\nimport { Bcomments } from \"./reducers/bComments\";\r\nimport { BlogDemands, userBlogDemands } from \"./reducers/blogDemands\";\r\nimport {updateUser} from './reducers/updateUser';\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nexport const ConfigureStore = () => {\r\n\tconst store = createStore(\r\n\t\tcombineReducers({\r\n\t\t\tspaces: Spaces,\r\n\t\t\tquestions: Questions,\r\n\t\t\tanswers: Answers,\r\n\t\t\tcomments: Comments,\r\n\t\t\tblogs:Blogs,\r\n\t\t\tqreactions: Qreactions,\r\n\t\t\tbreactions:Breactions,\r\n\t\t\tbcomments: Bcomments,\r\n\t\t\tblogDemands:BlogDemands,\r\n\t\t\tareactions: Areactions,\r\n\t\t\tuser,\r\n\t\t\tauth: authReducer,\r\n\t\t\tchats: Chat,\r\n\t\t\tcontact,\r\n\t\t\tupdateUser,\r\n\t\t\tuserQuestions,\r\n\t\t\tuserAnswers,\r\n\t\t\tuserBlogs, \r\n\t\t\tuserBlogDemands\r\n\t\t}),\r\n\t\tcomposeEnhancers(applyMiddleware(thunk))\r\n\t);\r\n\r\n\treturn store;\r\n};\r\n","D:\\project\\final\\Poogle\\src\\App.js",["282","283"],"import React, { useState } from \"react\";\r\nimport { BrowserRouter, Router } from \"react-router-dom\";\r\nimport Main from \"./components/main\";\r\nimport ScrollToTop from './components/scroll-to-top/scroll-to-top';\r\nimport history from './history';\r\nimport {FaBars} from 'react-icons/fa';\r\nimport Sidebar from './components/sidebar/sidebar'\r\nimport Header from './components/header_footer/header'\r\nimport Footer from './components/header_footer/footer'\r\nimport './App.css';\r\n\r\nfunction App(props) {\r\n\tconst [collapsed, setCollapsed] = useState(false);\r\n\tconst [toggled, setToggled] = useState(false);\r\n\tconst handleCollapsedChange = (checked) => {\r\n\t\tsetCollapsed(checked);\r\n\t  };\r\n\tconst handleToggleSidebar = (value) => {\r\n\t\tsetToggled(value);\r\n\t};\r\n\t\r\n\t\r\n\treturn (\r\n\t\t<BrowserRouter>\r\n\t\t\t<Router history={history}>\r\n\t\t\t{/* <ScrollToTop> */}\r\n\t\t\t\t<div className={`app  ${toggled? 'toggled':''}`}>\r\n\t\t\t\t\t<Sidebar collapsed={collapsed} toggled={toggled} handleToggleSidebar={handleToggleSidebar}/>\r\n\t\t\t\t\t<main>\r\n\t\t\t\t\t\t<div className=\"btn-toggle\" onClick={() => handleToggleSidebar(true)}>\r\n\t\t\t\t\t\t\t<FaBars />\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<Header/>\r\n\t\t\t\t\t\t\t<Main />\r\n\t\t\t\t\t\t\t<Footer/>\r\n\t\t\t\t\t</main>\r\n\t\t\t\t</div>\r\n\t\t\t\t{/* </ScrollToTop> */}\r\n\r\n\t\t\t</Router>\r\n\t\t</BrowserRouter>\r\n\t);\r\n}\t\r\nexport default App;\r\n","D:\\project\\final\\Poogle\\src\\history.js",[],"D:\\project\\final\\Poogle\\src\\redux\\reducers\\comments.js",[],"D:\\project\\final\\Poogle\\src\\redux\\reducers\\spaces.js",[],"D:\\project\\final\\Poogle\\src\\redux\\reducers\\questions.js",[],"D:\\project\\final\\Poogle\\src\\redux\\reducers\\answers.js",[],"D:\\project\\final\\Poogle\\src\\redux\\reducers\\chat.js",[],"D:\\project\\final\\Poogle\\src\\redux\\reducers\\user_reducer.js",["284"],"import {USER_LOADING, USER_FAILED, GET_USER, UPDATE_USER} from \"../ActionTypes\";\r\n\r\nexport const user = (state = { isLoading: true, \r\n                                errMess: null, user: null \r\n                            }, action) => {\r\n\tswitch (action.type) {\r\n\t\tcase USER_FAILED:\r\n\t\t\treturn { ...state, isLoading: false, errMess: action.payload };\r\n\r\n\t\tcase GET_USER:\r\n\t\t\treturn { ...state, isLoading: false, errMess: null, user: action.payload };\r\n\t\t\r\n\t\tcase USER_LOADING:\r\n\t\t\treturn {...state, isLoading: true, errMess: null, user: {}};\r\n\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n};\r\n\r\n\r\n","D:\\project\\final\\Poogle\\src\\redux\\reducers\\qReactions.js",[],"D:\\project\\final\\Poogle\\src\\redux\\reducers\\aReactions.js",[],"D:\\project\\final\\Poogle\\src\\redux\\reducers\\authReducer.js",["285"],"const INITIAL_STATE = {\r\n    isSignedIn:localStorage.getItem('isSignedIn')||false,\r\n    interests:localStorage.getItem('interests')||\"\",\r\n    userId:localStorage.getItem('userId'),\r\n    token: localStorage.getItem('token'),\r\n    err:null\r\n    , postFail: false, postFailMess: '' \r\n}\r\nexport default (state=INITIAL_STATE,action)=>{\r\n    switch(action.type){\r\n        case 'SIGN_UP':\r\n            return{...state, isSignedIn:true, interests:action.payload.user.interests, userId:action.payload.user._id, token:action.payload.token, err:null, postFail: false, postFailMess: '' }\r\n        case 'SIGN_IN':\r\n            return{...state, isSignedIn:true,interests:action.payload.user.interests, userId:action.payload.user._id, token:action.payload.token, err:null, postFail: false, postFailMess: '' }\r\n        case 'SIGN_OUT':\r\n            return{...state, isSignedIn:false, interests:\"\", userId:null, token:null, err:null, postFail: false, postFailMess: '' }\r\n        case 'AUTH_FAILED':\r\n            return {...state, isSignedIn:false, interests:\"\", userId:null, token:null, err:action.payload.error, postFail: false, postFailMess: '' }\r\n        \r\n        case 'POST_FAIL':\r\n            return { ...state, \r\n                postFail: true, postFailMess: action.payload\r\n            }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}","D:\\project\\final\\Poogle\\src\\redux\\reducers\\blogs.js",[],"D:\\project\\final\\Poogle\\src\\redux\\reducers\\contactUs.js",[],"D:\\project\\final\\Poogle\\src\\redux\\reducers\\bReactions.js",[],"D:\\project\\final\\Poogle\\src\\redux\\reducers\\blogDemands.js",[],"D:\\project\\final\\Poogle\\src\\redux\\reducers\\updateUser.js",["286"],"import {USER_LOADING, UPDATE_USER, UPDATE_FAILED} from \"../ActionTypes\";\r\n\r\nexport const updateUser = (state = { isLoading: true, \r\n                                errMess: null, user: null \r\n                            }, action) => {\r\n\tswitch (action.type) {\r\n\t\tcase UPDATE_FAILED:\r\n\t\t\treturn { ...state, isLoading: false,user:null, errMess: action.payload };\r\n\r\n        case UPDATE_USER:\r\n            return {...state, isLoading:false, errMess:null, user:action.payload};\r\n\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n};\r\n\r\n\t","D:\\project\\final\\Poogle\\src\\components\\scroll-to-top\\scroll-to-top.js",[],"D:\\project\\final\\Poogle\\src\\components\\main.js",[],"D:\\project\\final\\Poogle\\src\\redux\\reducers\\bComments.js",[],"D:\\project\\final\\Poogle\\src\\components\\sidebar\\sidebar.js",["287","288","289","290","291","292","293","294","295","296","297","298","299","300","301","302"],"import React, {useState} from 'react';\r\nimport {useSelector, useDispatch, connect} from 'react-redux';\r\nimport { ProSidebar, SidebarHeader,  SidebarFooter, SidebarContent,Menu, MenuItem, SubMenu} from 'react-pro-sidebar';\r\nimport 'react-pro-sidebar/dist/css/styles.css';\r\nimport '../main';\r\nimport {Link} from 'react-router-dom';\r\nimport {Container, Row, Col, Image, Navbar,Nav, NavDropdown} from 'react-bootstrap';\r\nimport { FaHome, FaGem, FaStickyNote, FaBlog, FaQuestionCircle, FaNewspaper} from 'react-icons/fa';\r\nimport Logo from '../../Images/logo_1.png'\r\nimport {MdContactMail} from 'react-icons/md'\r\nimport {RiTeamLine} from 'react-icons/ri'\r\nimport {HiChat} from 'react-icons/hi'\r\nimport './sidebar.css'\r\n\r\n\r\nconst renderSignIn = (status)=>{\r\n  if(status.isSignedIn){\r\n    return(\r\n      <>\r\n      <MenuItem icon={<span className='fa fa-user-circle'/>}>\r\n        Profile <Link to={\"/profile/\"+status.userId}/>\r\n      </MenuItem>\r\n\r\n      <MenuItem icon={<span className='fa fa-sign-in'/>}>\r\n        Logout <Link to=\"/logout\"/>\r\n      </MenuItem> \r\n      </>\r\n    )\r\n  }else{\r\n    return(\r\n      <>\r\n      <MenuItem icon={<span className='fa fa-sign-in'/>}>\r\n        Login <Link to=\"/login\"/>\r\n      </MenuItem>\r\n      <MenuItem icon={<span className='fa fa-sign-in'/>}>\r\n        Signup <Link to=\"/signup\"/>\r\n      </MenuItem>\r\n      </>\r\n    )\r\n  }\r\n\r\n}\r\n\r\nconst renderSignInTop = (status)=>{\r\n  if(status.isSignedIn){\r\n    return(\r\n      <>\r\n      <SubMenu title='Add' icon={<span className='fa fa-plus-circle'/>}>\r\n        <MenuItem>Image Resolution <Link to=\"/imageResolution\"/></MenuItem>\r\n        <MenuItem>Add Blog <Link to='/addBlog' /></MenuItem>\r\n      </SubMenu>\r\n    \r\n      </>\r\n    )\r\n  }\r\n  else return(\r\n    <>\r\n    </>\r\n  )\r\n}\r\n\r\nfunction Sidebar({collapsed, toggled, handleToggleSidebar, auth}){\r\nreturn(\r\n<ProSidebar breakPoint='md' collapsed={collapsed} \r\n          toggled={toggled} onToggle={handleToggleSidebar}\r\n>\r\n\r\n    <SidebarHeader>\r\n        MemoryLane\r\n        \r\n    </SidebarHeader>\r\n    \r\n    <SidebarContent>\r\n  <Menu iconShape=\"square\">\r\n    <MenuItem icon={<FaHome />}>\r\n      Home <Link to=\"/home\"/>\r\n    </MenuItem>\r\n    \r\n\r\n    {renderSignInTop(auth)}\r\n    \r\n\r\n\r\n    <MenuItem icon={<RiTeamLine />}>\r\n      About Us <Link to=\"/aboutUs\"/>\r\n    </MenuItem>\r\n    \r\n   <MenuItem icon={<FaNewspaper />}>\r\n      News <Link to=\"/news\"/>\r\n    </MenuItem>\r\n \r\n\r\n    <MenuItem icon={<MdContactMail />}>\r\n      Contact Us <Link to=\"/contact\"/>\r\n    </MenuItem>\r\n    \r\n    \r\n    {renderSignIn(auth)}\r\n    \r\n\r\n  </Menu>\r\n  </SidebarContent>\r\n  <SidebarFooter>\r\n      <p>All rights reserved</p>\r\n  </SidebarFooter>\r\n</ProSidebar>\r\n)\r\n}\r\nconst mapStateToProps = state =>{\r\n  return{\r\n    auth:state.auth\r\n  }\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, null)(Sidebar);\r\n","D:\\project\\final\\Poogle\\src\\components\\header_footer\\header.js",["303","304","305","306","307","308","309","310","311","312","313","314"],"import React, { Component } from 'react'\r\nimport {Link} from 'react-router-dom';\r\nimport { Button, Form, FormGroup, Label, Input } from 'reactstrap';\r\nimport {Container, Row, Col, Image, Navbar,Nav, NavDropdown} from 'react-bootstrap';\r\nimport {FaHome} from 'react-icons/fa';\r\nimport Logo from '../../Images/logo_1.png'\r\n\r\nimport './header_footer.css';\r\n\r\n\r\nclass header extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"header__section\">\r\n            <header className = \"header page__navigation\">\r\n                    <Link to=\"/\">\r\n                        <Image src={Logo} className=\"d-inline-block align-top\" id =\"CompanyImage\" alt=\"company_logo\"/>\r\n                    </Link>\r\n            </header>\r\n        </div>\r\n        )\r\n    }\r\n}\r\nexport default header\r\n","D:\\project\\final\\Poogle\\src\\components\\header_footer\\footer.js",[],"D:\\project\\final\\Poogle\\src\\redux\\ActionTypes.js",[],"D:\\project\\final\\Poogle\\src\\redux\\ActionCreators.js",[],"D:\\project\\final\\Poogle\\src\\components\\home_page\\home.js",["315","316","317","318","319","320","321"],"import React, { Component } from \"react\";\r\nimport questionMan from \"../../Images/question.jpg\";\r\nimport Blog from '../../Images/blog.png'\r\nimport Chat from '../../Images/chat1.png'\r\nimport signupBG from '../../Images/addJob.jpg';\r\nimport { Row, Col, Image } from \"react-bootstrap\";\r\nimport {\r\n  Jumbotron,\r\n  Button\r\n} from \"reactstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { zoomOut, slideInDown, slideInUp, bounce, flipInX, zoomIn } from 'react-animations';\r\nimport Radium, {StyleRoot} from 'radium';\r\nimport \"../followed-spaces/Spaces.css\";\r\nimport \"./home.css\";\r\nimport \"../all_ques_page/questions.css\";\r\n\r\nconst styles = {\r\n\tzoomIn: {\r\n\t  animation: 'x 1s',\r\n\t  animationName: Radium.keyframes(zoomIn, 'zoomIn')\r\n\t},\r\n\tslideInUp: {\r\n\t\tanimation: 'x 1s',\r\n\t\tanimationName: Radium.keyframes(slideInUp, 'slideInUp')\r\n\t  },\r\n\t  bounce: {\r\n\t\tanimation: 'x 1s',\r\n\t\tanimationName: Radium.keyframes(bounce, 'bounce')\r\n\t  },\r\n\t  flipInX: {\r\n\t\tanimation: 'x 1s',\r\n\t\tanimationName: Radium.keyframes(flipInX, 'flipInX')\r\n\t  },\r\n  }\r\n\r\nclass home extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      \r\n    };\r\n  }\r\n\r\n  render() {\r\n\r\n\t\t\treturn (\r\n\t\t\t\t<div>\t\r\n\t\t\t\t\t\r\n          \t\t\t<div>\r\n\t\t\t\t\t\t<div \r\n\t\t\t\t\t\t\tclassName='row mt-0 justify-content-center' style={{\r\n\t\t\t\t\t\t\tbackgroundImage : `url(${signupBG})`,\r\n\t\t\t\t\t\t\tbackgroundSize : \"cover\",\r\n\t\t\t\t\t\t\tpadding : \"5%\",\r\n\t\t\t\t\t\t\tmarginTop:'3rem',\r\n\t\t\t\t\t\t\tmarginBottom: '3rem',\r\n\t\t\t\t\t\t\tborderRadius:'0.8px'\r\n\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t<Jumbotron style={{opacity:0.9}} mt-2 mr-2>\r\n\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t<Row>\r\n\t\t\t\t\t\t\t<h4 className=\"display-8\" style={{marginLeft: '1rem', marginRight: '1rem', fontStyle:'oblique',fontWeight:'bolder',color:'black'}}>\r\n\t\t\t\t\t\t\tMemory Lane- Where memories rejuvenate.\r\n\t\t\t\t\t\t\t</h4>\r\n\t\t\t\t\t\t\t</Row>\r\n\t\t\t\t\t\t\t<Row>\r\n\t\t\t\t\t\t\t<p className=\"lead info-text\">\r\n\t\t\t\t\t\t\tOur project aims to provide the user with an interface wherein they can upload a low-quality image and receive the image with the resolution and sharpness greatly increased. There are many times when due to some factors like motion blur, poor resolution of the camera, or mist in the air, the image taken by us turns out worse than expected. In such a scenario, having software that can build upon the existing knowledge in the image captured to output the image in higher resolution and quality can be a powerful tool. Here, the phrase “better quality” refers to upscaling the image in terms of resolution without compromising its quality.\r\n\r\n\t\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t\t</Row>\r\n\t\t\t\t\t\t\t{!this.props.auth.isSignedIn\r\n\t\t\t\t\t\t\t?\r\n\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t<hr className=\"my-2\" />\r\n\t\t\t\t\t\t\t<p className='info-text'>\r\n\t\t\t\t\t\t\t\tSo, What are you waiting for? <br/>\r\n\t\t\t\t\t\t\t\tTry to improve Resolution!!.\r\n\t\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t\t<p className=\"lead\">\r\n\t\t\t\t\t\t\t\t<Button color=\"primary\" to=\"/login\"><span className='fa fa-lg fa-sign-in mr-2 ml-2' /><Link to=\"/Login\"><b style={{color:'white'}}>Login</b></Link></Button>\r\n\t\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t:\r\n\t\t\t\t\t\t\t<div></div>\r\n  \t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</Jumbotron>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t\r\n\t\t\t\t\t<div \r\n\t\t\t\t\t\t\tclassName='row mt-0 justify-content-center' style={{\r\n\t\t\t\t\t\t\tbackgroundImage : `url(${questionMan})`,\r\n\t\t\t\t\t\t\tbackgroundSize : \"cover\",\r\n\t\t\t\t\t\t\tpadding : \"5%\",\r\n\t\t\t\t\t\t\tmarginTop:'4rem',\r\n\t\t\t\t\t\t\tmarginBottom: '4rem',\r\n\t\t\t\t\t\t\t//marginLeft: '3rem',\r\n\t\t\t\t\t\t\t//marginRight: '3rem',\r\n\t\t\t\t\t\t\tborderRadius:'0.8px'\r\n\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t<Jumbotron style={{opacity:0.9}} mt-2 mr-2>\r\n\t\t\t\t\t\t<Col sm={12} className=\"mainsection__row\">\r\n\t\t\t\t\t\t\t\t\t<h2 id=\"main_text\">\r\n\t\t\t\t\t\t\t\t\t\tHave an Astronomical Image?\r\n\t\t\t\t\t\t\t\t\t\t<br />\r\n\t\t\t\t\t\t\t\t\t\t<br />\r\n\t\t\t\t\t\t\t\t\t</h2>\r\n\r\n\t\t\t\t\t\t\t\t\t<h4>Check out the feature here.</h4>\r\n\t\t\t\t\t\t\t\t\t<br/>\r\n\t\t\t\t\t\t\t\t\t<h7 className='dev-name' ></h7>\r\n\t\t\t\t\t\t\t\t\t<br />\r\n\t\t\t\t\t\t\t\t\t<br/>\r\n\t\t\t\t\t\t\t\t\t<Link to='/imageResolution'>\r\n\t\t\t\t\t\t\t\t\t<button className=\"header__btn__link btn--text btn--scroll-to\">\r\n\t\t\t\t\t\t\t\t\t\tClick Here&rarr;{\" \"}\r\n\t\t\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t</Jumbotron>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t);\r\n\t\t}\r\n\t}\r\n\r\nexport default home;\r\n","D:\\project\\final\\Poogle\\src\\components\\followed-spaces\\Spaces.js",["322","323","324","325","326","327"],"import React, {Component} from 'react';\r\nimport { Card, Button, FormGroup, Label, Input,\r\n    CardTitle, Breadcrumb, BreadcrumbItem, CardBody, CardSubtitle, CardImg} from 'reactstrap';\r\nimport {Link} from 'react-router-dom';\r\nimport { connect } from \"react-redux\";\r\nimport Form from 'react-bootstrap/Form';\r\nimport Select from 'react-select'\r\nimport ReactImageAppear from 'react-image-appear';\r\nimport Loading from '../loading';\r\nimport {spaces} from '../variables'; \r\nimport { baseUrl } from '../../shared/baseUrl'\r\nimport './Spaces.css'\r\nimport {ChangeSpaces} from '../../redux/ActionCreators'\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\n\r\n    class Spaces extends Component {\r\n\r\n        constructor(props) {\r\n\r\n            super(props);\r\n\r\n            this.handleSearch = this.handleSearch.bind(this);\r\n            this.state = {\r\n\r\n                category:\"\",\r\n                errors:{\r\n                    category:'',\r\n                  },\r\n                data: [],\r\n            }\r\n\r\n            this.arrayHolder = [];\r\n            this.handleMultiSelectChange = this.handleMultiSelectChange.bind(this)\r\n        }\r\n\r\n        handleMultiSelectChange = category => {\r\n            this.setState({ category:category })\r\n            }\r\n\r\n        handleSearch(event) {\r\n            this.searchFilterFunction(this.searchSpace.value)\r\n            event.preventDefault();\r\n        }\r\n\r\n        componentDidMount() {\r\n\r\n            this.setState({\r\n                data: this.props.spaces.spaces\r\n            });\r\n\r\n            this.arrayHolder = this.props.spaces.spaces\r\n        }\r\n\r\n\r\n        searchFilterFunction = text => {\r\n        \r\n            const newData = this.arrayHolder.filter(item => {\r\n              const itemData = `${item.name.toUpperCase()}`;\r\n              const textData = text.toUpperCase();\r\n        \r\n              return itemData.indexOf(textData) > -1;\r\n            });\r\n    \r\n            this.setState({\r\n              data: newData,\r\n            });\r\n        };\r\n\r\n        notifyS = (message) => toast.success(message);\r\n        notifyF = (message) => toast.error(message);\r\n        notifyI = (message) => toast.info(message);\r\n\r\n        handleSubmit = async (event) => {\r\n            event.preventDefault();\r\n            const isValid = this.formValidation();\r\n            console.log(this.state);\r\n            \r\n            if(isValid){\r\n                window.alert(\"Form Submitted\");\r\n                \r\n                var tagNames = [];\r\n                var tagIds = [];\r\n                var len = this.state.category.length;\r\n                 for(var i=0;i<len;i++)\r\n                {\r\n                  tagNames.push(this.state.category[i].label);\r\n                  tagIds.push(this.state.category[i].value);\r\n                }\r\n                const newQuestion = {\r\n                  heading: this.state.title,\r\n                  tagNames: tagNames,\r\n                  tagIds: tagIds,\r\n                  description: this.state.description,\r\n                  author: this.props.auth.userId\r\n                };\r\n    \r\n                await this.props.postQuestion(newQuestion);\r\n\r\n   \r\n            }\r\n          }\r\n\r\n        formValidation = () =>{\r\n            const{category} = this.state;\r\n            let categoryError = \"\", error;\r\n        \r\n            if(!category.length){\r\n              categoryError = \"You must select at least one space\";\r\n              error = true;            \r\n            }\r\n            this.setState(prevState => ({\r\n                errors:{\r\n                    category:categoryError\r\n                }\r\n            }))\r\n            \r\n            return !error;\r\n        }\r\n        \r\n        handleAddSpace = async(e)=>{\r\n            e.preventDefault();\r\n            const type=\"follow\";\r\n            const token = this.props.auth.token;\r\n            const interests = this.props.auth.interests;\r\n            const userId = this.props.auth.userId;\r\n            let {category} = this.state;\r\n            if(category&&token){\r\n                try{\r\n                    category = category.value;\r\n                    console.log(category);\r\n                    if(category){\r\n                        const data = {token, type, spaceId:category, interests, userId};\r\n                        console.log(data);\r\n                        await this.props.ChangeSpaces(data);\r\n\r\n                        if(this.props.auth.postFail)\r\n                            this.notifyF(\"Some Error occured while updating interests try again.\");\r\n                    }\r\n                }catch(e){\r\n                    console.log(e);\r\n                }\r\n            }\r\n        }\r\n        unfollowSpace = async(e)=>{\r\n            if(e)\r\n                e.preventDefault();\r\n            console.log(\"in\");\r\n            const type = \"unfollow\";\r\n            const spaceId=e.target.value;\r\n            const token = this.props.auth.token;\r\n            const interests = this.props.auth.interests;\r\n            const userId = this.props.auth.userId;\r\n            try{\r\n                if(spaceId&&token){\r\n                    \r\n                    const data = {token, spaceId, type, interests, userId}\r\n                    console.log(data);\r\n                    await this.props.ChangeSpaces(data);\r\n\r\n                    if(this.props.auth.postFail)\r\n                        this.notifyF(\"Some Error occured while updating interests try again.\");\r\n                }\r\n            }catch(e){\r\n                console.log(e);\r\n            }\r\n        }\r\n\r\n        RenderMenuItem = (space, auth, questions, blogs)=>{\r\n            var blogs=blogs, questions=questions;\r\n            if(questions){\r\n                questions=questions.filter(\r\n                    (question) =>\r\n                        question.tagIds.indexOf(space.stringId) > -1\r\n                );\r\n            }\r\n            if(blogs){\r\n                blogs=blogs.filter(\r\n                    (blog) =>\r\n                        blog.tagIds.indexOf(space.stringId) > -1\r\n                );\r\n            }\r\n    \r\n            return ( \r\n        \r\n                <Card className='space'>\r\n                <CardBody>\r\n                    <CardTitle tag=\"h6\">{space.name}</CardTitle>\r\n                </CardBody>\r\n                    <CardImg className='space-img' src={baseUrl+'spaces/'+space._id+'/image'}/>\r\n                <CardBody>\r\n                    <CardSubtitle tag=\"h6\" className=\"mb-2 mt-2 text-muted\">\r\n                        <span className='fa fa-question-circle fa-lg question-icon'/>    \r\n                        {questions.length} Questions<Link className='ml-3' style={{textAlign: 'center'}} to={`/spaces/${space._id}/${space.stringId}/questions`}>view</Link>\r\n                    </CardSubtitle>\r\n                    <CardSubtitle tag=\"h6\" className=\"mb-2 text-muted\">\r\n                        <span className='fa fa-star mt-3 fa-lg follower-icon'/>    \r\n                        {blogs.length} Blogs<Link className='ml-3' style={{textAlign: 'center'}} to={`/spaces/${space._id}/${space.stringId}/blogs`}>view</Link>\r\n                    </CardSubtitle>\r\n                    <div className='row mt-4'>\r\n                        <Button className='col-12 mt-3' onClick={this.unfollowSpace} value = {space.stringId} color='danger'><span className='fa fa-lg fa-bookmark mr-2 ml-2' />Unfollow</Button>\r\n                    </div>\r\n                </CardBody>\r\n              </Card>\r\n            );\r\n        }\r\n        renderCardList = ()=>{\r\n            return this.state.data.map((space) => {  \r\n                return (\r\n                    <div className=\"col-12 col-lg-3 col-md-6 col-sm-6 mt-1 mb-4\"  key={space._id}>\r\n                        {this.RenderMenuItem(space, this.props.auth, this.props.questions, this.props.blogs)}\r\n                    </div>\r\n                );\r\n            });\r\n        }\r\n\r\n        render() {\r\n            \r\n\r\n            if (this.props.spaces.isLoading) {\r\n                return(\r\n                    <Loading type='spokes' color='grey' />\r\n                );\r\n            }\r\n            else if (this.props.spaces.errMess) {\r\n                return(\r\n                    <div className=\"container spaces\">\r\n                        <div className=\"row\"> \r\n                            <div className=\"col-12\">\r\n                                <h4>{this.props.spaces.errMess}</h4>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                );\r\n            }\r\n            else \r\n            {\r\n                var interests_ = localStorage.getItem('interests');\r\n                var spaces_ = spaces.filter((s) => interests_.indexOf(s.value)<0);\r\n                return (\r\n                \r\n                <div className=\"container spaces\">\r\n                    <div className=\"row\">\r\n                        <Breadcrumb className='mt-3 ml-3'>\r\n                            <BreadcrumbItem><Link to=\"/home\">Home</Link></BreadcrumbItem>\r\n                            <BreadcrumbItem active>Spaces</BreadcrumbItem>\r\n                        </Breadcrumb>\r\n                        <div className=\"col-12\">\r\n                            <div className='row'>\r\n                                <h3 className='col-12 col-md-4 mb-2 mt-2 space-heading'>Spaces</h3>\r\n                                \r\n                                    <Form className='col-12 col-md-8'>\r\n                                        <Form.Group controlId=\"formBasicDropdown\">\r\n                                            <Form.Label><span className=\"form__icon\"></span>Follow more spaces</Form.Label>\r\n                                            <div><Select name=\"category\" options={spaces_} className=\"basic-multi-select\" value={this.state.category} onChange={this.handleMultiSelectChange} classNamePrefix=\"select\"/></div>\r\n                                            <div className=\"invalid__feedback\">{this.state.errors.category}</div>\r\n                                        </Form.Group>\r\n                                        <Button onClick={this.handleAddSpace} variant=\"info\"><span className='fa fa-paper-plane mr-3' />Submit</Button>\r\n                                    </Form>\r\n                            </div>\r\n                            <hr style={{marginBottom: 25, marginTop: 25}} />\r\n                        </div>  \r\n                                      \r\n                    </div>\r\n                    <div className=\"row justify-content-center\" >\r\n                        {this.renderCardList()}\r\n                    </div>\r\n                    \r\n                    <ToastContainer \r\n                        autoClose={false}\r\n                    />\r\n                </div>\r\n               \r\n            );}            \r\n        }\r\n    }\r\n\r\n    const mapStateToProps = (state, ownProps) => {\r\n        return {\r\n            ...ownProps,\r\n            auth:state.auth,\r\n        };\r\n    };\r\nexport default connect(mapStateToProps,{ChangeSpaces})(Spaces);",["328","329"],"D:\\project\\final\\Poogle\\src\\components\\all_blog_page\\blogs.js",["330","331","332","333","334","335","336","337","338"],"import React, { Component } from \"react\";\r\nimport {\r\n  ListGroup,\r\n  ListGroupItemHeading,\r\n  ListGroupItemText,\r\n  ListGroupItem,\r\n  Breadcrumb,\r\n  BreadcrumbItem,\r\n  Badge,\r\n  Nav,\r\n  NavItem,\r\n  NavLink,\r\n  Button,\r\n  ButtonGroup\r\n} from \"reactstrap\";\r\nimport { FaBlog, FaQuestionCircle, FaUserAlt } from \"react-icons/fa\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Loading from \"../loading\";\r\nimport \"../all_blog_page/blogs.css\";\r\nimport Select from \"react-select\";\r\nimport { spaces } from \"../variables\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\n\r\nconst RenderTags = ({ blog }) =>\r\n  blog.tagNames.map((tag) => {\r\n    return (\r\n      <Badge pill className=\"tag\">\r\n        {tag}\r\n      </Badge>\r\n    );\r\n  });\r\n\r\nasync function viewAdd(views, postBReaction, blog, user) {\r\n  if (views && views.length && views.filter((v) => v.user === user)[0]) {\r\n    console.log(\"another view\");\r\n  } else {\r\n    var reac = {\r\n      user: user,\r\n      blog: blog,\r\n      category: \"View\",\r\n    };\r\n    await postBReaction(reac);\r\n  }\r\n}\r\nfunction RenderMenuItem({\r\n  blog,\r\n  class_Name,\r\n  onClick,\r\n  auth,\r\n  deleteBlog,\r\n  breactions,\r\n  postBReaction,\r\n  filter,\r\n}) {\r\n\r\n  var likesCount = breactions\r\n    .filter((r) => r.category === \"Like\")\r\n    .filter((r) => r.blog === blog._id).length;\r\n  var views = breactions\r\n    .filter((r) => r.category === \"View\")\r\n    .filter((r) => r.blog === blog._id);\r\n  var viewsCount = views.length;\r\n\r\n  if (filter === \"Latest\" || filter === \"Likes\") {\r\n    return (\r\n      <ListGroup className=\"container blog-container\">\r\n        <ListGroupItem className={class_Name + \" list-item-style\"}>\r\n          <div className=\"row\">\r\n            <div className=\"col-12 col-sm-8\">\r\n              <ListGroupItemHeading className=\"blog-heading\">\r\n                <Link\r\n                  className=\"blog-heading\"\r\n                  to={`/blog-${blog._id}-${blog.heading}`}\r\n                  onClick={() =>\r\n                    viewAdd(views, postBReaction, blog._id, auth.userId)\r\n                  }\r\n                >\r\n                  {blog.heading}\r\n                </Link>\r\n                {auth.userId === blog.author._id ? (\r\n                  <Button color=\"danger\" onClick={() => deleteBlog(blog._id)}>\r\n                    <span className=\"fa fa-lg fa-trash\"></span>\r\n                  </Button>\r\n                ) : (\r\n                  <></>\r\n                )}\r\n              </ListGroupItemHeading>\r\n              <RenderTags blog={blog} />\r\n              <ListGroupItemText className=\"blog-text\">\r\n                Posted by :- {blog.author.user_name}\r\n              </ListGroupItemText>\r\n              <ListGroupItemText className=\"blog-text\">\r\n                Posted at :-{\" \"}\r\n                {new Intl.DateTimeFormat(\"en-US\", {\r\n                  year: \"numeric\",\r\n                  month: \"short\",\r\n                  day: \"2-digit\",\r\n                }).format(new Date(Date.parse(blog.createdAt)))}\r\n              </ListGroupItemText>\r\n            </div>\r\n            <div className=\"col-12 col-sm-4\">\r\n              <div className=\"prop-div\">\r\n                <Badge className=\"prop\" color=\"light\">\r\n                  {viewsCount}\r\n                </Badge>\r\n                <p>Views</p>\r\n              </div>\r\n              <div className=\"prop-div\">\r\n                <Badge className=\"prop\" color=\"light\">\r\n                  {likesCount}\r\n                </Badge>\r\n                <p>Likes</p>\r\n              </div>\r\n              <div className=\"prop-div\">\r\n                <Badge className=\"prop\" color=\"light\">\r\n                  {blog.duration}\r\n                </Badge>\r\n                <p>minutes</p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </ListGroupItem>\r\n      </ListGroup>\r\n    );\r\n  }\r\n}\r\n\r\nclass Blogs extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      filter: \"Latest\",\r\n      latestActive: true,\r\n      clapsActive: false,\r\n    };\r\n  }\r\n\r\n  onLatestSelect() {\r\n    this.setState({\r\n      filter: \"Latest\",\r\n      latestActive: true,\r\n      clapsActive: false,\r\n    });\r\n  }\r\n\r\n  onClapsSelect() {\r\n    this.setState({\r\n      filter: \"Likes\",\r\n      latestActive: false,\r\n      clapsActive: true,\r\n    });\r\n  }\r\n  render() {\r\n    const likeCount = (reactions, blog) => {\r\n      var lCount = reactions.filter((r) => r.category === \"Like\");\r\n      lCount = lCount.length\r\n        ? lCount.filter((r) => r.blog === blog._id).length\r\n        : 0;\r\n\r\n      return lCount;\r\n    };\r\n\r\n    var count = -1;\r\n    const MenuDate = this.props.blogs\r\n      .sort((a, b) => b.dateNum - a.dateNum)\r\n      .map((blog) => {\r\n        count += 1;\r\n        return (\r\n          <div className=\"col-12\" key={blog._id}>\r\n            <RenderMenuItem\r\n              blog={blog}\r\n              class_Name={count % 2 == 0 ? \"blogEven\" : \"blogOdd\"}\r\n              onClick={this.props.onClick}\r\n              auth={this.props.auth}\r\n              deleteBlog={this.props.deleteBlog}\r\n              breactions={this.props.reactions}\r\n              postBReaction={this.props.postReaction}\r\n              filter={this.state.filter}\r\n            />\r\n          </div>\r\n        );\r\n      });\r\n\r\n    const MenuLikes = this.props.blogs\r\n      .sort(\r\n        (a, b) =>\r\n          likeCount(this.props.reactions, b) -\r\n          likeCount(this.props.reactions, a)\r\n      )\r\n      .map((blog) => {\r\n        count += 1;\r\n        return (\r\n          <div className=\"col-12\" key={blog._id}>\r\n            <RenderMenuItem\r\n              blog={blog}\r\n              class_Name={count % 2 == 0 ? \"blogEven\" : \"blogOdd\"}\r\n              onClick={this.props.onClick}\r\n              auth={this.props.auth}\r\n              deleteBlog={this.props.deleteBlog}\r\n              breactions={this.props.reactions}\r\n              postBReaction={this.props.postBReaction}\r\n              filter={this.state.filter}\r\n            />\r\n          </div>\r\n        );\r\n      });\r\n\r\n    if (this.props.isLoading || this.props.reactionsIsLoading) {\r\n      return <Loading type=\"spokes\" color=\"grey\" />;\r\n    } else if (this.props.errMess || this.props.reactionsErrMess) {\r\n      return (\r\n        <div className=\"container spaces\">\r\n          <div className=\"row\">\r\n            <div className=\"col-12\">\r\n              <h4>{this.props.errMess}</h4>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      );\r\n    } else {\r\n      var renderBlogs;\r\n\r\n      if (this.state.filter === \"Latest\") {\r\n        renderBlogs = MenuDate;\r\n      } else if (this.state.filter === \"Likes\") {\r\n        renderBlogs = MenuLikes;\r\n      }\r\n      return (\r\n        <div className=\"container questions\">\r\n          <div className=\"row\">\r\n            <Breadcrumb className=\"mt-3 ml-3\">\r\n              <BreadcrumbItem>\r\n                <Link to=\"/spaces\">Spaces</Link>\r\n              </BreadcrumbItem>\r\n              <BreadcrumbItem active>{this.props.space.name}</BreadcrumbItem>\r\n            </Breadcrumb>\r\n          </div>\r\n          <div className=\"row\">\r\n            <div className=\"container category-div \">\r\n              <h4 className=\"row all-blog-heading justify-content-center\">\r\n                All Blogs\r\n              </h4>\r\n              <div className=\"row justify-content-center mt-4\">\r\n                  <ButtonGroup className=\"mb-4 button-grp col-8 col-md-4 col-lg-3\">\r\n                      <Button disabled outline color=\"info\">\r\n                        <FaBlog className='mr-2' />\r\n                        {this.props.blogs.length} Blogs\r\n                      </Button>\r\n                      <Button disabled outline color=\"info\">\r\n                        <span className=\"fa fa-lg fa-scribd mr-2\"></span>\r\n                        {this.props.space.followers}\r\n                      </Button>\r\n                  </ButtonGroup>\r\n                  <Button\r\n                    className=\"col-8 col-md-4 col-lg-3 mb-4 add-ques-btn\"\r\n                    color=\"danger\"\r\n                  >\r\n                    <Link style={{ color: \"white\" }} to=\"/addBlog\">\r\n                    <span className=\"fa fa-lg fa-plus mr-2 ml-2\" />\r\n                    BLOG\r\n                    </Link>\r\n                  </Button>\r\n              </div>\r\n              <div className=\"row ml-1 mt-3 mr-1\">\r\n                <Nav className=\"col-12 \" tabs>\r\n                  <NavItem className=\"mb-6 filters\">\r\n                    <NavLink\r\n                      href=\"#\"\r\n                      active={this.state.latestActive}\r\n                      onClick={() => this.onLatestSelect()}\r\n                    >\r\n                      Latest\r\n                    </NavLink>\r\n                  </NavItem>\r\n                  <NavItem className=\"mb-6 filters\">\r\n                    <NavLink\r\n                      href=\"#\"\r\n                      active={this.state.clapsActive}\r\n                      onClick={() => this.onClapsSelect()}\r\n                    >\r\n                      Likes\r\n                    </NavLink>\r\n                  </NavItem>\r\n                </Nav>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div id=\"all-blogs-id\" className=\"row justify-content-center\">\r\n            {this.props.blogs.length ? (\r\n              renderBlogs\r\n            ) : (\r\n              <p className=\"mt-5\">\r\n                Currently no blogs for this space. be the first one to post a\r\n                blog for this space.\r\n              </p>\r\n            )}\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\nexport default Blogs;\r\n","D:\\project\\final\\Poogle\\src\\components\\all_ques_page\\questions.js",["339","340","341","342","343","344","345"],"import React, { Component } from \"react\";\r\nimport {\r\n  ListGroup,\r\n  ListGroupItemHeading,\r\n  ListGroupItemText,\r\n  ListGroupItem,\r\n  Breadcrumb,\r\n  BreadcrumbItem,\r\n  Badge,\r\n  Nav,\r\n  NavItem,\r\n  NavLink,\r\n  Button,\r\n  ButtonGroup,\r\n  Pagination,\r\n  PaginationItem,\r\n  PaginationLink,\r\n} from \"reactstrap\";\r\nimport { Link, withRouter } from \"react-router-dom\";\r\nimport Loading from \"../loading\";\r\nimport \"../all_ques_page/questions.css\";\r\n\r\nconst RenderTags = ({ question }) =>\r\n  question.tagNames.map((tag) => {\r\n    return (\r\n      <Badge pill className=\"tag\">\r\n        {tag}\r\n      </Badge>\r\n    );\r\n  });\r\n\r\nasync function viewAdd(views, postReaction, question, user) {\r\n  if (views && views.length && views.filter((v) => v.user === user)[0]) {\r\n    console.log(\"another view\");\r\n  } else {\r\n    var reac = {\r\n      user: user,\r\n      question: question,\r\n      category: \"View\",\r\n    };\r\n    await postReaction(reac);\r\n  }\r\n}\r\n\r\nfunction RenderMenuItem({\r\n  question,\r\n  spaceId,\r\n  class_Name,\r\n  onClick,\r\n  auth,\r\n  deleteQuestion,\r\n  answers,\r\n  reactions,\r\n  postReaction,\r\n  filter,\r\n}) {\r\n  //var ans = answers.filter(a => a.question === question._id);\r\n  var ansCount = answers.filter((a) => a.question === question._id).length;\r\n  var uvotesCount = reactions\r\n    .filter((r) => r.category === \"UpVote\")\r\n    .filter((r) => r.question === question._id).length;\r\n  var dvotesCount = reactions\r\n    .filter((r) => r.category === \"DownVote\")\r\n    .filter((r) => r.question === question._id).length;\r\n  var views = reactions\r\n    .filter((r) => r.category === \"View\")\r\n    .filter((r) => r.question === question._id);\r\n  var viewsCount = views.length;\r\n\r\n  if (filter === \"Unanswered\") {\r\n    if (ansCount === 0) {\r\n      return (\r\n        <ListGroup className=\"container question-container\">\r\n          <ListGroupItem className={class_Name + \" list-item-style\"}>\r\n            <div className=\"row\">\r\n              <div className=\"col-12 col-sm-8\">\r\n                <ListGroupItemHeading className=\"question-heading\">\r\n                  <Link\r\n                    className=\"question-heading\"\r\n                    to={`/question-${question._id}-${question.heading}`}\r\n                    onClick={() =>\r\n                      viewAdd(views, postReaction, question._id, auth.userId)\r\n                    }\r\n                  >\r\n                    {question.heading}\r\n                  </Link>\r\n                  {auth.userId === question.author._id ? (\r\n                    <Button\r\n                      color=\"danger\"\r\n                      style={{ marginTop: 6 }}\r\n                      onClick={() => deleteQuestion(question._id)}\r\n                    >\r\n                      <span className=\"fa fa-trash\"></span>\r\n                    </Button>\r\n                  ) : (\r\n                    <></>\r\n                  )}\r\n                </ListGroupItemHeading>\r\n                <RenderTags question={question} />\r\n                <ListGroupItemText className=\"question-text\">\r\n                  Posted by :- {question.author.user_name}\r\n                </ListGroupItemText>\r\n                <ListGroupItemText className=\"question-text\">\r\n                  Posted at :-{\" \"}\r\n                  {new Intl.DateTimeFormat(\"en-US\", {\r\n                    year: \"numeric\",\r\n                    month: \"short\",\r\n                    day: \"2-digit\",\r\n                  }).format(new Date(Date.parse(question.createdAt)))}\r\n                </ListGroupItemText>\r\n              </div>\r\n              <div className=\"col-12 col-sm-4\">\r\n                <div className=\"prop-div\">\r\n                  <Badge className=\"prop\" color=\"light\">\r\n                    {viewsCount}\r\n                  </Badge>\r\n                  <p>views</p>\r\n                </div>\r\n                <div className=\"prop-div\">\r\n                  <Badge className=\"prop\" color=\"light\">\r\n                    {ansCount}\r\n                  </Badge>\r\n                  <p>answers</p>\r\n                </div>\r\n                <div className=\"prop-div\">\r\n                  <Badge className=\"prop\" color=\"light\">\r\n                    {uvotesCount - dvotesCount}\r\n                  </Badge>\r\n                  <p>votes</p>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </ListGroupItem>\r\n        </ListGroup>\r\n      );\r\n    } else return <></>;\r\n  } else {\r\n    return (\r\n      <ListGroup className=\"container question-container\">\r\n        <ListGroupItem className={class_Name + \" list-item-style\"}>\r\n          <div className=\"row\">\r\n            <div className=\"col-12 col-sm-8\">\r\n              <ListGroupItemHeading className=\"question-heading\">\r\n                <Link\r\n                  className=\"question-heading\"\r\n                  to={`/question-${question._id}-${question.heading}`}\r\n                  onClick={() =>\r\n                    viewAdd(views, postReaction, question._id, auth.userId)\r\n                  }\r\n                >\r\n                  {question.heading}\r\n                </Link>\r\n                {auth.userId === question.author._id ? (\r\n                  <Button\r\n                    color=\"danger\"\r\n                    onClick={() => deleteQuestion(question._id)}\r\n                  >\r\n                    <span className=\"fa fa-lg fa-trash\"></span>\r\n                  </Button>\r\n                ) : (\r\n                  <></>\r\n                )}\r\n              </ListGroupItemHeading>\r\n              <RenderTags question={question} />\r\n              <ListGroupItemText className=\"question-text\">\r\n                Posted by :- {question.author.user_name}\r\n              </ListGroupItemText>\r\n              <ListGroupItemText className=\"question-text\">\r\n                Posted at :-{\" \"}\r\n                {new Intl.DateTimeFormat(\"en-US\", {\r\n                  year: \"numeric\",\r\n                  month: \"short\",\r\n                  day: \"2-digit\",\r\n                }).format(new Date(Date.parse(question.createdAt)))}\r\n              </ListGroupItemText>\r\n            </div>\r\n            <div className=\"col-12 col-sm-4\">\r\n              <div className=\"prop-div\">\r\n                <Badge className=\"prop\" color=\"light\">\r\n                  {viewsCount}\r\n                </Badge>\r\n                <p>views</p>\r\n              </div>\r\n              <div className=\"prop-div\">\r\n                <Badge className=\"prop\" color=\"light\">\r\n                  {ansCount}\r\n                </Badge>\r\n                <p>answers</p>\r\n              </div>\r\n              <div className=\"prop-div\">\r\n                <Badge className=\"prop\" color=\"light\">\r\n                  {uvotesCount - dvotesCount}\r\n                </Badge>\r\n                <p>votes</p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </ListGroupItem>\r\n      </ListGroup>\r\n    );\r\n  }\r\n}\r\n\r\nclass Questions extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      filter: \"Latest\",\r\n      latestActive: true,\r\n      votesActive: false,\r\n      unansweredActive: false,\r\n      data: [],\r\n    };\r\n  }\r\n\r\n  onLatestSelect() {\r\n    this.setState({\r\n      filter: \"Latest\",\r\n      latestActive: true,\r\n      votesActive: false,\r\n      unansweredActive: false,\r\n    });\r\n  }\r\n\r\n  onVotesSelect() {\r\n    this.setState({\r\n      filter: \"Votes\",\r\n      latestActive: false,\r\n      votesActive: true,\r\n      unansweredActive: false,\r\n    });\r\n  }\r\n\r\n  onUnansweredSelect() {\r\n    this.setState({\r\n      filter: \"Unanswered\",\r\n      latestActive: false,\r\n      votesActive: false,\r\n      unansweredActive: true,\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const voteCount = (reactions, question) => {\r\n      var uvotesCount = reactions.filter((r) => r.category === \"UpVote\");\r\n      uvotesCount = uvotesCount.length\r\n        ? uvotesCount.filter((r) => r.question === question._id).length\r\n        : 0;\r\n      var dvotesCount = reactions.filter((r) => r.category === \"DownVote\");\r\n      dvotesCount = dvotesCount.length\r\n        ? dvotesCount.filter((r) => r.question === question._id).length\r\n        : 0;\r\n\r\n      return uvotesCount - dvotesCount;\r\n    };\r\n\r\n    var count = -1;\r\n    const MenuDate = this.props.questions ? (\r\n      this.props.questions\r\n        .sort((a, b) => b.dateNum - a.dateNum)\r\n        .map((question) => {\r\n          count += 1;\r\n          return (\r\n            <div className=\"col-12\" key={question._id}>\r\n              <RenderMenuItem\r\n                question={question}\r\n                class_Name={count % 2 == 0 ? \"questionEven\" : \"questionOdd\"}\r\n                onClick={this.props.onClick}\r\n                auth={this.props.auth}\r\n                deleteQuestion={this.props.deleteQuestion}\r\n                answers={this.props.answers}\r\n                reactions={this.props.reactions}\r\n                postReaction={this.props.postReaction}\r\n                filter={this.state.filter}\r\n              />\r\n            </div>\r\n          );\r\n        })\r\n    ) : (\r\n      <p>Be first one to add a question to this space!!</p>\r\n    );\r\n\r\n    const MenuVotes = this.props.questions ? (\r\n      this.props.questions\r\n        .sort(\r\n          (a, b) =>\r\n            voteCount(this.props.reactions, b) -\r\n            voteCount(this.props.reactions, a)\r\n        )\r\n        .map((question) => {\r\n          count += 1;\r\n          return (\r\n            <div className=\"col-12\" key={question._id}>\r\n              <RenderMenuItem\r\n                question={question}\r\n                class_Name={count % 2 == 0 ? \"questionEven\" : \"questionOdd\"}\r\n                onClick={this.props.onClick}\r\n                auth={this.props.auth}\r\n                deleteQuestion={this.props.deleteQuestion}\r\n                answers={this.props.answers}\r\n                reactions={this.props.reactions}\r\n                postReaction={this.props.postReaction}\r\n                filter={this.state.filter}\r\n              />\r\n            </div>\r\n          );\r\n        })\r\n    ) : (\r\n      <p>Be first one to add a question to this space!!</p>\r\n    );\r\n\r\n    const MenuUnanswered = this.props.questions ? (\r\n      this.props.questions.map((question) => {\r\n        count += 1;\r\n        return (\r\n          <div className=\"col-12\" key={question._id}>\r\n            <RenderMenuItem\r\n              question={question}\r\n              class_Name={count % 2 == 0 ? \"questionEven\" : \"questionOdd\"}\r\n              onClick={this.props.onClick}\r\n              auth={this.props.auth}\r\n              deleteQuestion={this.props.deleteQuestion}\r\n              answers={this.props.answers}\r\n              reactions={this.props.reactions}\r\n              postReaction={this.props.postReaction}\r\n              filter={this.state.filter}\r\n            />\r\n          </div>\r\n        );\r\n      })\r\n    ) : (\r\n      <p>Be first one to add a question to this space!!</p>\r\n    );\r\n\r\n    if (\r\n      this.props.isLoading ||\r\n      this.props.questionsIsLoading ||\r\n      this.props.answersIsLoading ||\r\n      this.props.reactionsIsLoading\r\n    ) {\r\n      return <Loading type=\"spokes\" color=\"grey\" />;\r\n    } else if (\r\n      this.props.errMess ||\r\n      this.props.questionsErrMess ||\r\n      this.props.answersErrMess ||\r\n      this.props.reactionsErrMess\r\n    ) {\r\n      return (\r\n        <div className=\"container spaces\">\r\n          <div className=\"row\">\r\n            <div className=\"col-12\">\r\n              <h4>{this.props.errMess}</h4>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      );\r\n    } else {\r\n      var renderQuestions;\r\n\r\n      if (this.state.filter === \"Latest\") {\r\n        renderQuestions = MenuDate;\r\n      } else if (this.state.filter === \"Votes\") {\r\n        renderQuestions = MenuVotes;\r\n      } else renderQuestions = MenuUnanswered;\r\n\r\n      return (\r\n        <div className=\"container questions\">\r\n          <div className=\"row\">\r\n            <Breadcrumb className=\"mt-3 ml-3\">\r\n              <BreadcrumbItem>\r\n                <Link to=\"/spaces\">Spaces</Link>\r\n              </BreadcrumbItem>\r\n              <BreadcrumbItem active>{this.props.space.name}</BreadcrumbItem>\r\n            </Breadcrumb>\r\n          </div>\r\n          <div className=\"row\">\r\n            <div className=\"container category-div \">\r\n              <h4 className=\"row all-ques-heading justify-content-center\">\r\n                All Questions\r\n              </h4>\r\n              <div className=\"row justify-content-center mt-4\">\r\n                <ButtonGroup className=\"mb-4 button-grp col-8 col-md-4 col-lg-3\">\r\n                    <Button disabled outline color=\"info\">\r\n                      <span className=\"fa fa-lg fa-question-circle mr-2\" />\r\n                      {this.props.questions.length} Questions\r\n                    </Button>\r\n                    <Button disabled outline color=\"info\">\r\n                      <span className=\"fa fa-lg fa-scribd mr-2\"></span>\r\n                      {this.props.space.followers}\r\n                    </Button>\r\n                  </ButtonGroup>\r\n                <Button\r\n                  className=\"col-8 col-md-4 col-lg-3 mb-4 add-ques-btn\"\r\n                  color=\"danger\"\r\n                >\r\n                  <Link style={{ color: \"white\" }} to=\"/addQuestion\">\r\n                  <span className=\"fa fa-lg fa-plus mr-2 ml-2\" />\r\n                  QUESTION\r\n                  </Link>\r\n                </Button>\r\n              </div>\r\n              <div className=\"row ml-1 mt-3 mr-1\">\r\n                <Nav className=\"col-12 \" tabs>\r\n                  <NavItem className=\"mb-4 filters\">\r\n                    <NavLink\r\n                      href=\"#\"\r\n                      active={this.state.latestActive}\r\n                      onClick={() => this.onLatestSelect()}\r\n                    >\r\n                      Latest\r\n                    </NavLink>\r\n                  </NavItem>\r\n                  <NavItem className=\"mb-4 filters\">\r\n                    <NavLink\r\n                      href=\"#\"\r\n                      active={this.state.votesActive}\r\n                      onClick={() => this.onVotesSelect()}\r\n                    >\r\n                      Votes\r\n                    </NavLink>\r\n                  </NavItem>\r\n                  <NavItem className=\"mb-4 filters\">\r\n                    <NavLink\r\n                      href=\"#\"\r\n                      active={this.state.unansweredActive}\r\n                      onClick={() => this.onUnansweredSelect()}\r\n                    >\r\n                      Unanswered\r\n                    </NavLink>\r\n                  </NavItem>\r\n                </Nav>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <div id=\"all-questions-id\" className=\"row justify-content-center\">\r\n            {this.props.questions.length ? (\r\n              renderQuestions\r\n            ) : (\r\n              <p className=\"mt-5\">\r\n                Currently no questions for this space. be first one to\r\n                contribute a question to this space\r\n              </p>\r\n            )}\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\nexport default Questions;\r\n","D:\\project\\final\\Poogle\\src\\components\\single_ques\\SingleQues.js",["346","347","348","349","350","351","352"],"import React, { Component, useState } from \"react\";\r\nimport {\r\n  FacebookIcon,\r\n  FacebookShareButton,\r\n  LinkedinIcon,\r\n  LinkedinShareButton,\r\n  PinterestIcon,\r\n  PinterestShareButton,\r\n  RedditIcon,\r\n  RedditShareButton,\r\n  TelegramIcon,\r\n  TelegramShareButton,\r\n  TwitterIcon,\r\n  TwitterShareButton,\r\n  WhatsappIcon,\r\n  WhatsappShareButton,\r\n} from \"react-share\";\r\nimport {\r\n  Row,\r\n  Col,\r\n  Container,\r\n  Card,\r\n  CardBody,\r\n  CardTitle,\r\n  CardSubtitle,\r\n  CardText,\r\n  Collapse,\r\n  ButtonGroup,\r\n  Button,\r\n  CardImg,\r\n  Badge,\r\n  Modal,\r\n  ModalHeader,\r\n  ModalBody,\r\n  ModalFooter,\r\n  Media,\r\n  Label,\r\n  Jumbotron,\r\n} from \"reactstrap\";\r\nimport { LocalForm, Control, Errors } from \"react-redux-form\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Loading from \"../loading\";\r\nimport { baseUrl, frontendBaseUrl } from \"../../shared/baseUrl\";\r\nimport profilePic from \"../../Images/profile_pic.png\";\r\nimport \"../single_ques/SingleQues.css\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport \"../add_forms/add_forms.css\";\r\nimport ReactQuill from \"react-quill\";\r\nimport { Quill } from \"react-quill\";\r\nimport \"react-quill/dist/quill.snow.css\";\r\nimport { toolbarOptions, formats } from \"../variables\";\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport { zoomOut, slideInDown, slideInUp, bounce, flipInX, zoomIn } from 'react-animations';\r\nimport Radium, {StyleRoot} from 'radium';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport ImageCompress from \"quill-image-compress\";\r\nQuill.register(\"modules/imageCompress\", ImageCompress);\r\n\r\nconst styles = {\r\n  zoomIn: {\r\n    animation: 'x 1s',\r\n    animationName: Radium.keyframes(zoomIn, 'zoomIn')\r\n  },\r\n  slideInUp: {\r\n      animation: 'x 1s',\r\n      animationName: Radium.keyframes(slideInUp, 'slideInUp')\r\n    },\r\n    bounce: {\r\n      animation: 'x 1s',\r\n      animationName: Radium.keyframes(bounce, 'bounce')\r\n    },\r\n    flipInX: {\r\n      animation: 'x 1s',\r\n      animationName: Radium.keyframes(flipInX, 'flipInX')\r\n    },\r\n}\r\n\r\nconst required = (val) => val && val.length;\r\nconst maxLength = (len) => (val) => !val || val.length <= len;\r\n\r\nconst RenderTags = ({ question }) =>\r\n  question.tagNames.map((tag) => {\r\n    return (\r\n      <Badge pill className=\"mr-2\" color=\"primary\">\r\n        {tag}\r\n      </Badge>\r\n    );\r\n  });\r\n\r\nconst voteCount = (reactions, answer) => {\r\n  var uvotesCount = reactions.filter((r) => r.category === \"UpVote\");\r\n  uvotesCount = uvotesCount.length\r\n    ? uvotesCount.filter((r) => r.answer === answer._id).length\r\n    : 0;\r\n  var dvotesCount = reactions.filter((r) => r.category === \"DownVote\");\r\n  dvotesCount = dvotesCount.length\r\n    ? dvotesCount.filter((r) => r.answer === answer._id).length\r\n    : 0;\r\n\r\n  return uvotesCount - dvotesCount;\r\n};\r\n\r\nconst RenderAnswers = ({\r\n  answers,\r\n  deleteAnswer,\r\n  auth,\r\n  areactions,\r\n  postAReaction,\r\n  deleteAReaction,\r\n}) =>\r\n  answers\r\n    .sort((a, b) => voteCount(areactions, b) - voteCount(areactions, a))\r\n    .map((ans) => {\r\n      var uvotes = areactions.filter(\r\n        (reac) => reac.answer === ans._id && reac.category === \"UpVote\"\r\n      );\r\n      var dvotes = areactions.filter(\r\n        (reac) => reac.answer === ans._id && reac.category === \"DownVote\"\r\n      );\r\n      var ivote = uvotes.filter((uv) => uv.user === auth.userId)[0];\r\n      var idvote = dvotes.filter((dv) => dv.user === auth.userId)[0];\r\n\r\n      const upAVote = async (upvotes) => {\r\n        if (\r\n          upvotes.length &&\r\n          upvotes.filter(\r\n            (uv) => uv.answer === ans._id && uv.user === auth.userId\r\n          )[0]\r\n        ) {\r\n          var v = upvotes.filter(\r\n            (uv) => uv.answer === ans._id && uv.user === auth.userId\r\n          )[0];\r\n          await deleteAReaction(v._id);\r\n        } else {\r\n          var reac = {\r\n            user: auth.userId,\r\n            answer: ans._id,\r\n            category: \"UpVote\",\r\n          };\r\n          await postAReaction(reac);\r\n        }\r\n      };\r\n\r\n      const downAVote = async (upvotes) => {\r\n        if (\r\n          upvotes.length &&\r\n          upvotes.filter(\r\n            (uv) => uv.answer === ans._id && uv.user === auth.userId\r\n          )[0]\r\n        ) {\r\n          var v = upvotes.filter(\r\n            (uv) => uv.answer === ans._id && uv.user === auth.userId\r\n          )[0];\r\n          await deleteAReaction(v._id);\r\n        } else {\r\n          var reac = {\r\n            user: auth.userId,\r\n            answer: ans._id,\r\n            category: \"DownVote\",\r\n          };\r\n          await postAReaction(reac);\r\n        }\r\n      };\r\n\r\n      let url = baseUrl + \"users/\" + ans.author._id + \"/image\";\r\n      const setAlternateImage = (e) => {\r\n        console.log(e.target);\r\n        e.target.src = profilePic;\r\n        console.log(\"Done task\");\r\n      };\r\n\r\n      return (\r\n        <Card id={ans.id}>\r\n          <CardBody>\r\n            <Row>\r\n              <Col\r\n                className=\"mb-3 single-question-profile\"\r\n                xs={4}\r\n                md={3}\r\n                lg={2}\r\n              >\r\n                {\r\n                  <CardImg\r\n                    onError={setAlternateImage}\r\n                    className=\"single-question-profile-pic\"\r\n                    src={url}\r\n                  />\r\n                }\r\n                <CardSubtitle className=\"single-question-profile-name\">\r\n                  <Link to={`/profile/${ans.author._id}`}>\r\n                    @{ans.author.user_name}\r\n                  </Link>\r\n                </CardSubtitle>\r\n                <CardText className=\"single-question-profile-name text-muted\">\r\n                  {\" \"}\r\n                  {new Intl.DateTimeFormat(\"en-US\", {\r\n                    year: \"numeric\",\r\n                    month: \"short\",\r\n                    day: \"2-digit\",\r\n                  }).format(new Date(Date.parse(ans.createdAt)))}\r\n                </CardText>\r\n                {/* <CardText className='single-question-profile-name'>@{ans.author.user_name} got an answer !!!</CardText> */}\r\n              </Col>\r\n              <Col xs={12} md={9} lg={10}>\r\n                <Row>\r\n                  <Col xs={12}>\r\n                    <div\r\n                      className=\"editor__content\"\r\n                      dangerouslySetInnerHTML={{ __html: ans.description }}\r\n                    />\r\n                  </Col>\r\n                </Row>\r\n              </Col>\r\n            </Row>\r\n            <hr></hr>\r\n            <Row>\r\n              <ButtonGroup>\r\n                <Button\r\n                  color={ivote ? \"primary\" : \"info\"}\r\n                  onClick={\r\n                    !idvote\r\n                      ? () => upAVote(uvotes)\r\n                      : console.log(\"Not allowed!!\")\r\n                  }\r\n                >\r\n                  <span\r\n                    className={\r\n                      ivote\r\n                        ? \"fa fa-lg fa-arrow-circle-up\"\r\n                        : \"fa fa-lg fa-arrow-up\"\r\n                    }\r\n                  />\r\n                </Button>\r\n                <Button color=\"info\" disabled>\r\n                  {uvotes.length - dvotes.length}\r\n                </Button>\r\n                <Button\r\n                  color={idvote ? \"primary\" : \"info\"}\r\n                  onClick={\r\n                    !ivote\r\n                      ? () => downAVote(dvotes)\r\n                      : console.log(\"Not allowed!!\")\r\n                  }\r\n                >\r\n                  <span\r\n                    className={\r\n                      idvote\r\n                        ? \"fa fa-lg fa-arrow-circle-down\"\r\n                        : \"fa fa-lg fa-arrow-down\"\r\n                    }\r\n                  ></span>\r\n                </Button>\r\n                {ans.author._id === auth.userId ? (\r\n                  <Button color=\"danger\" onClick={() => deleteAnswer(ans._id)}>\r\n                    <span className=\"fa fa-lg fa-trash\"></span>\r\n                  </Button>\r\n                ) : (\r\n                  <></>\r\n                )}\r\n              </ButtonGroup>\r\n            </Row>\r\n          </CardBody>\r\n        </Card>\r\n      );\r\n    });\r\n\r\nfunction RenderComments({\r\n  commentsArray,\r\n  isOpen,\r\n  postComment,\r\n  deleteComment,\r\n  questionId,\r\n  author,\r\n}) {\r\n  const [formOpen, setIsOpen] = useState(false);\r\n\r\n  const notifyS = (message) => toast.success(message);\r\n  const notifyF = (message) => toast.error(message);\r\n\r\n  const toggle = () => setIsOpen(!formOpen);\r\n\r\n  const handleSubmit = async (values) => {\r\n    await postComment({\r\n      author: author,\r\n      question: questionId,\r\n      comment: values.comment,\r\n    });\r\n\r\n    if(commentsArray.postFail)\r\n      notifyF(\"Some Error occured while posting try again.\");\r\n    else\r\n      notifyS('Comment posted successfully!!')    \r\n\r\n  };\r\n\r\n  let url = baseUrl + \"users/\" + author + \"/image\";\r\n  const setAlternateImage = (e) => {\r\n    console.log(e.target);\r\n    e.target.src = profilePic;\r\n    console.log(\"Done task\");\r\n  };\r\n\r\n  return (\r\n    <Collapse isOpen={isOpen}>\r\n      <Card>\r\n        <CardBody>\r\n          <div className=\"col-12 m-1\">\r\n            <div className=\"row justify-content-between\">\r\n              <h5 className=\"col-6\">\r\n                <span\r\n                  className=\"fa fa-lg fa-comments\"\r\n                  style={{ color: \"mediumslateblue\", fontSize: 50 }}\r\n                />\r\n              </h5>\r\n              <Button\r\n                onClick={() => toggle()}\r\n                className=\"mb-3 col-6 col-sm-5 col-md-4 offset-0 add-ans-btn\"\r\n                color=\"primary\"\r\n              >\r\n                <span className=\"button-headings fa fa-plus mr-2\"></span>\r\n                COMMENT\r\n              </Button>\r\n            </div>\r\n            <hr />\r\n            <Collapse isOpen={formOpen}>\r\n              <Card className=\"mt-3\">\r\n                <CardBody>\r\n                  <LocalForm onSubmit={handleSubmit}>\r\n                    <div className=\"row form-group\">\r\n                      <Label htmlFor=\"comment\" className=\"col-12\">\r\n                        <span className=\"fa fa-lg  fa-pencil-square-o ml-1 mr-2\"></span>\r\n                        Comment\r\n                      </Label>\r\n                      <div className=\"col-12\">\r\n                        <Control.textarea\r\n                          model=\".comment\"\r\n                          name=\"comment\"\r\n                          className=\"form-control\"\r\n                          id=\"comment\"\r\n                          rows=\"6\"\r\n                          placeholder={\"Type your comment here ....\"}\r\n                          validators={{ required, maxLength: maxLength(500) }}\r\n                        />\r\n                        <Errors\r\n                          className=\"text-danger\"\r\n                          show=\"touched\"\r\n                          model=\".comment\"\r\n                          messages={{\r\n                            required: \"Required\",\r\n                            maxLength: \"Must be 500 characters or less\",\r\n                          }}\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"row form-group\">\r\n                      <div className=\"col-12\">\r\n                        <Button type=\"submit\" color=\"success\">\r\n                          Submit\r\n                        </Button>\r\n                      </div>\r\n                    </div>\r\n                  </LocalForm>\r\n                </CardBody>\r\n              </Card>\r\n            </Collapse>\r\n            <ul className=\"list-unstyled\">\r\n              {commentsArray.length ? (\r\n                commentsArray\r\n                  .sort((a, b) => b.dateNum - a.dateNum)\r\n                  .map((comm) => {\r\n                    return (\r\n                      <li key={comm._id}>\r\n                        <Media className=\"row mt-4\">\r\n                          <Media left className=\"mr-0 col-4 col-md-2\">\r\n                            <Media\r\n                              object\r\n                              className=\"ml-0 comments-profile-pic\"\r\n                              src={url}\r\n                              onError={setAlternateImage}\r\n                              alt={comm.author.user_name}\r\n                            />\r\n                            <br />\r\n                            <p className=\"comments-data\">\r\n                              <b>{comm.author.user_name}</b> at{\" \"}\r\n                              {new Intl.DateTimeFormat(\"en-US\", {\r\n                                year: \"numeric\",\r\n                                month: \"short\",\r\n                                day: \"2-digit\",\r\n                              }).format(new Date(Date.parse(comm.createdAt)))}\r\n                            </p>\r\n                          </Media>\r\n                          <Media className=\" comment mr-0 col-8 col-md-10\" body>\r\n                            {comm.comment}\r\n                          </Media>\r\n                          <Media>\r\n                            {comm.author._id === author ? (\r\n                              <Button\r\n                                color=\"danger\"\r\n                                onClick={() => deleteComment(comm._id)}\r\n                              >\r\n                                <span className=\"fa fa-trash\"></span>\r\n                              </Button>\r\n                            ) : (\r\n                              <></>\r\n                            )}\r\n                          </Media>\r\n                        </Media>\r\n                        <hr />\r\n                      </li>\r\n                    );\r\n                  })\r\n              ) : (\r\n                <p className=\"mt-5\">\r\n                  Currently no comments. be first one to comment!!\r\n                </p>\r\n              )}\r\n            </ul>\r\n          </div>\r\n        </CardBody>\r\n      </Card>\r\n    </Collapse>\r\n  );\r\n}\r\n\r\nclass RenderQuestionAnswers extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      shareModalOpen: false,\r\n      showComments: false,\r\n      answerModalOpen: false,\r\n      description: \"\",\r\n      errors: {\r\n        description: \"\",\r\n      },\r\n    };\r\n    this.handleEditorChange = this.handleEditorChange.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n    this.upVote = this.upVote.bind(this);\r\n    this.downVote = this.downVote.bind(this);\r\n  }\r\n\r\n  modules = {\r\n    toolbar: toolbarOptions,\r\n    imageCompress: {\r\n      quality: 0.7,\r\n      maxWidth: 500,\r\n      maxHeight: 500,\r\n      imageType: \"image/jpeg\",\r\n      debug: true,\r\n    },\r\n  };\r\n\r\n  onShareClicked() {\r\n    this.setState({\r\n      shareModalOpen: !this.state.shareModalOpen,\r\n    });\r\n  }\r\n\r\n  onCommentsClicked() {\r\n    this.setState({\r\n      showComments: !this.state.showComments,\r\n    });\r\n  }\r\n\r\n  onAddAnswerClicked() {\r\n    this.setState({\r\n      answerModalOpen: !this.state.answerModalOpen,\r\n    });\r\n  }\r\n\r\n  handleEditorChange(value) {\r\n    this.setState({ description: value });\r\n  }\r\n\r\n  notifyS = (message) => toast.success(message);\r\n  notifyF = (message) => toast.error(message);\r\n\r\n  handleSubmit = async (event) => {\r\n    event.preventDefault();\r\n    const isValid = this.formValidation();\r\n    console.log(this.state);\r\n\r\n    if (isValid) {\r\n      var answer = {\r\n        question: this.props.question._id,\r\n        description: this.state.description,\r\n        author: this.props.auth.userId,\r\n      };\r\n      await this.props.postAnswer(answer);\r\n\r\n      if(this.props.answers.postFail)\r\n        this.notifyF(\"Some Error occured while posting try again.\");\r\n      else\r\n        this.notifyS('Answer posted successfully!!')\r\n    }\r\n  };\r\n\r\n  formValidation = () => {\r\n    let descriptionError = \"\",\r\n      error;\r\n\r\n    if (\r\n      !this.state.description.trim() ||\r\n      this.state.description === \"<p><br></p>\"\r\n    ) {\r\n      descriptionError = \"Description is required\";\r\n      error = true;\r\n    }\r\n\r\n    this.setState((prevState) => ({\r\n      errors: {\r\n        description: descriptionError,\r\n      },\r\n    }));\r\n\r\n    return !error;\r\n  };\r\n\r\n  upVote = async (upvotes) => {\r\n    if (\r\n      upvotes.length &&\r\n      upvotes.filter(\r\n        (uv) =>\r\n          uv.question === this.props.question._id &&\r\n          uv.user === this.props.auth.userId\r\n      )[0]\r\n    ) {\r\n      var v = upvotes.filter(\r\n        (uv) =>\r\n          uv.question === this.props.question._id &&\r\n          uv.user === this.props.auth.userId\r\n      )[0];\r\n      await this.props.deleteReaction(v._id);\r\n    } else {\r\n      var reac = {\r\n        user: this.props.auth.userId,\r\n        question: this.props.question._id,\r\n        category: \"UpVote\",\r\n      };\r\n      await this.props.postReaction(reac);\r\n    }\r\n  };\r\n\r\n  downVote = async (upvotes) => {\r\n    if (\r\n      upvotes.length &&\r\n      upvotes.filter(\r\n        (uv) =>\r\n          uv.question === this.props.question._id &&\r\n          uv.user === this.props.auth.userId\r\n      )[0]\r\n    ) {\r\n      var v = upvotes.filter(\r\n        (uv) =>\r\n          uv.question === this.props.question._id &&\r\n          uv.user === this.props.auth.userId\r\n      )[0];\r\n      await this.props.deleteReaction(v._id);\r\n    } else {\r\n      var reac = {\r\n        user: this.props.auth.userId,\r\n        question: this.props.question._id,\r\n        category: \"DownVote\",\r\n      };\r\n      await this.props.postReaction(reac);\r\n    }\r\n  };\r\n\r\n  render() {\r\n    var uvotes = this.props.reactions.filter(\r\n      (reac) => reac.category === \"UpVote\"\r\n    );\r\n    var dvotes = this.props.reactions.filter(\r\n      (reac) => reac.category === \"DownVote\"\r\n    );\r\n    var ivote = uvotes.filter((uv) => uv.user === this.props.auth.userId)[0];\r\n    var idvote = dvotes.filter((dv) => dv.user === this.props.auth.userId)[0];\r\n\r\n    let url = baseUrl + \"users/\" + this.props.question.author._id + \"/image\";\r\n    const setAlternateImage = (e) => {\r\n      console.log(e.target);\r\n      e.target.src = profilePic;\r\n      console.log(\"Done task\");\r\n    };\r\n\r\n    return (\r\n      <div>\r\n        <Card>\r\n          <CardBody>\r\n            <CardTitle className=\"single-question-heading\">\r\n              {this.props.question.heading}\r\n            </CardTitle>\r\n            <hr></hr>\r\n            <Row>\r\n              <Col\r\n                className=\"mb-3 single-question-profile\"\r\n                xs={5}\r\n                sm={4}\r\n                md={3}\r\n                lg={2}\r\n              >\r\n                <CardImg\r\n                  onError={setAlternateImage}\r\n                  className=\"single-question-profile-pic\"\r\n                  src={url}\r\n                />\r\n                <CardSubtitle className=\"single-question-profile-name\">\r\n                  <Link to={`/profile/${this.props.question.author._id}`}>\r\n                    @{this.props.question.author.user_name}\r\n                  </Link>\r\n                </CardSubtitle>\r\n                <CardText className=\"single-question-profile-name text-muted\">\r\n                  {\" \"}\r\n                  {new Intl.DateTimeFormat(\"en-US\", {\r\n                    year: \"numeric\",\r\n                    month: \"short\",\r\n                    day: \"2-digit\",\r\n                  }).format(\r\n                    new Date(Date.parse(this.props.question.createdAt))\r\n                  )}\r\n                </CardText>\r\n                {/* <CardText className='single-question-profile-name'>@{this.props.question.author.user_name} has a question ????</CardText> */}\r\n              </Col>\r\n              <Col xs={12} md={9} lg={10}>\r\n                <Row>\r\n                  <Col className=\"mb-4\">\r\n                    <RenderTags question={this.props.question} />\r\n                  </Col>\r\n                  <Col xs={12}>\r\n                    <div\r\n                      className=\"editor__content\"\r\n                      dangerouslySetInnerHTML={{\r\n                        __html: this.props.question.description,\r\n                      }}\r\n                    />\r\n                  </Col>\r\n                </Row>\r\n              </Col>\r\n            </Row>\r\n            <hr></hr>\r\n            <Row>\r\n              <ButtonGroup>\r\n                <Button\r\n                  color={ivote ? \"primary\" : \"info\"}\r\n                  onClick={\r\n                    !idvote\r\n                      ? () => this.upVote(uvotes)\r\n                      : console.log(\"Not allowed!!\")\r\n                  }\r\n                >\r\n                  <span\r\n                    className={\r\n                      ivote\r\n                        ? \"fa fa-lg fa-arrow-circle-up\"\r\n                        : \"fa fa-lg fa-arrow-up\"\r\n                    }\r\n                  />\r\n                </Button>\r\n                <Button color=\"info\" disabled>\r\n                  {uvotes.length - dvotes.length}\r\n                </Button>\r\n                <Button\r\n                  color={idvote ? \"primary\" : \"info\"}\r\n                  onClick={\r\n                    !ivote\r\n                      ? () => this.downVote(dvotes)\r\n                      : console.log(\"Not allowed!!\")\r\n                  }\r\n                >\r\n                  <span\r\n                    className={\r\n                      idvote\r\n                        ? \"fa fa-lg fa-arrow-circle-down\"\r\n                        : \"fa fa-lg fa-arrow-down\"\r\n                    }\r\n                  ></span>\r\n                </Button>\r\n                <Button color=\"danger\" onClick={() => this.onCommentsClicked()}>\r\n                  <span className=\"fa fa-lg fa-comment mr-2\" />\r\n                  {this.props.comments.length}\r\n                </Button>\r\n                <Button color=\"success\" onClick={() => this.onShareClicked()}>\r\n                  <span className=\"fa fa-lg fa-share\"></span>\r\n                </Button>\r\n              </ButtonGroup>\r\n            </Row>\r\n          </CardBody>\r\n        </Card>\r\n        <RenderComments\r\n          commentsArray={this.props.comments}\r\n          postComment={this.props.postComment}\r\n          deleteComment={this.props.deleteComment}\r\n          questionId={this.props.question._id}\r\n          author={this.props.auth.userId}\r\n          isOpen={this.state.showComments}\r\n        ></RenderComments>\r\n        <Card>\r\n          <CardBody>\r\n            <div className=\"row justify-content-between\">\r\n              <CardSubtitle className=\"col-6\">\r\n                {this.props.answers.length} Answers(s)\r\n              </CardSubtitle>\r\n              <Button\r\n                className=\"col-6 col-sm-5 col-md-4 add-ans-btn\"\r\n                color=\"danger\"\r\n                onClick={() => this.onAddAnswerClicked()}\r\n              >\r\n                <span className=\"fa fa-lg fa-plus mr-2\"></span>\r\n                ANSWER\r\n              </Button>\r\n            </div>\r\n            <hr></hr>\r\n            {this.props.answers.length ? (\r\n              <RenderAnswers\r\n                answers={this.props.answers}\r\n                deleteAnswer={this.props.deleteAnswer}\r\n                areactions={this.props.areactions}\r\n                postAReaction={this.props.postAReaction}\r\n                deleteAReaction={this.props.deleteAReaction}\r\n                auth={this.props.auth}\r\n              />\r\n            ) : (\r\n              <p className=\"mt-5\">\r\n                Be first one to contribute an answer to this question.\r\n              </p>\r\n            )}\r\n          </CardBody>\r\n        </Card>\r\n        <Modal\r\n          isOpen={this.state.shareModalOpen}\r\n          toggle={() => this.onShareClicked()}\r\n        >\r\n          <ModalHeader toggle={() => this.onShareClicked()}>\r\n            Let's Share this !!\r\n          </ModalHeader>\r\n          <ModalBody>\r\n            <FacebookShareButton\r\n              url={\r\n                frontendBaseUrl+\"question-\" +\r\n                this.props.question._id +\r\n                \"-\" +\r\n                this.props.question.heading\r\n              }\r\n              title={\"Can you answer this ??\"}\r\n              quote={\"Can you answer this ??\"}\r\n              hashtag={\"#Poogle\"}\r\n            >\r\n              <FacebookIcon round={true}></FacebookIcon>\r\n            </FacebookShareButton>\r\n            <WhatsappShareButton\r\n              url={\r\n                frontendBaseUrl+\"question-\" +\r\n                this.props.question._id +\r\n                \"-\" +\r\n                this.props.question.heading\r\n              }\r\n              title={\"Can you answer this ??\"}\r\n              separator={\"\\n\"}\r\n            >\r\n              <WhatsappIcon round={true}></WhatsappIcon>\r\n            </WhatsappShareButton>\r\n            <TelegramShareButton\r\n              url={\r\n                frontendBaseUrl+\"question-\" +\r\n                this.props.question._id +\r\n                \"-\" +\r\n                this.props.question.heading\r\n              }\r\n              title={\"Can you answer this ??\"}\r\n            >\r\n              <TelegramIcon round></TelegramIcon>\r\n            </TelegramShareButton>\r\n            <LinkedinShareButton\r\n              url={\r\n                frontendBaseUrl+\"question-\" +\r\n                this.props.question._id +\r\n                \"-\" +\r\n                this.props.question.heading\r\n              }\r\n              title={\"Can you answer this ??\"}\r\n              source={\"WWW.poogle.com\"}\r\n            >\r\n              <LinkedinIcon round></LinkedinIcon>\r\n            </LinkedinShareButton>\r\n            <TwitterShareButton\r\n              url={\r\n                frontendBaseUrl+\"question-\" +\r\n                this.props.question._id +\r\n                \"-\" +\r\n                this.props.question.heading\r\n              }\r\n              title={\"Can you answer this ??\"}\r\n              hashtags={\"#Poogle\"}\r\n            >\r\n              <TwitterIcon round></TwitterIcon>\r\n            </TwitterShareButton>\r\n            <RedditShareButton\r\n              url={\r\n                frontendBaseUrl+\"question-\" +\r\n                this.props.question._id +\r\n                \"-\" +\r\n                this.props.question.heading\r\n              }\r\n              title={\"Can you answer this ??\"}\r\n            >\r\n              <RedditIcon round></RedditIcon>\r\n            </RedditShareButton>\r\n            <PinterestShareButton\r\n              url={\r\n                frontendBaseUrl+\"question-\" +\r\n                this.props.question._id +\r\n                \"-\" +\r\n                this.props.question.heading\r\n              }\r\n              description={\"Can you answer this ??\"}\r\n              title={\"Can you answer this ??\"}\r\n            >\r\n              <PinterestIcon round></PinterestIcon>\r\n            </PinterestShareButton>\r\n          </ModalBody>\r\n          <ModalFooter>\r\n            <Button color=\"secondary\" onClick={() => this.onShareClicked()}>\r\n              Cancel\r\n            </Button>\r\n          </ModalFooter>\r\n        </Modal>\r\n        <Modal\r\n          isOpen={this.state.answerModalOpen}\r\n          toggle={() => this.onAddAnswerClicked()}\r\n          className=\"modal-dialog modal-dialog-centered modal-lg\"\r\n          backdrop=\"static\"\r\n        >\r\n          <ModalHeader\r\n            style={{ backgroundColor: \"darkgray\" }}\r\n            toggle={() => this.onAddAnswerClicked()}\r\n          >\r\n            Your Answer\r\n          </ModalHeader>\r\n          <ModalBody>\r\n            <Form>\r\n              <Form.Group>\r\n                <Form.Label>\r\n                  <span className=\"form__icon fa fa-pencil\"></span>Describe Here\r\n                </Form.Label>\r\n                <ReactQuill\r\n                  placeholder=\"Thanks for contributing an answer to Poogle ..... \"\r\n                  style={{ backgroundColor: \"white\" }}\r\n                  theme=\"snow\"\r\n                  value={this.state.description}\r\n                  onChange={this.handleEditorChange}\r\n                  modules={this.modules}\r\n                  formats={formats}\r\n                />\r\n                <div className=\"invalid__feedback\">\r\n                  {this.state.errors.description}\r\n                </div>\r\n              </Form.Group>\r\n            </Form>\r\n          </ModalBody>\r\n          <ModalFooter style={{ backgroundColor: \"lightgray\" }}>\r\n            <Button onClick={this.handleSubmit} color=\"info\">\r\n              <span className=\"fa fa-paper-plane mr-3\" />\r\n              Submit\r\n            </Button>\r\n            <Button color=\"danger\" onClick={() => this.onAddAnswerClicked()}>\r\n              Cancel\r\n            </Button>\r\n          </ModalFooter>\r\n        </Modal>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nclass SingleQuestion extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n  render() {\r\n    if (\r\n      this.props.isLoading ||\r\n      this.props.answersIsLoading ||\r\n      this.props.reactionsIsLoading ||\r\n      this.props.areactionsIsLoading\r\n    ) {\r\n      return <Loading type=\"spokes\" color=\"grey\" />;\r\n    } else if (\r\n      this.props.errMess ||\r\n      this.props.answersErrMess ||\r\n      this.props.commentsErrMess ||\r\n      this.props.reactionsErrMess ||\r\n      this.props.reactionsErrMess\r\n    ) {\r\n      return (\r\n        <div className=\"container spaces\">\r\n          <div className=\"row\">\r\n            <div className=\"col-12\">\r\n              <h4>{this.props.errMess}</h4>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      );\r\n    } else {\r\n      return (\r\n  \r\n        <Container className=\"single-question\">\r\n          <Row className=\"justify-content-center mt-5\">\r\n            <Col lg={10}>\r\n              <RenderQuestionAnswers\r\n                question={this.props.question}\r\n                answers={this.props.answers}\r\n                comments={this.props.comments}\r\n                postComment={this.props.postComment}\r\n                deleteComment={this.props.deleteComment}\r\n                onClick={this.props.onClick}\r\n                auth={this.props.auth}\r\n                postAnswer={this.props.postAnswer}\r\n                deleteAnswer={this.props.deleteAnswer}\r\n                postReaction={this.props.postReaction}\r\n                deleteReaction={this.props.deleteReaction}\r\n                reactions={this.props.reactions}\r\n                areactions={this.props.areactions}\r\n                postAReaction={this.props.postAReaction}\r\n                deleteAReaction={this.props.deleteAReaction}\r\n              />\r\n            </Col>\r\n          </Row>\r\n          <ToastContainer\r\n            />\r\n        </Container>\r\n        \r\n      );\r\n    }\r\n  }\r\n}\r\n\r\nexport default SingleQuestion;\r\n","D:\\project\\final\\Poogle\\src\\components\\chat\\Chat.js",["353","354","355","356","357"],"import React, { useEffect, useState } from \"react\";\r\nimport \"./Chat.css\";\r\nimport { Button } from 'reactstrap';\r\nimport {\r\n  Container,\r\n  Row,\r\n  Col,\r\n  Form,\r\n  Tab,\r\n  Tabs,\r\n  Nav,\r\n  ListGroup,\r\n  ListGroupItem,\r\n  Image\r\n} from \"react-bootstrap\";\r\nimport questionMan from \"../../Images/chat-bubbles.webp\";\r\nimport ChatSideBar from \"./ChatSideBar\";\r\nimport { getChats, sendMessage } from \"../../redux/actions/chat\";\r\nimport { baseUrl } from \"../../shared/baseUrl\";\r\nimport { connect } from \"react-redux\";\r\nimport background from \"../../Images/chat_back.jpg\";\r\nimport Modal from \"react-modal\";\r\nimport { spaces } from \"../variables\";\r\nimport { FaSearch } from \"react-icons/fa\";\r\nconst axios = require(\"axios\");\r\nconst Pusher = require(\"pusher-js\");\r\n\r\nconst Chat = ({ chats, token, dispatch }) => {\r\n  console.log(chats);\r\n  const [person, setPerson] = useState(\"\");\r\n  const [chat, setChat] = useState([]);\r\n  const [msg, setMsg] = useState(\"\");\r\n  const [modalOpen, setModalOpen] = useState(false);\r\n  const [currSpace, setCurrSpace] = useState(\"\");\r\n  const [newPerson, setNewPerson] = useState(\"\");\r\n  const [search, setSearch] = useState(\"\");\r\n  const [newPersonId, setNewPersonId] = useState(\"\");\r\n  const [users, setUsers] = useState([]);\r\n\r\n  useEffect(() => {\r\n\r\n    const width  = window.innerWidth || document.documentElement.clientWidth || \r\n    document.body.clientWidth;\r\n    const height = window.innerHeight|| document.documentElement.clientHeight|| \r\n    document.body.clientHeight;\r\n\r\n    if(width <= 1200)\r\n      alert(\"Chat is preferred to be used on large screen for better experience\");\r\n\r\n    const pusher = new Pusher(\"563987a4f9fd4750ba5e\", {\r\n      cluster: \"ap2\",\r\n    });\r\n\r\n    const channel = pusher.subscribe(\"messages\");\r\n    channel.bind(\"inserted\", (data) => {\r\n      dispatch(getChats(token));\r\n    });\r\n  }, []);\r\n\r\n  const toggle = () => {\r\n    setModalOpen(false);\r\n  }\r\n\r\n  useEffect(() => {\r\n    dispatch(getChats(token));\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    setMsg(\"\");\r\n  }, [person]);\r\n\r\n  useEffect(() => {\r\n    var list = document.getElementById(\"list\");\r\n    if (list) list.scrollTop = list.scrollHeight;\r\n  }, [person, chat]);\r\n\r\n  const handleMessageSent = (e) => {\r\n    e.preventDefault();\r\n    if (msg === \"\") return;\r\n    setChat((chat) => [...chat, { msg, sender: \"me\" }]);\r\n    const id =\r\n      newPerson === person\r\n        ? newPersonId\r\n        : chats.chats.filter(({ name }) => person === name)[0]._id;\r\n    console.log(token, msg, id);\r\n    dispatch(sendMessage(token, msg, id));\r\n    setMsg(\"\");\r\n  };\r\n\r\n  const handleMsgChange = (e) => {\r\n    e.preventDefault();\r\n    setMsg(e.target.value);\r\n  };\r\n\r\n  const handleCurrSpace = async (e) => {\r\n    setCurrSpace(e.target.innerHTML);\r\n    const user = await axios({\r\n      method: \"get\",\r\n      url: baseUrl + \"users\",\r\n      params: {\r\n        interests: e.target.innerHTML,\r\n      },\r\n    });\r\n    console.log(user);\r\n    setUsers(user.data);\r\n  };\r\n\r\n  const handleNewChat = (e) => {\r\n    console.log(e.target.innerHTML);\r\n    console.log(e.target.getAttribute(\"id\"));\r\n    setNewPersonId(e.target.getAttribute(\"id\"));\r\n    console.log(e.target);\r\n    setCurrSpace(\"\");\r\n    setNewPerson(e.target.innerHTML);\r\n    setChat([]);\r\n    setUsers([]);\r\n    setPerson(e.target.innerHTML);\r\n    setModalOpen(false);\r\n  };\r\n\r\n  return (\r\n    <Container style={{ height: \"80vh\", marginTop: \"20px\" }}>\r\n      <Modal isOpen={modalOpen} style={{ overlay: { zIndex: 1000010 } }}>\r\n        <Row style={{ width: \"100%\" }}>\r\n          <FaSearch style={{ margin: \"12px\" }} />\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Search person\"\r\n            value={search}\r\n            style={{\r\n              border: \"none\",\r\n              outlineWidth: \"0\",\r\n              background: \"transparent\",\r\n              padding: \"10px\",\r\n            }}\r\n            onChange={(e) => {\r\n              setSearch(e.target.value);\r\n            }}\r\n          ></input>\r\n        </Row>\r\n        {search !== \"\" && currSpace === \"\" ? (\r\n          <ListGroup style={{ width: \"100%\" }}>\r\n            {spaces\r\n              .filter(({ value }) =>\r\n                value.toLowerCase().includes(search.toLowerCase())\r\n              )\r\n              .map((space) => (\r\n                <ListGroupItem>\r\n                  <Nav.Link onClick={handleCurrSpace}>{space.value}</Nav.Link>\r\n                </ListGroupItem>\r\n              ))}\r\n          </ListGroup>\r\n        ) : currSpace === \"\" ? (\r\n          <h1>Search for spaces</h1>\r\n        ) : (\r\n          <p></p>\r\n        )}\r\n        {currSpace === \"\" ? <p /> : <p>Showing results for, {currSpace}</p>}\r\n        <ListGroup>\r\n          {users.map((user) => (\r\n            <ListGroupItem>\r\n              <Nav.Link onClick={handleNewChat} id={user._id}>\r\n                {user.name}\r\n              </Nav.Link>\r\n            </ListGroupItem>\r\n          ))}\r\n        </ListGroup>\r\n        <Button onClick={toggle} color=\"danger\" className='mt-2'><span className=' mr-3' />Close</Button>\r\n      </Modal>\r\n      <Row style={{ maxHeight: \"60vh\" }}>\r\n        {/*Chat sidebar*/}\r\n        <ChatSideBar\r\n          person={person}\r\n          setPerson={setPerson}\r\n          chat={chat}\r\n          setChat={setChat}\r\n          modalOpen={modalOpen}\r\n          setModalOpen={setModalOpen}\r\n          newPerson={newPerson}\r\n        />\r\n        {/*Chat section*/}\r\n        <Col xs={6} md={8}>\r\n          {person === \"\" ? (\r\n            <div>\r\n              <h4>CHOOSE YOUR MENTOR</h4>\r\n              <Image\r\n                src={questionMan}\r\n                className=\"header__side__manimage\"\r\n                fluid\r\n              />\r\n            </div>\r\n          ) : (\r\n            <div>\r\n              <Row style={{ padding: \"10px\" }}>\r\n                <div\r\n                  className=\"justify-content-end\"\r\n                  style={{\r\n                    overflowY: \"scroll\",\r\n                    height: \"74vh\",\r\n                    width: \"100%\",\r\n                    backgroundImage: { background },\r\n                    backgroundRepeat: \"repeat\",\r\n                    backgroundPosition: \"center\",\r\n                  }}\r\n                  id=\"list\"\r\n                >\r\n                  {chat.map(({ msg, sender, createdAt }) => (\r\n                    <div\r\n                      class={`${sender === \"me\" ? \"sending__msg\" : \"\"}`}\r\n                      style={{ maxWidth: \"50%\", wordBreak: \"break-all\" }}\r\n                    >\r\n                      <div\r\n                        className={`rounded px-2 py-1 ${\r\n                          sender === \"me\" ? \"bg-primary text-white\" : \"border\"\r\n                        }`}\r\n                        style={{ margin: \"10px\" }}\r\n                      >\r\n                        {msg}\r\n                      </div>\r\n                      <div className={`text-muted small text-left`}>\r\n                        {createdAt}\r\n                      </div>\r\n                      <div className={`text-muted small text-right`}>\r\n                        {sender === \"me\" ? \"You\" : person}\r\n                      </div>\r\n                    </div>\r\n                  ))}\r\n                </div>\r\n              </Row>\r\n              <Row>\r\n                <Form\r\n                  style={{\r\n                    bottom: \"10px\",\r\n                    width: \"85%\",\r\n                    margin: \"auto\",\r\n                  }}\r\n                  onSubmit={handleMessageSent}\r\n                >\r\n                  <Form.Control\r\n                    placeholder=\"Type your message (right click cursor to insert emojies)\"\r\n                    value={msg}\r\n                    onChange={handleMsgChange}\r\n                  />\r\n                </Form>\r\n              </Row>\r\n            </div>\r\n          )}\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return { chats: state.chats, token: state.auth.token };\r\n};\r\n\r\nexport default connect(mapStateToProps)(Chat);\r\n","D:\\project\\final\\Poogle\\src\\components\\profile_page\\profile.js",["358","359","360","361","362","363","364","365","366","367","368","369","370","371"],"import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Container, Row, Col, Image, Form, Button} from \"react-bootstrap\";\r\nimport { Breadcrumb, BreadcrumbItem, Modal, ModalHeader, ModalBody, ModalFooter} from \"reactstrap\";\r\nimport profilePic from \"../../Images/profile_pic.png\";\r\nimport { RiQuestionAnswerFill } from \"react-icons/ri\";\r\nimport Select from 'react-select'\r\nimport { HiOutlineUserGroup } from \"react-icons/hi\";\r\nimport { FaBlog, FaQuestionCircle, FaUserAlt, FaRegSmile} from \"react-icons/fa\";\r\nimport { SiGooglescholar } from \"react-icons/si\";\r\nimport { MdDescription } from \"react-icons/md\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./profile.css\";\r\nimport Loading from \"../loading\";\r\nimport {spaces} from '../variables';\r\nimport {Questions, Blogs, Answers, BlogDemands} from './about'\r\nimport {deleteQuestion, deleteBlog, deleteBlogDemand, deleteAnswer, fetchUser, userBlogDemands,\r\n\tupdateUser, userQuestions, userAnswers, userBlogs} from '../../redux/ActionCreators';\r\nimport {AiOutlineMail} from 'react-icons/ai';\r\nimport {RiLockPasswordFill} from 'react-icons/ri';\r\nimport {FiUserPlus} from 'react-icons/fi';\r\nimport {fields} from '../variables';\r\nimport {baseUrl} from '../../shared/baseUrl'\r\nimport { ToastContainer, toast } from 'react-toastify';\r\n\r\n\r\nclass profile extends Component {\r\n\tconstructor(props){\r\n        super(props);\r\n        this.state = {\r\n\t\t\tquestionsFetched:false,\r\n\t\t\tanswersFetched:false,\r\n\t\t\tblogsFetched:false,\r\n\t\t\tblogDemandsFetched:false,\r\n\t\t\tquestions_user:[],\r\n\t\t\tanswers_user:[],\r\n\t\t\tblogs_user:[],\r\n\t\t\tblogDemands_user:[],\r\n\t\t\tskipQues:0,\r\n\t\t\tlimitQues:20,\r\n\t\t\tskipAns:0,\r\n\t\t\tlimitAns:20,\r\n\t\t\tskipBlog:0,\r\n\t\t\tlimitBlog:20,\r\n\t\t\tskipBlogDemand:0,\r\n\t\t\tlimitBlogDemand:20,\r\n\t\t\towner:this.props.auth.userId,\r\n\t\t\tuser:this.props.match.params.userId,\r\n\t\t\tshowAbout:true,\r\n\t\t\tshowQuestions:false,\r\n\t\t\tshowAnswers:false,\r\n\t\t\tshowBlogs:false,\r\n\t\t\tshowBlogDemands:false,\r\n\t\t\tisAuth: false, \r\n\t\t\tprofileModelOpen: false,\r\n\t\t\temail:\"\",\r\n            Uname:\"\",\r\n            password:\"\",\r\n            about:{\r\n                graduation_year:\"\",\r\n                field:\"\",\r\n                description:\"\"\r\n            },\r\n\t\t\timage:\"\",\r\n\t\t\terrors:{\r\n\t\t\t\temail:\"\",\r\n            \tpassword:\"\",\r\n\t\t\t\tgraduation_year:\"\",\r\n\t\t\t\timage:\"\"\r\n\t\t\t}\t    \r\n\t\t}       \r\n    }\r\n\tcomponentDidMount(){\r\n\t\tconst authId= this.props.auth.userId\r\n        const user= this.props.user.user;\r\n\t\tconst reqId = this.props.match.params.userId;\r\n        if(authId===reqId){\r\n\t\t\tthis.setState({\r\n\t\t\t\tisAuth:true\r\n\t\t\t})\r\n\t\t}else{\r\n\t\t\tthis.setState({\r\n\t\t\t\tisAuth:false\r\n\t\t\t})\r\n\t\t}\r\n\t\tthis.getUserQuestions({userId: reqId, token:this.props.auth.token});\r\n\t\tthis.getUserAnswers({userId: reqId, token:this.props.auth.token})\r\n\t\tthis.getUserBlogs({userId: reqId, token:this.props.auth.token})\r\n\t\tthis.getUserBlogDemand({userId: reqId, token:this.props.auth.token})\r\n\t\tlet userId;\r\n        if(user){\r\n            userId = user.userId;\r\n        }\r\n\t\tif(reqId){\r\n\t\t\tif(authId){\r\n\t\t\t\tif(!user||userId!==reqId){\r\n\t\t\t\t\tthis.getUserProfileDetails(reqId);\r\n\t\t\t\t}\r\n\t\t\t}else{\r\n\t\t\t\tthis.getUserProfileDetails(reqId);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tgetUserProfileDetails = async(reqId)=>{\r\n\t\tawait this.props.fetchUser(reqId);\r\n\t}\r\n\tgetUserQuestions = async(details)=>{\r\n\t\tlet {skipQues, limitQues, questions_user} = this.state;\r\n\t\tlet {userId, token} = details;\r\n\t\tif(this.state.questionsFetched===true) return;\r\n\t\tawait this.props.userQuestions({userId, token, Skip: skipQues, Limit: limitQues});\r\n\t\tconst {questions} = this.props;\r\n\r\n\t\tif(questions){\r\n\t\t\tif(questions.length==0){\r\n\t\t\t\tthis.setState({\r\n\t\t\t\t\tquestionsFetched: true\r\n\t\t\t\t})\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tthis.setState({\r\n\t\t\t\tquestions_user:[...questions_user, questions],\r\n\t\t\t\tskipQues: this.state.skipQues+1\r\n\t\t\t})\r\n\r\n\t\t}\r\n\t}\r\n\r\n\tgetUserAnswers = async(details)=>{\r\n\t\tlet {skipAns, limitAns, answers_user} = this.state;\r\n\t\tlet {userId, token} = details;\r\n\t\tif(this.state.answersFetched===true) return;\r\n\t\tawait this.props.userAnswers({userId, token, Skip: skipAns, Limit: limitAns});\r\n\t\tconst {answers} = this.props;\r\n\r\n\t\tif(answers){\r\n\t\t\tif(answers.length==0){\r\n\t\t\t\tthis.setState({\r\n\t\t\t\t\tanswersFetched: true\r\n\t\t\t\t})\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tthis.setState({\r\n\t\t\t\tanswers_user:[...answers_user, answers],\r\n\t\t\t\tskipAns: this.state.skipAns+1\r\n\t\t\t})\r\n\r\n\t\t}\r\n\t}\r\n\r\n\tgetUserBlogs = async(details)=>{\r\n\t\tlet {skipBlog, limitBlog, blogs_user} = this.state;\r\n\t\tlet {userId, token} = details;\r\n\t\tif(this.state.blogsFetched===true) return;\r\n\t\tawait this.props.userBlogs({userId, token, Skip: skipBlog, Limit: limitBlog});\r\n\t\tconst {blogs} = this.props;\r\n\r\n\t\tif(blogs){\r\n\t\t\tif(blogs.length==0){\r\n\t\t\t\tthis.setState({\r\n\t\t\t\t\tblogsFetched: true\r\n\t\t\t\t})\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tthis.setState({\r\n\t\t\t\tblogs_user:[...blogs_user, blogs],\r\n\t\t\t\tskipBlog: this.state.skipBlog+1\r\n\t\t\t})\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tgetUserBlogDemand = async(details)=>{\r\n\t\tlet {skipBlogDemand, limitBlogDemand, blogDemands_user} = this.state;\r\n\t\tlet {userId, token} = details;\r\n\t\tif(this.state.blogDemandsFetched===true) return;\r\n\t\tawait this.props.userBlogDemands({userId, token, Skip: skipBlogDemand, Limit: limitBlogDemand});\r\n\t\tconst {blogDemands} = this.props;\r\n\r\n\t\tif(blogDemands){\r\n\t\t\tif(blogDemands.length==0){\r\n\t\t\t\tthis.setState({\r\n\t\t\t\t\tblogDemandsFetched: true\r\n\t\t\t\t})\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tthis.setState({\r\n\t\t\t\tblogDemands_user:[...blogDemands_user, blogDemands],\r\n\t\t\t\tskipBlogDemand: this.state.skipBlogDemand+1\r\n\t\t\t})\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\r\n\r\n\r\n\r\n\tactivateAbout = (e)=>{\r\n\t\te.preventDefault();\r\n\t\tthis.setState({\r\n\t\t\tshowAbout:true,\r\n\t\t\tshowQuestions:false,\r\n\t\t\tshowAnswers:false,\r\n\t\t\tshowBlogs:false,\r\n\t\t\tshowBlogDemands:false\r\n\t\t})\r\n\t}\r\n\tactivateQuestions = (e)=>{\r\n\t\te.preventDefault();\r\n\t\tthis.setState({\r\n\t\t\tshowAbout:false,\r\n\t\t\tshowQuestions:true,\r\n\t\t\tshowAnswers:false,\r\n\t\t\tshowBlogs:false,\r\n\t\t\tshowBlogDemands:false\t\r\n\t\t})\r\n\t}\r\n\tactivateAnswers = (e)=>{\r\n\t\te.preventDefault();\r\n\t\tthis.setState({\r\n\t\t\tshowAbout:false,\r\n\t\t\tshowQuestions:false,\r\n\t\t\tshowAnswers:true,\r\n\t\t\tshowBlogs:false,\r\n\t\t\tshowBlogDemands:false\r\n\t\t})\r\n\t}\r\n\tactivateBlogs = (e)=>{\r\n\t\te.preventDefault();\r\n\t\tthis.setState({\r\n\t\t\tshowAbout:false,\r\n\t\t\tshowQuestions:false,\r\n\t\t\tshowAnswers:false,\r\n\t\t\tshowBlogs:true,\r\n\t\t\tshowBlogDemands:false\r\n\t\t})\r\n\t}\r\n\r\n\tactivateBlogDemand = (e)=>{\r\n\t\te.preventDefault();\r\n\t\tthis.setState({\r\n\t\t\tshowAbout:false,\r\n\t\t\tshowQuestions:false,\r\n\t\t\tshowAnswers:false,\r\n\t\t\tshowBlogs:false,\r\n\t\t\tshowBlogDemands:true\t\r\n\t\t})\r\n\t}\r\n\r\n\thandleChange = (event)=> {\r\n        const target = event.target;\r\n        const name = target.name;\r\n        this.setState({\r\n            [name]: event.target.value\r\n        });\r\n    }\r\n\thandleSelectField = field =>{\r\n        this.setState(prevState =>({\r\n            about:{\r\n                ...prevState.about,\r\n                field:field\r\n            }\r\n        }))\r\n    }\r\n    \r\n    handleAboutChange = (event)=> {\r\n      const target = event.target;\r\n      const name=  target.name;\r\n      this.setState( prevState =>({\r\n        about:{\r\n            ...prevState.about,\r\n            [name]: event.target.value\r\n        }\r\n      })\r\n      )\r\n    }\r\n\tchangeModalState=(e)=>{\r\n\t\tthis.setState({\r\n\t\t\tprofileModelOpen:!this.state.profileModelOpen\r\n\t\t})\r\n\t}\r\n\tupdateProfile=(e)=>{\r\n\t\te.preventDefault();\r\n\t\tthis.setState({\r\n\t\t\tprofileModelOpen:!this.state.profileModelOpen\r\n\t\t})\r\n\t}\r\n\tformValidation = () =>{\r\n        const{password, email,about,image} = this.state;\r\n\t\tconst {graduation_year} = about;\r\n        let emailError=\"\",passwordError=\"\",graduationError=\"\", imageError, error;\r\n\t\tif(email && !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(email)){\r\n            emailError = \"Email address is Invalid\";\r\n            error= true;\r\n        }\r\n        if(password.length>0&&password.length<4){\r\n            passwordError=\"Length of password must be 4 characters or more\"\r\n            error= true;\r\n        }\r\n\t\tif(graduation_year&&(graduation_year<1940 || graduation_year>2055)){\r\n\t\t\tgraduationError = \"Please enter a valid graduation year\";\r\n            error= true;\r\n\t\t}\r\n\t\tif(image){\r\n\t\t\tif(image.type!=\"image/jpeg\"&&image.type!=\"image/png\"){\r\n\t\t\t\timageError=\"You must upoad a valid jpeg/png image file\";\r\n\t\t\t\terror = true;\r\n\t\t\t}else if(image.size>=1000000){\r\n\t\t\t\timageError=\"Maximum permissible size of an image is 1Mb\";\r\n\t\t\t\terror = true;\r\n\t\t\t}\r\n\t\t}\r\n        this.setState(prevState => ({\r\n            errors:{\r\n                email:emailError,\r\n                password:passwordError,\r\n\t\t\t\tgraduation_year:graduationError,\r\n\t\t\t\timage:imageError\r\n            }\r\n        }))\r\n        \r\n        return !error;\r\n    }\r\n\r\n\tnotifyS = (message) => toast.success(message);\r\n    notifyF = (message) => toast.error(message);\r\n\r\n\thandleSubmit=async(e)=>{\r\n\t\te.preventDefault();\r\n\t\tconst isValid = this.formValidation();\r\n\t\tif(isValid){\r\n\t\t\tconst{email, Uname, password, about, image}=this.state;\r\n\t\t\tlet{graduation_year, field, description} = about;\r\n\t\t\tif(field){\r\n\t\t\t\tfield = field.value;\r\n\t\t\t}\r\n\t\t\tconst token = this.props.auth.token;\r\n\t\t\tlet data = {token,image, email, password, Uname, graduation_year, field, description};\r\n\t\t\t\r\n\t\t\tawait this.props.updateUser(data);\r\n\t\t\tif(this.props.updatedUser.user&&this.props.updatedUser.user.message){\r\n\t\t\t\tthis.notifyS(\"Details updated successfully\");\r\n\r\n\t\t\t\tsetTimeout( async () => {\r\n\t\t\t\t\tawait this.props.fetchUser(this.props.auth.userId);\r\n\t\t\t\t}, 3000);\r\n\r\n\t\t\t}else if(this.props.updatedUser.errMess){\r\n\t\t\t\tthis.notifyF(\"Either this email is already in use or there is some problem with the server.\");\r\n\t\t\t}\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t}\r\n\thandleImageUpload = (e)=>{\r\n\t\te.preventDefault();\r\n\t\tthis.setState({\r\n\t\t\timage:e.target.files[0],\r\n\t\t\terrors:{\r\n\t\t\t\timage:\"\"\r\n\t\t\t}\r\n\t\t})\r\n\t}\r\n\tsetAlternateImage = (e)=>{\r\n\t\te.target.src=profilePic;\r\n\t}\r\n\trenderUpdateModal = ()=>{\r\n\t\treturn(\r\n\t\t\t<Modal isOpen={this.state.profileModelOpen} \r\n               toggle={() => this.changeModalState()}\r\n               className='modal-dialog modal-dialog-centered modal-lg'\r\n               backdrop='static'\r\n               >\r\n            <ModalHeader style={{backgroundColor: 'darkgray'}} toggle={() => this.changeModalState()}>Update Profile</ModalHeader>\r\n            <ModalBody>\r\n\t\t\t\t<div className=\"invalid__feedback user__notice\">**Please fill only those fields that you want to update</div>\r\n                <Form enctype=\"multipart/formdata\">\r\n\t\t\t\t\t<Form.Group controlId=\"formBasicInput\">\r\n                        <Form.Label><span className=\"form__icon\"><FaUserAlt/></span>Name</Form.Label>\r\n                            <input name=\"Uname\"  className=\"form-control\" type=\"text\"  placeholder=\"Enter name\" value = {this.state.Uname} onChange={this.handleChange}/>\r\n                            <div className=\"invalid__feedback\">{this.state.errors.Uname}</div>\r\n                    </Form.Group>\r\n                \t<Form.Group controlId=\"formBasicEmail\">\r\n                        <Form.Label><span className=\"form__icon\"><AiOutlineMail/></span>Email address</Form.Label>\r\n                            <input name=\"email\"  className=\"form-control\" type=\"email\"  placeholder=\"Enter email\" \r\n                            value = {this.state.email} onChange={this.handleChange}/>\r\n                            <div className=\"invalid__feedback\">{this.state.errors.email}</div>\r\n                    </Form.Group>\r\n\t\t\t\t\t<Form.Group controlId=\"formBasicPassword\">\r\n                            <Form.Label><span className=\"form__icon\"><RiLockPasswordFill/></span>Password</Form.Label>\r\n                            <input name=\"password\" className=\"form-control\" type=\"password\"  placeholder=\"Enter Password\" \r\n                            value = {this.state.password} onChange={this.handleChange}/>\r\n                            <div className=\"invalid__feedback\">{this.state.errors.password}</div>\r\n                    </Form.Group>\r\n\t\t\t\t\t<Form.Group controlId=\"formBasicInput\">\r\n                        <Form.Label><span className=\"form__icon\"><SiGooglescholar/></span>Graduation Year</Form.Label>\r\n                            <input name=\"graduation_year\"  className=\"form-control\" type=\"number\" min={1940} max={2050}  placeholder=\"Enter Year\" value = {this.state.about.graduation_year} onChange={this.handleAboutChange}/>\r\n\t\t\t\t\t\t\t<div className=\"invalid__feedback\">{this.state.errors.graduation_year}</div>\r\n\t\t\t\t\t</Form.Group>\r\n                    \r\n                    <Form.Group controlId=\"formBasicName\">\r\n                        <Form.Label><span className=\"form__icon\"><HiOutlineUserGroup/></span>Field Of Study</Form.Label>\r\n                            <div><Select name=\"field\" options={fields} className=\"basic-multi-select\" value={this.state.about.field} onChange={this.handleSelectField} classNamePrefix=\"select\"/></div>\r\n                    </Form.Group>\r\n\t\t\t\t\t<Form.Group controlId=\"formBasicEmail\">\r\n                        <Form.Label><span className=\"form__icon\"><MdDescription/></span>Tell us about  yourself</Form.Label>\r\n                            <textarea name=\"description\" rows={3} className=\"form-control\"  value={this.state.about.description} placeholder=\"Briefly describe yourself\" onChange={this.handleAboutChange} />\r\n                    </Form.Group>\r\n\t\t\t\t\t<Form.Group controlId=\"formBasicEmail\">\r\n                        <Form.Label><span className=\"form__icon\"><MdDescription/></span>Change Profile Picture</Form.Label>\r\n                            <div><input type=\"file\" name=\"image\"  onChange={this.handleImageUpload} /></div>\r\n\t\t\t\t\t\t\t<div className=\"invalid__feedback\">{this.state.errors.image}</div>\r\n                    </Form.Group>\r\n\r\n                </Form>\r\n            </ModalBody>\r\n            <ModalFooter style={{backgroundColor: 'lightgray'}}>\r\n                <Button onClick={this.handleSubmit} color='info'><span className='fa fa-paper-plane mr-3' />Submit</Button>\r\n                <Button color='danger' onClick={() => this.changeModalState()}>Cancel</Button>\r\n            </ModalFooter>\r\n        </Modal>\r\n\t\t)\r\n\t}\r\n\r\n\r\n\trenderInterestList() {\r\n\t\tlet { interests } = this.props.user.user;\r\n\t\tinterests = interests.map(({interest, voteCount})=> {\r\n\t\t\tlet interestId = interest\r\n\t\t\tinterest = interest.replaceAll('-',' ');\r\n\t\t\treturn {interestId , interest, voteCount};\r\n\t\t})\r\n\t\t\r\n\t\treturn interests.map((interestObj,key) => {\r\n\t\t\treturn (\r\n\t\t\t\t<Link to={\"/spaces/\"} className=\"interests__button\" key={key}>\r\n\t\t\t\t\t<span className=\"\">{interestObj.interest}</span>\r\n\t\t\t\t\t{/* <span className=\"interest__count\">{interestObj.voteCount}</span> */}\r\n\t\t\t\t</Link>\r\n\t\t\t);\r\n\t\t});\r\n\t}\r\n\t\r\n\t\r\n\trenderAbout() {\r\n\t\tconst { user } = this.props.user;\r\n\t\tconst { about } = user;\r\n\t\treturn (\r\n\t\t\t<>\r\n\t\t\t\t<div className=\"user__info\">\r\n\t\t\t\t\t<Row>\r\n\t\t\t\t\t\t<h4>About</h4>\r\n\t\t\t\t\t</Row>\r\n\t\t\t\t\t<Row className=\"user__info--each\">\r\n\t\t\t\t\t\t<span className=\"user__icon\">\r\n\t\t\t\t\t\t\t<MdDescription />\r\n\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t<span className=\"info__title\">Description: </span>\r\n\t\t\t\t\t\t<span className=\"info__description\">{about.description}</span>\r\n\t\t\t\t\t</Row>\r\n\t\t\t\t\t\r\n\t\t\t\t\t\r\n\t\t\t\t\t <Row className=\"user__info--each\">\r\n\t\t\t\t\t\t<span className=\"user__icon\">\r\n\t\t\t\t\t\t\t<FaRegSmile />\r\n\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t<span className=\"info__title\">Fun Fact: </span>\r\n\t\t\t\t\t\t<span className=\"info__description\">{about.fun_fact}</span>\r\n\t\t\t\t\t</Row> \r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t<div className=\"user__info\">\r\n\t\t\t\t\t<Row>\r\n\t\t\t\t\t\t<h4>Interests</h4>\r\n\t\t\t\t\t</Row>\r\n\t\t\t\t\t<Row>{this.renderInterestList()}</Row>\r\n\t\t\t\t</div>\r\n\t\t\t</>\r\n\t\t);\r\n\t\r\n\t\r\n\t\r\n\t}\r\n\t\r\n\r\n\trenderQuestionArray = (questions)=>{\r\n\t\treturn questions.map((question, key)=>{\r\n\t\t\tif(question.author._id===this.props.auth.userId){\r\n\t\t\t\treturn <Questions question={question} \r\n\t\t\t\t\tanswers={this.props.answers} \r\n\t\t\t\t\treactions={this.props.reactions} \r\n\t\t\t\t\tdeleteQuestion = {this.props.deleteQuestion}\r\n\t\t\t\t\tkey={key}\r\n\t\t\t\t\tvalu ={key}/>\r\n\t\t\t}\r\n\t\t\treturn; \r\n\t\t})\r\n\r\n\t}\r\n\trenderQuestions(){\r\n\t\tconst questions = this.props.questions\r\n\t\tif(questions&&questions.length>0){\r\n\t\t\treturn(\r\n\t\t\t\t<div className=\"profile__section\">\r\n\t\t\t\t<h2>Questions</h2>\r\n\t\t\t\t\t{this.renderQuestionArray(questions)||<p>  You have not asked any question till now</p>}\r\n\t\t\t\t</div>\r\n\t\t\t)\r\n\t\t}else{\r\n\t\t\treturn(\r\n\t\t\t\t<div className=\"profile__section\">\r\n\t\t\t\t<h2>Questions</h2>\r\n\t\t\t\t<p>  You have not asked any question till now</p>\r\n\t\t\t\t</div>\r\n\t\t\t)\r\n\t\t}\r\n\t\t\r\n\r\n\t}\r\n\trenderBlogArray = (blogs)=>{\r\n\t\treturn blogs.map((blog, key)=>{\r\n\t\t\tif(blog.author._id===this.props.auth.userId){\r\n\t\t\t\treturn <Blogs blog={blog} \r\n\t\t\t\t\tbreactions={this.props.breactions}\r\n\t\t\t\t\tdeleteBlog = {this.props.deleteBlog}\r\n\t\t\t\t\tkey={key}\r\n\t\t\t\t\tvalu ={key}/>\r\n\t\t\t}\r\n\t\t\treturn; \r\n\t\t})\r\n\t}\r\n\trenderBlogs(){\r\n\t\tconst { blogs } = this.props;\r\n\t\tif(blogs.length>0){\r\n\t\t\treturn(\r\n\t\t\t\t<div className=\"profile__section\">\r\n\t\t\t\t\t<h2>Blogs</h2>\r\n\t\t\t\t\t{this.renderBlogArray(blogs)||<p>You have not posted any blog</p>}\r\n\r\n\t\t\t\t</div>\r\n\t\t\t)\r\n\t\t}else{\r\n\t\t\treturn(\r\n\t\t\t\t<div className=\"profile__section\">\r\n\t\t\t\t\t<h2>Blogs</h2>\r\n\t\t\t\t\t<p>You have not posted any blog</p>\r\n\t\t\t\t</div>\r\n\t\t\t)\r\n\t\t}\r\n\t}\r\n\trenderAnswerArray = (answers)=>{\r\n\t\treturn answers.map((answer, key)=>{\r\n\t\t\tif(answer.author._id===this.props.auth.userId){\r\n\t\t\t\tlet quesId = answer.question._id; \r\n\t\t\t\tlet heading=answer.question.heading\r\n\t\t\t\tlet ques = {quesId, heading}\r\n\t\t\t\treturn <Answers answer = {answer}\r\n\t\t\t\t\t\t\t\tquestion = {ques}\r\n\t\t\t\t\t\t\t\tvalu = {key}\r\n\t\t\t\t\t\t\t\tkey={key}\r\n\t\t\t\t\t\t\t\tdeleteAnswer = {this.props.deleteAnswer}\r\n\t\t\t\t\t\t\t/>\t\r\n\r\n\t\t\t}\r\n\t\t})\r\n\t}\r\n\trenderAnswers=()=>{\r\n\t\tconst {answers} = this.props;\r\n\t\tif(answers.length){\r\n\t\t\treturn(\r\n\t\t\t\t<div className=\"profile__section\">\r\n\t\t\t\t\t<h2>Answers</h2>\r\n\t\t\t\t\t{this.renderAnswerArray(answers)||<p>You have not answered any question</p>}\r\n\t\t\t\t</div>\r\n\t\t\t)\r\n\t\t}else{\r\n\t\t\treturn(\r\n\t\t\t\t<div className=\"profile__section\">\r\n\t\t\t\t\t<h2>Answers</h2>\r\n\t\t\t\t\t<p>You have not answered any question</p>\r\n\t\t\t\t</div>\r\n\t\t\t)\r\n\t\t}\r\n\t}\r\n\r\n\trenderBlogDemandsArray = (blogDemands)=>{\r\n\t\tconsole.log(blogDemands);\r\n\t\treturn blogDemands.map((blogDemand, key)=>{\r\n\t\t\tif(blogDemand.author._id === this.props.auth.userId){\r\n\t\t\t\treturn <BlogDemands blogDemand = {blogDemand}\r\n\t\t\t\t\t\t\t\tauth= {this.props.auth}\r\n\t\t\t\t\t\t\t\tdeleteBlogDemand = {this.props.deleteBlogDemand}\r\n\t\t\t\t\t\t\t/>\t\r\n\r\n\t\t\t}\r\n\t\t})\r\n\t\t\r\n\t}\r\n\r\n\trenderBlogDemands=()=>{\r\n\t\tconst {blogDemands} = this.props;\r\n\t\tif(blogDemands&&blogDemands.length){\r\n\t\t\treturn(\r\n\t\t\t\t<div className=\"profile__section\">\r\n\t\t\t\t\t<h2>Blog Demands</h2>\r\n\t\t\t\t\t{this.renderBlogDemandsArray(blogDemands)||<p>You have no pending blog demand</p>}\r\n\t\t\t\t</div>\r\n\t\t\t)\r\n\t\t}else{\r\n\t\t\treturn(\r\n\t\t\t\t<div className=\"profile__section\">\r\n\t\t\t\t\t<h2>Blog Demands</h2>\r\n\t\t\t\t\t<p>You have no pending blog demand</p>\r\n\t\t\t\t</div>\r\n\t\t\t)\r\n\t\t}\r\n\t}\r\n\trenderNavigation(){\r\n\t\treturn(\r\n\t\t\t<div className=\"user__navigation\">\r\n\t\t\t\t<Row>\r\n\t\t\t\t\t\t<Link to=\"#\" onClick={this.activateBlogs} className=\"user__navigation--link\">\r\n\t\t\t\t\t\tBlogs\r\n\t\t\t\t\t</Link>\r\n\t\t\t\t\t\r\n\t\t\t\t</Row>\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n\t\r\n\trender() {\r\n\t\tif (this.props.user.isLoading) {\r\n\t\t\treturn <Loading type=\"spokes\" color=\"grey\" />;\r\n\t\t} else if (this.props.user.errMess) {\r\n\t\t\treturn (\r\n\t\t\t\t<div className=\"container\">\r\n\t\t\t\t\t<div className=\"row\">\r\n\t\t\t\t\t\t<div className=\"col-12\">\r\n\t\t\t\t\t\t\t<h4>{this.props.user.errMess}</h4>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t);\r\n\t\t}\r\n\t\tconst { user } = this.props.user;\r\n\t\tlet url=baseUrl+\"users/\"+this.state.user+\"/image\";\t\r\n\r\n\t\treturn (\r\n\t\t\t<>\r\n\t\t\t<div>\r\n\t\t\t\t<section className=\"top_section\">\r\n\t\t\t\t\t<Container>\r\n\t\t\t\t\t\t<Row>\r\n\t\t\t\t\t\t\t<Col md={1}></Col>\r\n\r\n\t\t\t\t\t\t\t<Col md={10}>\r\n\t\t\t\t\t\t\t\t<Breadcrumb className=\"mb-5 page__navigation__breadCrump\">\r\n\t\t\t\t\t\t\t\t\t<BreadcrumbItem>\r\n\t\t\t\t\t\t\t\t\t\t<Link to=\"/home\">Home</Link>\r\n\t\t\t\t\t\t\t\t\t</BreadcrumbItem>\r\n\t\t\t\t\t\t\t\t\t<BreadcrumbItem active>Profile</BreadcrumbItem>\r\n\t\t\t\t\t\t\t\t\t\t{/************--ADD CONDITION FOR OTHER USER LEFT--***************************/}\r\n\t\t\t\t\t\t\t\t</Breadcrumb>\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t<div className=\"profile__header\">\r\n\t\t\t\t\t\t\t\t\t<Row>\r\n\t\t\t\t\t\t\t\t\t\t<Col xs={8} className=\"profile__header__column\">\r\n\t\t\t\t\t\t\t\t\t\t\t<Row>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Image\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tsrc={url} onError={this.setAlternateImage}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"user__profile__pic\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\troundedCircle\r\n\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t</Row>\r\n\t\t\t\t\t\t\t\t\t\t\t<Row>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"user__profile__name\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Row><h3>{user.name}</h3></Row>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Row>@{user.user_name}</Row>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t</Row>\r\n\t\t\t\t\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t\t\t\t\t<Col xs={4} className=\"profile__header__column\">\r\n\t\t\t\t\t\t\t\t\t\t{this.state.owner===this.state.user && <Row>\r\n\t\t\t\t\t\t\t\t\t\t\t<div className=\"user__posts__details\">\r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Row>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<span className=\"user__icon\"><FaBlog />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span className=\"icon__title\"> {this.props.blogsCount} blogs</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</Row>\r\n\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t</Row>}\r\n\r\n\t\t\t\t\t\t\t\t\t<Row>{this.state.owner===this.state.user && <div className=\"user__account__buttons\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Row>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<button className=\"user__btn userbtn--2\" onClick={this.updateProfile}>Update Details</button>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</Row>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t</Row>\r\n\t\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t</Row>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t {this.state.isAuth && this.renderNavigation()} \r\n\t\t\t\t\t\t\t\t{this.state.showAbout && this.renderAbout()}\r\n\t\t\t\t\t\t\t\t{this.state.isAuth&&this.renderUpdateModal()}\r\n\t\t\t\t\t\t\t\t{this.state.isAuth&&this.state.showBlogs && this.renderBlogs()}\r\n\t\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t\t<Col md={1}></Col>\r\n\t\t\t\t\t\t</Row>\r\n\t\t\t\t\t</Container>\r\n\t\t\t\t\t<ToastContainer\r\n\t\t\t\t\t/>\r\n\t\t\t\t</section>\r\n\t\t\t</div>\r\n\t\t\t</>\r\n\t\t);\r\n\t}\r\n}\r\nconst mapStateToProps = (state, ownProps) => {\r\n\treturn {\r\n\t\t...ownProps,\r\n\t\tspaces: state.spaces.spaces,\r\n\t\tuser:state.user,\r\n\t\tauth:state.auth,\r\n\t\tquestions:state.userQuestions.questions.questions,\r\n\t\tquestionsCount: state.userQuestions.questions.count,\r\n\t\tanswers: state.userAnswers.answers.answers,\r\n\t\tanswersCount:state.userAnswers.answers.count,\r\n\t\tblogs:state.userBlogs.blogs.blogs,\r\n\t\tblogsCount:state.userBlogs.blogs.count,\r\n\t\tblogDemands: state.userBlogDemands.blogDemands.blogDemands,\r\n\t\tblogDemandCount:state.userBlogDemands.blogDemands.count,\r\n\t\tqreactions: state.qreactions.qreactions,\r\n\t\tupdatedUser: state.updateUser\r\n\t};\r\n};\r\n\r\nexport default connect(mapStateToProps, { fetchUser, deleteQuestion, deleteBlogDemand, deleteBlog, updateUser, userBlogDemands, \r\n\tdeleteAnswer, userQuestions, userAnswers, userBlogs })(profile);\r\n","D:\\project\\final\\Poogle\\src\\components\\login_signup\\login.js",["372","373","374","375","376"],"import React, { Component } from 'react'\r\nimport {Container, Row, Col, Image} from 'react-bootstrap';\r\nimport { Breadcrumb, BreadcrumbItem, Button } from \"reactstrap\";\r\nimport Jumbotron from 'react-bootstrap/Jumbotron';\r\nimport Form from 'react-bootstrap/Form';\r\nimport {Link, Redirect} from 'react-router-dom';\r\nimport {AiOutlineMail} from 'react-icons/ai';\r\nimport {RiLockPasswordFill} from 'react-icons/ri';\r\nimport './login_signup.css';\r\nimport GoogleIcon from '../../Images/google_color.svg';\r\nimport FacebookIcon from '../../Images/facebook_color.svg';\r\nimport {signIn} from '../../redux/ActionCreators';\r\nimport {connect} from 'react-redux';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport LoginCorousel from  \"./loginCorousel\";\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\nclass login extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            passShow: \"password\",\r\n            email:\"\",\r\n            password:\"\",\r\n            errors:{\r\n                email:\"\",\r\n                password:\"\"\r\n            },\r\n            validated:false,\r\n            authFailed: false\r\n        }\r\n        this.handleInputChange = this.handleInputChange.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n\r\n    handleInputChange(event) {\r\n        const target = event.target;\r\n        const name = target.name;\r\n        this.setState({\r\n          [name]: event.target.value\r\n        });\r\n    }\r\n\r\n    formValidation = () =>{\r\n        const{email, password} = this.state;\r\n        let emailError=\"\", passwordError = \"\", error;\r\n        if(!email){\r\n            emailError = \"Email is required\";\r\n            error = true;            \r\n        }\r\n        else if(!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(email))\r\n        {\r\n            emailError = \"Email address is Invalid\";\r\n            error= true;\r\n        }\r\n        if(!password.trim())\r\n        {\r\n            passwordError=\"Password is required\"\r\n            error= true;\r\n        }\r\n        else if(password.length<5)\r\n        {\r\n            passwordError=\"Length of password must be 5 characters or more\"\r\n            error= true;\r\n        }\r\n        \r\n        this.setState(prevState => ({\r\n            errors:{\r\n                email:emailError,\r\n                password: passwordError\r\n            }\r\n        }))\r\n        \r\n        return !error;\r\n    }\r\n\r\n\r\n    notifyS = (message) => toast.success(message);\r\n    notifyF = (message) => toast.error(message);\r\n    notifyI = (message) => toast.info(message);\r\n\r\n\r\n    handleSubmit = async (event) => {\r\n        event.preventDefault();\r\n        const isValid = this.formValidation();\r\n        this.setState({\r\n            validated:isValid\r\n        })\r\n        if(isValid){\r\n            const{email, password} = this.state;\r\n            await this.props.signIn({email, password});\r\n\r\n            if(this.props.auth.err)\r\n            {\r\n                this.notifyI(this.props.auth.err.message);\r\n                this.notifyF(\"Login Unsuccesful!!\");\r\n            }    \r\n            else \r\n            {\r\n                this.notifyS(\"Login Succesful!!\")\r\n                setTimeout(() => {\r\n                    let { from } = this.props.location.state || { from: { pathname: \"/\" } };\r\n                    this.props.history.push(from.pathname);\r\n                }, 5000);\r\n\r\n            }   \r\n        }\r\n        console.log(this.state);\r\n    }\r\n\r\n    changePassShow(){\r\n        if(this.state.passShow==='password'){\r\n            this.setState({passShow: \"text\"});\r\n        }\r\n        else{\r\n            this.setState({passShow: \"password\"});\r\n        }\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div className=\"forms__section\">\r\n                <Container>\r\n                    <Col md={12} className=\"contact__main__content\">\r\n                        <Row>\r\n                            <Breadcrumb className=\"mb-4 page__navigation__breadCrump\">\r\n                                <BreadcrumbItem>\r\n                                    <Link to=\"/home\">Home</Link>\r\n                                </BreadcrumbItem>\r\n                                <BreadcrumbItem active>Login</BreadcrumbItem>\r\n                            </Breadcrumb>            \r\n                        </Row>\r\n                        <div>\r\n                        <Row md={12}>\r\n                        \r\n                        <Col xl={6}>\r\n                        <Jumbotron className=\"form__content__div form__content__div--login\">\r\n                            <Form validated={this.state.validated}>\r\n                                <Form.Group controlId=\"formBasicEmail\">\r\n                                    <Form.Label><span className=\"form__icon\"><AiOutlineMail/></span>Email address</Form.Label>\r\n                                    <input name=\"email\" className=\"form-control\" type=\"email\" value={this.state.name} placeholder=\"Enter email\" onChange={this.handleInputChange} />\r\n                                    <div className=\"invalid__feedback\">{this.state.errors.email}</div>\r\n                                </Form.Group>\r\n\r\n                                <Form.Group controlId=\"formBasicTextbox\">\r\n                                    <Form.Label><span className=\"form__icon\"><RiLockPasswordFill/></span>Password</Form.Label>\r\n                                    <input name=\"password\"  type={this.state.passShow} className=\"form-control\"  value={this.state.name} placeholder=\"Enter password\" onChange={this.handleInputChange} />\r\n                                    <Link style={{fontSize: '0.9rem'}} onClick={() => this.changePassShow()}>\r\n                                        {\r\n                                            this.state.passShow === \"password\"\r\n                                            ?\r\n                                            \"Show password\"\r\n                                            :\r\n                                            \"Hide password\"\r\n                                        }\r\n                                    </Link>\r\n                                    <div className=\"invalid__feedback\">{this.state.errors.password}</div>\r\n                                </Form.Group>\r\n\r\n                                <div className=\"form__btn\">\r\n                                    <button className=\"btn contact__form__button\" type=\"submit\" onClick={this.handleSubmit}>\r\n                                        Submit\r\n                                    </button>\r\n                                </div>\r\n                                <div className=\"form__other__text\">\r\n                                    New user? <Link to=\"/signup\">Sign Up</Link>\r\n                                </div>\r\n\r\n\r\n                            </Form>\r\n                    \r\n                        </Jumbotron>\r\n                        </Col>\r\n                        <Col xl={6}>\r\n                        <LoginCorousel/>\r\n                        </Col>\r\n                        </Row>\r\n                        </div>\r\n                    </Col>\r\n                </Container>\r\n                <ToastContainer\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state)=> {\r\n    return {auth: state.auth};\r\n}\r\n\r\nexport default connect(mapStateToProps,{signIn})(login);\r\n","D:\\project\\final\\Poogle\\src\\components\\login_signup\\signup.js",["377","378","379"],"D:\\project\\final\\Poogle\\src\\components\\login_signup\\logout.js",[],"D:\\project\\final\\Poogle\\src\\components\\ContactUs\\contact.js",[],"D:\\project\\final\\Poogle\\src\\components\\add_forms\\addQuestions.js",["380","381","382","383","384","385","386","387","388","389","390","391"],"import React, { Component } from 'react'\r\nimport {Container, Row, Col,Button,Image} from 'react-bootstrap';\r\nimport { Breadcrumb, BreadcrumbItem, Jumbotron } from \"reactstrap\";\r\nimport {Link} from 'react-router-dom'\r\nimport './add_forms.css'\r\nimport Form from 'react-bootstrap/Form';\r\nimport Select from 'react-select'\r\nimport ReactQuill from 'react-quill';\r\nimport {Quill} from 'react-quill'\r\nimport 'react-quill/dist/quill.snow.css'; \r\nimport ImageCompress from 'quill-image-compress';\r\nimport {spaces,toolbarOptions, formats} from '../variables'; \r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport { zoomOut, slideInDown, slideInUp, bounce, flipInX, zoomIn } from 'react-animations';\r\nimport Radium, {StyleRoot} from 'radium';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport { message } from 'antd';\r\n// Quill.register('modules/imageCompress', ImageCompress);\r\nimport swal from 'sweetalert';\r\nimport img1 from '../../Images/heic0006b.jpg'\r\nimport * as ipfsClient  from 'ipfs-http-client';\r\nQuill.register('modules/imageCompress', ImageCompress);\r\nconst ipfs = ipfsClient.create({ host: 'ipfs.infura.io', port: 5001, protocol: 'https' });\r\n\r\n\r\nconst styles = {\r\n\r\n  zoomIn: {\r\n    animation: 'x 1s',\r\n    animationName: Radium.keyframes(zoomIn, 'zoomIn')\r\n  },\r\n  slideInUp: {\r\n      animation: 'x 1s',\r\n      animationName: Radium.keyframes(slideInUp, 'slideInUp')\r\n    },\r\n    bounce: {\r\n      animation: 'x 1s',\r\n      animationName: Radium.keyframes(bounce, 'bounce')\r\n    },\r\n    flipInX: {\r\n      animation: 'x 1s',\r\n      animationName: Radium.keyframes(flipInX, 'flipInX')\r\n    },\r\n}\r\n\r\n\r\n\r\nclass addQuestions extends Component {\r\n\r\n\r\n\r\n\r\n    constructor(props) {\r\n\r\n        super(props);\r\n        this.state = { \r\n          fileGenerating:false,\r\n          generatedFileHash:'',\r\n          fileHash:'',\r\n          fileUploading:false,\r\n          description: '',\r\n          title:'',\r\n          category:[],\r\n         files:[],\r\n         image:'',\r\n\r\n          errors:{\r\n            description:'',\r\n            category:'',\r\n            title:'',\r\n            image:''\r\n          }\r\n\r\n\r\n       } \r\n\r\n\r\n        this.handleEditorChange = this.handleEditorChange.bind(this)\r\n        this.handleInputChange = this.handleInputChange.bind(this)\r\n        this.handleMultiSelectChange = this.handleMultiSelectChange.bind(this)\r\n        this.handleSubmit= this.handleSubmit.bind(this)\r\n      }\r\n\r\n      onFileChange = (e) => {\r\n\r\n        e.preventDefault()\r\n        const file = e.target.files[0]\r\n        const reader = new window.FileReader()\r\n        reader.readAsArrayBuffer(file)\r\n\r\n        reader.onloadend = () => {\r\n        this.setState({ buffer: Buffer(reader.result) })\r\n        console.log('buffer', this.state.buffer)\r\n        }\r\n\r\n        console.log(\"Submitting file to ipfs...\")\r\n    };\r\n\r\n    async uploadFile(){\r\n        try {\r\n            \r\n            this.setState({\r\n                fileUploading: true\r\n            })\r\n\r\n            const file = await ipfs.add(this.state.buffer)\r\n            this.setState({\r\n                fileHash: file.path,\r\n                fileUploading: false\r\n            })\r\n\r\n            swal({\r\n                title: \"Success!!\",\r\n                text: 'File Posted!!',\r\n                icon: \"success\"\r\n            })\r\n\r\n            console.log(file.path)\r\n\r\n        } catch (error) {\r\n\r\n            this.setState({\r\n                fileUploading: false,\r\n                buffer: null\r\n            })\r\n\r\n            swal({\r\n                title: \"OOPS!!\",\r\n                text: 'Something Went Wrong. Try again!!',\r\n                icon: \"error\"\r\n            })\r\n\r\n        }\r\n    }\r\n\r\n\r\n    async resolvingImage(){\r\n        try {\r\n            \r\n            this.setState({\r\n                fileGenerating: true,\r\n\r\n            })\r\n\r\n            const fileContents = new Buffer(img1, 'base64')\r\n\r\n            const file = await ipfs.add(fileContents)\r\n            this.setState({\r\n                generatedFileHash: file.path,\r\n                fileGenerating: false\r\n            })\r\n\r\n            swal({\r\n                title: \"Success!!\",\r\n                text: 'Image Resolution Done!!',\r\n                icon: \"success\"\r\n            })\r\n\r\n            console.log(file.path)\r\n\r\n        } catch (error) {\r\n\r\n            this.setState({\r\n                fileGenerating: false,\r\n                buffer: null\r\n            })\r\n\r\n            swal({\r\n                title: \"OOPS!!\",\r\n                text: 'Something Went Wrong. Try again!!',\r\n                icon: \"error\"\r\n            })\r\n\r\n        }\r\n    }\r\n\r\n\r\n      modules = {\r\n        toolbar:toolbarOptions, \r\n        imageCompress: {\r\n          quality: 0.7,\r\n          maxWidth: 500,\r\n          maxHeight: 500, \r\n          imageType: 'image/jpeg', \r\n          debug: true\r\n        }\r\n      }\r\n      \r\n      handleInputChange(event) {\r\n        const target = event.target;\r\n        const name = target.name;\r\n        this.setState({\r\n          [name]: event.target.value\r\n        });\r\n      }\r\n      handleMultiSelectChange = category => {\r\n      this.setState({ category:category })\r\n      }\r\n      \r\n      handleEditorChange(value) {\r\n        this.setState({ description: value })\r\n      }\r\n\r\n      notify = (message) => toast.warning(message);\r\n      notifyS = (message) => toast.success(message);\r\n      notifyF = (message) => toast.error(message);\r\n\r\n      handleSubmit = async (event) => {\r\n        event.preventDefault();\r\n        const isValid = this.formValidation();\r\n        console.log(this.state);\r\n        \r\n        if(isValid){\r\n            \r\n            var tagNames = [];\r\n            var tagIds = [];\r\n            var len = this.state.category.length;\r\n            var flag = false;\r\n             for(var i=0;i<len;i++)\r\n            {\r\n              tagNames.push(this.state.category[i].label);\r\n              tagIds.push(this.state.category[i].value);\r\n          \r\n              var interests_ = localStorage.getItem('interests');\r\n              if(interests_.indexOf(this.state.category[i].value)>-1)\r\n                flag = true;\r\n            }\r\n\r\n            if(flag) {\r\n              const newQuestion = {\r\n                heading: this.state.title,\r\n                tagNames: tagNames,\r\n                tagIds: tagIds,\r\n                description: this.state.description,\r\n                author: this.props.auth.userId\r\n              };\r\n  \r\n              await this.props.postQuestion(newQuestion);\r\n              \r\n              if(this.props.questions.postFail)\r\n                this.notifyF(\"Some Error occured while posting try again.\");\r\n              else\r\n                this.notifyS('Question posted successfully!!')\r\n\r\n            }\r\n            else {\r\n              this.notify(\"Atleast one category should be in your followed spaces list . you can follow required space to add this question!!\");\r\n            }\r\n            \r\n        }\r\n      }\r\n      \r\n\r\n\r\n    formValidation = () =>{\r\n        const{image} = this.state;\r\n        let imageError, error;\r\n       \r\n        if(image){\r\n            if(image.type!=\"image/jpeg\"&&image.type!=\"image/png\"){\r\n                imageError=\"You must upoad a valid jpeg/png image file\";\r\n                error = true;\r\n            }else if(image.size>=1000000){\r\n                imageError=\"Maximum permissible size of an image is 1Mb\";\r\n                error = true;\r\n            }\r\n        }\r\n        this.setState(prevState => ({\r\n            errors:{\r\n               \r\n                image:imageError\r\n            }\r\n        }))\r\n        \r\n        return !error;\r\n    }\r\n\r\nhandleImageUpload = (e)=>{\r\n        e.preventDefault();\r\n\r\n        console.log(e.target.files[0])\r\n        this.setState({\r\n            image:e.target.files[0],\r\n            errors:{\r\n                image:\"\"\r\n            }\r\n        })\r\n    }\r\n\r\n\r\n fetchPrediction =async() =>{\r\n\r\n  // try {\r\n  //   let response = await fetch(\r\n  //     \"http://127.0.0.1:8000/\" + `predict?file_hash=${this.state.fileHash}`, \r\n  //     {\r\n  //       method: \"GET\",\r\n  //       headers: { \"Content-Type\": \"application/json\" },\r\n  //     }\r\n  //   );\r\n\r\n  //   if (response.ok) {\r\n  //     response = await response.json();\r\n  //     console.log(response);\r\n  //     // dispatch({ type: GET_GENERATED_ASSET, payload: response });\r\n  //   } else {\r\n  //     response = await response.text();\r\n  //     console.log(\"Error\", response);\r\n  //     throw new Error(response);\r\n  //   }\r\n  // } catch (err) {\r\n  //   console.log(\"err\", err.message);\r\n  //   // dispatch({ type: GENERATED_ASSET_FAILED, payload: err.message });\r\n  // }\r\n  setTimeout(async()=>{ \r\n\r\n    await this.resolvingImage();\r\n\r\n   }, 5000);\r\n\r\n\r\n}\r\n\r\n\r\nfetchGeneratedImage = async () =>{\r\n\r\n\r\n    try {\r\n      await fetch(\r\n        \"http://127.0.0.1:8000/predict\" + `?file_hash=${this.state.fileHash}`,\r\n        {\r\n          method: \"GET\",\r\n          headers: {\r\n            \"Content-Type\": \"image/jpg\",\r\n          },\r\n        }\r\n      )\r\n        .then((response) => response.blob())\r\n        .then((blob) => {\r\n          console.log(\"here\");\r\n          // Create blob link to download\r\n          const url = window.URL.createObjectURL(new Blob([blob]));\r\n          const link = document.createElement(\"a\");\r\n          link.href = url;\r\n          link.setAttribute(\"download\", `predictedFile.jpg`);\r\n\r\n          // Append to html link element page\r\n          document.body.appendChild(link);\r\n\r\n          // Start download\r\n          link.click();\r\n\r\n          // Clean up and remove the link\r\n          link.parentNode.removeChild(link);\r\n        });\r\n\r\n    } \r\n    catch (err) {\r\n      console.log(\"err\", err);\r\n    }\r\n\r\n\r\n} \r\n\r\n\r\n      \r\n      render() {\r\n        return (\r\n            \r\n            <div className=\"forms__section\">\r\n                <Container>\r\n                <Col md={9} className=\"contact__main__content\">\r\n                        <Row>\r\n                            <Breadcrumb className=\"mb-4 page__navigation__breadCrump\">\r\n                                <BreadcrumbItem>\r\n                                    <Link to=\"/home\">Home</Link>\r\n                                </BreadcrumbItem>\r\n                                <BreadcrumbItem active>Image Resolution</BreadcrumbItem>\r\n                            </Breadcrumb>\r\n                        </Row>\r\n                        <div>\r\n                          <Jumbotron className='form-jumbotron'>\r\n                            <Form>\r\n                             \r\n                             \r\n                              <Form.Group>\r\n                                <Form.Label><span className=\"form__icon\"></span>Describe Here</Form.Label><br/>\r\n                                    { /* <input type=\"file\" name=\"image\"  onChange={this.handleImageUpload} />*/}\r\n                                      <input \r\n                                        type=\"file\"\r\n                                        onChange={(e)=>this.onFileChange(e)}\r\n                                        className='new-item-card-button'\r\n                                    />\r\n                                  <div className=\"invalid__feedback\">{this.state.errors.image}</div>\r\n                              </Form.Group>\r\n                              {this.state.image?<>\r\n                                <Image src='' fluid/> </>:<></>}\r\n                              <Button onClick={()=>this.uploadFile()} variant=\"info\"><span className='fa fa-paper-plane mr-3' />Submit</Button>\r\n                              <Button style={{marginLeft:10}} onClick={()=>this.fetchGeneratedImage()} variant=\"info\"><span className='fa fa-cog mr-3' />Predict</Button>\r\n                              <br/>\r\n\r\n                              <Form.Label><p className=\"form__icon\" style={{marginTop:10}}></p>Input Image</Form.Label><br/>\r\n                                \r\n                              \r\n                              \r\n                                \r\n                           { this.state.fileHash? <Image src={\"https://ipfs.io/ipfs/\"+this.state.fileHash} style={{width:\"100%\",marginTop:15}}/ >:<div></div>}\r\n                           \r\n                         {  this.state.generatedFileHash? <Image src={img1} style={{width:\"100%\",marginTop:15}}/ >: <div></div>}\r\n                            \r\n                           \r\n                              \r\n                            </Form>\r\n                          </Jumbotron>\r\n                        </div>\r\n                </Col>\r\n                \r\n                </Container>\r\n                <ToastContainer\r\n                  autoClose={false}\r\n                />\r\n          </div>\r\n         \r\n        )\r\n      }\r\n}\r\n\r\n\r\nexport default addQuestions;","D:\\project\\final\\Poogle\\src\\components\\add_forms\\addBlogs.js",["392","393","394","395","396","397"],"import React, { Component } from 'react'\r\nimport {Container, Row, Col,Button} from 'react-bootstrap';\r\nimport { Breadcrumb, BreadcrumbItem, Jumbotron } from \"reactstrap\";\r\nimport {Link} from 'react-router-dom'\r\nimport './add_forms.css'\r\nimport Form from 'react-bootstrap/Form';\r\nimport Select from 'react-select'\r\nimport ReactQuill from 'react-quill';\r\nimport {Quill} from 'react-quill';\r\nimport 'react-quill/dist/quill.snow.css'; \r\nimport ImageCompress from 'quill-image-compress';\r\nimport {spaces, toolbarOptions, formats} from '../variables'\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport { zoomOut, slideInDown, slideInUp, bounce, flipInX, zoomIn } from 'react-animations';\r\nimport Radium, {StyleRoot} from 'radium';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nQuill.register('modules/imageCompress', ImageCompress);\r\n\r\nconst styles = {\r\n  zoomIn: {\r\n    animation: 'x 1s',\r\n    animationName: Radium.keyframes(zoomIn, 'zoomIn')\r\n  },\r\n  slideInUp: {\r\n      animation: 'x 1s',\r\n      animationName: Radium.keyframes(slideInUp, 'slideInUp')\r\n    },\r\n    bounce: {\r\n      animation: 'x 1s',\r\n      animationName: Radium.keyframes(bounce, 'bounce')\r\n    },\r\n    flipInX: {\r\n      animation: 'x 1s',\r\n      animationName: Radium.keyframes(flipInX, 'flipInX')\r\n    },\r\n}\r\n\r\nclass addBlogs extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { \r\n          description: '',\r\n          title:'',\r\n         \r\n          files:[],\r\n          duration:null,\r\n          errors:{\r\n            description:'',\r\n        \r\n            title:'',\r\n            duration:null\r\n          }\r\n\r\n\r\n       } \r\n        this.handleEditorChange = this.handleEditorChange.bind(this)\r\n        this.handleInputChange = this.handleInputChange.bind(this)\r\n        this.handleSubmit= this.handleSubmit.bind(this)\r\n    \r\n      }\r\n      modules = {\r\n        toolbar:toolbarOptions,\r\n        imageCompress: {\r\n          quality: 0.7,\r\n          maxWidth: 500,\r\n          maxHeight: 500, \r\n          imageType: 'image/jpeg', \r\n          debug: true\r\n        }\r\n      }\r\n      \r\n      handleInputChange(event) {\r\n        const target = event.target;\r\n        const name = target.name;\r\n        this.setState({\r\n          [name]: event.target.value\r\n        });\r\n      }\r\n      \r\n      handleEditorChange(value) {\r\n        this.setState({ description: value })\r\n      }\r\n\r\n      notify = (message) => toast.warning(message);\r\n      notifyS = (message) => toast.success(message);\r\n      notifyF = (message) => toast.error(message, );\r\n\r\n      handleSubmit = async (event)=>{\r\n        event.preventDefault();\r\n        // const isValid = this.formValidation();\r\n        console.log(this.state);\r\n        const newBlog = {\r\n                heading: this.state.title,\r\n                description: this.state.description,\r\n                author: this.props.auth.userId,\r\n                duration:this.state.duration\r\n              }\r\n                console.log(newBlog);\r\n                try{\r\n                      await this.props.postBlog(newBlog);\r\n                      console.log(this.props.blogs);\r\n                }\r\n                catch(error){\r\n                  console.log(error);\r\n                }\r\n\r\n\r\n              // if(this.props.blogs.postFail)\r\n              //   this.notifyF(\"Some Error occured while posting try again.\");\r\n              // else\r\n              //   this.notifyS('Blog posted successfully!!')\r\n            \r\n            \r\n              // console.log(\"Invalid input\");\r\n              // // this.notify(\"Atleast one category should be in your followed spaces list . you can follow required space to publish this blog!!\");\r\n            \r\n            \r\n        }\r\n      \r\n      \r\n      \r\n      formValidation = () =>{\r\n        const{title,description, duration} = this.state;\r\n        let titleError=\"\",  descriptionError=\"\", durationError=\"\", error;\r\n        if(!title.trim()){\r\n            titleError = \"Title is required\";\r\n            error = true;            \r\n        }\r\n\r\n        \r\n        if(!description.trim()||description===\"<p><br></p>\"){\r\n          descriptionError = \"Description is required\";\r\n          error = true;            \r\n        }\r\n        \r\n        if(!duration || isNaN(duration) || duration<=0 ){\r\n          durationError = \"Duration should be a positive numeric value\";\r\n          error = true;\r\n        }\r\n        \r\n        this.setState(prevState => ({\r\n            errors:{\r\n                title:titleError,\r\n                description: descriptionError,\r\n                duration: durationError\r\n            }\r\n        }))\r\n        \r\n        return !error;\r\n    }\r\n      \r\n      \r\n      \r\n      render() {\r\n        return (\r\n           \r\n            <div className=\"forms__section\">\r\n                <Container>\r\n                <Col md={12} className=\"contact__main__content\">\r\n                        <Row>\r\n                            <Breadcrumb className=\"mb-4 page__navigation__breadCrump\">\r\n                                <BreadcrumbItem>\r\n                                    <Link to=\"/home\">Home</Link>\r\n                                </BreadcrumbItem>\r\n                                <BreadcrumbItem active>Add Blog</BreadcrumbItem>\r\n                            </Breadcrumb>\r\n                        </Row>\r\n                        <div>\r\n                            <Jumbotron className='form-jumbotron'>\r\n                                <Form>\r\n                                    <Form.Group controlId=\"formBasicEmail\">\r\n                                    <Form.Label><span className=\"form__icon\"></span>Title</Form.Label>\r\n                                        <input name=\"title\" className=\"form-control\" type=\"text\" value={this.state.title} placeholder=\"Give a descriptive title.\" onChange={this.handleInputChange} />\r\n                                        <div className=\"invalid__feedback\">{this.state.errors.title}</div>\r\n                                    </Form.Group>\r\n\r\n                                   \r\n                                    <Form.Group>\r\n                                    <Form.Label><span className=\"form__icon\"></span>Describe content Here</Form.Label>\r\n                                    <ReactQuill \r\n                                        style={{backgroundColor: 'white'}} theme=\"snow\"  value={this.state.description} onChange={this.handleEditorChange} \r\n                                        modules={this.modules} formats= {formats}/>\r\n                                        <div className=\"invalid__feedback\">{this.state.errors.description}</div>\r\n                                    </Form.Group>\r\n                                    <Form.Group controlId=\"formBasicEmail\">\r\n                                    <Form.Label><span className=\"form__icon\"></span>Read Duration (in minutes)</Form.Label>\r\n                                        <input name=\"duration\" className=\"form-control\" type=\"text\" value={this.state.duration} placeholder=\"Expected read duration of Blog in minutes.\" onChange={this.handleInputChange} />\r\n                                        <div className=\"invalid__feedback\">{this.state.errors.duration}</div>\r\n                                    </Form.Group>\r\n                                    <Button className='mt-4' onClick={this.handleSubmit} variant=\"info\"><span className='fa fa-paper-plane mr-3' />Publish Blog</Button>\r\n                            </Form>\r\n                          </Jumbotron>\r\n                        </div>\r\n                \r\n                </Col>\r\n                </Container>\r\n                <ToastContainer \r\n                  autoClose={false}\r\n                  />\r\n          </div>\r\n         \r\n        )\r\n      }\r\n}\r\n\r\nexport default addBlogs;","D:\\project\\final\\Poogle\\src\\components\\aboutUs\\aboutUs.js",["398","399","400","401"],"import React from \"react\";\r\nimport {\r\n  Breadcrumb,\r\n  BreadcrumbItem,\r\n  Card,\r\n  CardBody,\r\n  CardTitle,\r\n  CardSubtitle,\r\n  CardImg,\r\n} from \"reactstrap\";\r\nimport { Button } from \"react-bootstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { zoomOut, slideInDown, slideInUp, bounce, flipInX, zoomIn } from 'react-animations';\r\nimport Radium, {StyleRoot} from 'radium';\r\nimport \"./aboutUs.css\";\r\nimport Jaskaran from '../../Images/Jaskaran.png'\r\nimport Ishan from \"../../Images/Ishan.jpeg\";\r\nimport Tejen from \"../../Images/Tejen.jpeg\";\r\nimport Kunal from \"../../Images/Kunal.jpeg\";\r\n\r\nconst styles = {\r\n  zoomIn: {\r\n    animation: 'x 1s',\r\n    animationName: Radium.keyframes(zoomIn, 'zoomIn')\r\n  },\r\n  slideInUp: {\r\n      animation: 'x 1s',\r\n      animationName: Radium.keyframes(slideInUp, 'slideInUp')\r\n    },\r\n    bounce: {\r\n      animation: 'x 1s',\r\n      animationName: Radium.keyframes(bounce, 'bounce')\r\n    },\r\n    flipInX: {\r\n      animation: 'x 1s',\r\n      animationName: Radium.keyframes(flipInX, 'flipInX')\r\n    },\r\n}\r\n\r\nfunction AboutUs() {\r\n  return (\r\n    <div className=\"container about\">\r\n      <div className=\"row\">\r\n        <Breadcrumb className=\"mt-3 ml-3\">\r\n          <BreadcrumbItem>\r\n            <Link to=\"/home\">Home</Link>\r\n          </BreadcrumbItem>\r\n          <BreadcrumbItem active>About Us</BreadcrumbItem>\r\n        </Breadcrumb>\r\n      </div>\r\n\r\n      <div className=\"row justify-content-center\">\r\n        <h2 className=\"dev-heading\">\r\n          <span className=\"fa fa-lg fa-code mr-4\" />\r\n          Developers\r\n        </h2>\r\n      </div>\r\n      <div className=\"row justify-content-center dev-content\">\r\n        <div className=\"col-12 col-lg-4 col-md-6 col-sm-6 mt-1 mb-4\">\r\n          <Card className=\"space dev-card\">\r\n            <CardBody>\r\n              <CardTitle tag=\"h5\" className=\"dev-name\">\r\n                Jaskaran Singh\r\n              </CardTitle>\r\n            </CardBody>\r\n            <CardImg className=\"space-img\" src={Jaskaran} />\r\n            <CardBody>\r\n              <CardSubtitle tag=\"h6\" className=\"mb-4 text-muted mt-2\">\r\n                Roles\r\n              </CardSubtitle>\r\n              <CardSubtitle tag=\"h6\" className=\"mb-4 text-muted\">\r\n                <span className=\"fa fa-star fa-lg question-icon mr-2\" />{\" \"}\r\n                Frontend Development\r\n              </CardSubtitle>\r\n              <CardSubtitle tag=\"h6\" className=\"mb-2 text-muted\">\r\n                <span className=\"fa fa-database fa-lg follower-icon mr-2\" />{\" \"}\r\n                Backend Development\r\n              </CardSubtitle>\r\n              <div className=\"row justify-content-between mt-5 mb-3\">\r\n                <Button\r\n                  target=\"new\"\r\n                  href=\"https://www.linkedin.com/in/jaskaran-singh-351426192/\"\r\n                  className=\"col-2 fa fa-linkedin linked ml-2\"\r\n                />\r\n                <Button\r\n                  target=\"new\"\r\n                  href=\"https://github.com/jaskaran-23\"\r\n                  variant=\"secondary\"\r\n                  className=\"col-2 fa fa-github git\"\r\n                />\r\n                \r\n                <Button\r\n                  target=\"new\"\r\n                  href=\"mailto:jaskaran.2397@gmail.com\"\r\n                  variant=\"success\"\r\n                  className=\"col-2 fa fa-envelope mail mr-2\"\r\n                />\r\n              </div>\r\n            </CardBody>\r\n          </Card>\r\n        </div>\r\n        <div className=\"col-12 col-lg-4 col-md-6 col-sm-6 mt-1 mb-4\">\r\n          <Card className=\"space dev-card\">\r\n            <CardBody>\r\n              <CardTitle tag=\"h5\" className=\"dev-name\">\r\n                Kunal Mahajan\r\n              </CardTitle>\r\n            </CardBody>\r\n            <CardImg className=\"space-img\" src={Kunal} />\r\n            <CardBody>\r\n              <CardSubtitle tag=\"h6\" className=\"mb-4 text-muted mt-2\">\r\n                Roles\r\n              </CardSubtitle>\r\n              <CardSubtitle tag=\"h6\" className=\"mb-4 text-muted\">\r\n                <span className=\"fa fa-star fa-lg question-icon mr-2\" />{\" \"}\r\n                Frontend Development\r\n              </CardSubtitle>\r\n             \r\n              <div className=\"row justify-content-between mt-5 mb-3\">\r\n                <Button\r\n                  target=\"new\"\r\n                  href=\"https://www.linkedin.com/in/kunal-mahajan-431b97189/\"\r\n                  className=\"col-2 fa fa-linkedin linked ml-2\"\r\n                />\r\n                <Button\r\n                  target=\"new\"\r\n                  href=\"https://github.com/kunalmahajan12\"\r\n                  variant=\"secondary\"\r\n                  className=\"col-2 fa fa-github git\"\r\n                />\r\n                <Button\r\n                  target=\"new\"\r\n                  href=\"mailto:jaskaran.2397@gmail.com\"\r\n                  variant=\"success\"\r\n                  className=\"col-2 fa fa-envelope mail mr-2\"\r\n                />\r\n              </div>\r\n            </CardBody>\r\n          </Card>\r\n        </div>\r\n        <div className=\"col-12 col-lg-4 col-md-6 col-sm-6 mt-1 mb-4\">\r\n          <Card className=\"space dev-card\">\r\n            <CardBody>\r\n              <CardTitle tag=\"h5\" className=\"dev-name\">\r\n                Ishaan Verma\r\n              </CardTitle>\r\n            </CardBody>\r\n            <CardImg className=\"space-img\" src={Ishan} />\r\n            <CardBody>\r\n              <CardSubtitle tag=\"h6\" className=\"mb-4 text-muted mt-2\">\r\n                Roles\r\n              </CardSubtitle>\r\n              <CardSubtitle tag=\"h6\" className=\"mb-2 text-muted\">\r\n                <span className=\"fa fa-database fa-lg follower-icon mr-2\" />{\" \"}\r\n                Backend Development\r\n              </CardSubtitle>\r\n\r\n              <div className=\"row justify-content-between mt-5 mb-3\">\r\n                <Button\r\n                  target=\"new\"\r\n                  href=\"https://www.linkedin.com/in/ishaannverma/\"\r\n                  className=\"col-2 fa fa-linkedin linked ml-2\"\r\n                />\r\n                <Button\r\n                  target=\"new\"\r\n                  href=\"https://github.com/ishaannverma\"\r\n                  variant=\"secondary\"\r\n                  className=\"col-2 fa fa-github git\"\r\n                />\r\n                <Button\r\n                  target=\"new\"\r\n                  href=\"mailto:jaskaran.2397@gmail.com\"\r\n                  variant=\"success\"\r\n                  className=\"col-2 fa fa-envelope mail mr-2\"\r\n                />\r\n              </div>\r\n            </CardBody>\r\n          </Card>\r\n        </div>\r\n        <div className=\"col-12 col-lg-4 col-md-6 col-sm-6 mt-1 mb-4\">\r\n          <Card className=\"space dev-card\">\r\n            <CardBody>\r\n              <CardTitle tag=\"h5\" className=\"dev-name\">\r\n                Tejen Prasadan\r\n              </CardTitle>\r\n            </CardBody>\r\n            <CardImg className=\"space-img\" src={Tejen} />\r\n            <CardBody>\r\n              <CardSubtitle tag=\"h6\" className=\"mb-4 text-muted mt-2\">\r\n                Roles\r\n              </CardSubtitle>\r\n              <CardSubtitle tag=\"h6\" className=\"mb-4 text-muted\">\r\n                <span className=\"fa fa-star fa-lg question-icon mr-2\" />{\" \"}\r\n                Frontend Development\r\n              </CardSubtitle>\r\n            \r\n              <div className=\"row justify-content-between mt-5 mb-3\">\r\n                <Button\r\n                  target=\"new\"\r\n                  href=\"https://www.linkedin.com/mwlite/in/tejen-pradhan-6495081bb\"\r\n                  className=\"col-2 fa fa-linkedin linked ml-2\"\r\n                />\r\n                <Button\r\n                  target=\"new\"\r\n                  href=\"https://github.com/tejenpradhan\"\r\n                  variant=\"secondary\"\r\n                  className=\"col-2 fa fa-github git\"\r\n                />\r\n                <Button\r\n                  target=\"new\"\r\n                  href=\"mailto:jaskaran.2397@gmail.com\"\r\n                  variant=\"success\"\r\n                  className=\"col-2 fa fa-envelope mail mr-2\"\r\n                />\r\n              </div>\r\n            </CardBody>\r\n          </Card>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AboutUs;\r\n","D:\\project\\final\\Poogle\\src\\components\\single-blog\\SingleBlog.js",["402","403","404","405","406","407","408","409","410","411","412","413","414","415","416","417","418","419","420"],"import React, { Component, useState } from \"react\";\r\nimport { Link  } from \"react-router-dom\";\r\nimport {\r\n  FacebookIcon,\r\n  FacebookShareButton,\r\n  LinkedinIcon,\r\n  LinkedinShareButton,\r\n  PinterestIcon,\r\n  PinterestShareButton,\r\n  RedditIcon,\r\n  RedditShareButton,\r\n  TelegramIcon,\r\n  TelegramShareButton,\r\n  TwitterIcon,\r\n  TwitterShareButton,\r\n  WhatsappIcon,\r\n  WhatsappShareButton,\r\n} from \"react-share\";\r\nimport {\r\n  Row,\r\n  Col,\r\n  Container,\r\n  Card,\r\n  CardBody,\r\n  CardTitle,\r\n  CardSubtitle,\r\n  CardText,\r\n  Collapse,\r\n  ButtonGroup,\r\n  Button,\r\n  CardImg,\r\n  Badge,\r\n  Modal,\r\n  ModalHeader,\r\n  ModalBody,\r\n  ModalFooter,\r\n  Media,\r\n  Label,\r\n  Jumbotron,\r\n  CardHeader,\r\n} from \"reactstrap\";\r\nimport { baseUrl, frontendBaseUrl } from \"../../shared/baseUrl\";\r\nimport Loading from \"../loading\";\r\nimport { LocalForm, Control, Errors } from \"react-redux-form\";\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport { zoomOut, slideInDown, slideInUp, bounce, flipInX, zoomIn } from 'react-animations';\r\nimport Radium, {StyleRoot} from 'radium';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport profilePic from \"../../Images/profile_pic.png\";\r\nimport \"../single-blog/SingleBlog.css\";\r\n\r\nconst styles = {\r\n  zoomIn: {\r\n    animation: 'x 1s',\r\n    animationName: Radium.keyframes(zoomIn, 'zoomIn')\r\n  },\r\n  slideInUp: {\r\n      animation: 'x 1s',\r\n      animationName: Radium.keyframes(slideInUp, 'slideInUp')\r\n    },\r\n    bounce: {\r\n      animation: 'x 1s',\r\n      animationName: Radium.keyframes(bounce, 'bounce')\r\n    },\r\n    flipInX: {\r\n      animation: 'x 1s',\r\n      animationName: Radium.keyframes(flipInX, 'flipInX')\r\n    },\r\n}\r\n\r\nconst required = (val) => val && val.length;\r\nconst maxLength = (len) => (val) => !val || val.length <= len;\r\n\r\nconst RenderTags = ({ question }) =>\r\n  question.tagNames.map((tag) => {\r\n    return (\r\n      <Badge pill className=\"mr-2\" color=\"primary\">\r\n        {tag}\r\n      </Badge>\r\n    );\r\n  });\r\n\r\n\r\nclass SingleBlog extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      shareModalOpen: false,\r\n\r\n    };\r\n  }\r\n\r\n \r\n  onShareClicked() {\r\n    this.setState({\r\n      shareModalOpen: !this.state.shareModalOpen,\r\n    });\r\n  }\r\n\r\n  \r\n  render() {\r\n\r\n\r\n    // let url = baseUrl + \"users/\" + this.props.blog.author._id + \"/image\";\r\n    const setAlternateImage = (e) => {\r\n      console.log(e.target);\r\n      e.target.src = profilePic;\r\n      console.log(\"Done task\");\r\n    };\r\n\r\n    if (this.props.isLoading ) {\r\n      return <Loading type=\"spokes\" color=\"grey\" />;\r\n    } else if (this.props.errMess ) {\r\n      <div className=\"container\">\r\n        <div className=\"row\">\r\n          <div className=\"col-12\">\r\n            <h4>{this.props.errMess}</h4>\r\n          </div>\r\n        </div>\r\n      </div>;\r\n    }\r\n    return (\r\n      \r\n      <div>\r\n        <Card>\r\n          <CardHeader>\r\n            <CardTitle className=\"single-blog-heading\">\r\n              {this.props.blog.heading}\r\n            </CardTitle>\r\n          </CardHeader>\r\n          <CardBody>\r\n            <Row>\r\n              <Col\r\n                className=\"mb-3 single-question-profile\"\r\n                xs={4}\r\n                md={3}\r\n                lg={2}\r\n              >\r\n              { /* <CardImg\r\n                  onError={setAlternateImage}\r\n                  className=\"single-question-profile-pic\"\r\n                  src={url}\r\n                />\r\n                */\r\n              }\r\n                <CardSubtitle className=\"single-question-profile-name\">\r\n                  <Link to={`/profile/${this.props.blog.author._id}`}>\r\n                    @{this.props.blog.author.user_name}\r\n                  </Link>\r\n                </CardSubtitle>\r\n                <CardText className=\"single-question-profile-name text-muted\">\r\n                  {\" \"}\r\n                  {new Intl.DateTimeFormat(\"en-US\", {\r\n                    year: \"numeric\",\r\n                    month: \"short\",\r\n                    day: \"2-digit\",\r\n                  }).format(new Date(Date.parse(this.props.blog.createdAt)))}\r\n                </CardText>\r\n                <CardText className=\"single-question-profile-name text-muted\">\r\n                  {\" \"}\r\n                  {this.props.blog.duration} min read{\" \"}\r\n                </CardText>\r\n              </Col>\r\n              <Col xs={12} md={9} lg={10}>\r\n                <Row>\r\n                  <Col className=\"mb-5\">\r\n                    <RenderTags question={this.props.blog} />\r\n                  </Col>\r\n                  <Col xs={12}>\r\n                    <div\r\n                      className=\"editor__content\"\r\n                      dangerouslySetInnerHTML={{\r\n                        __html: this.props.blog.description,\r\n                      }}\r\n                    />\r\n                  </Col>\r\n                </Row>\r\n              </Col>\r\n            </Row>\r\n            <hr></hr>\r\n            <Row>\r\n              <ButtonGroup className=\"ml-4\">\r\n            \r\n                <Button color=\"success\" onClick={() => this.onShareClicked()}>\r\n                  <span className=\"fa fa-lg fa-share\"></span>\r\n                </Button>\r\n              </ButtonGroup>\r\n            </Row>\r\n          </CardBody>\r\n        </Card>\r\n   \r\n        <ToastContainer/>\r\n        <Modal\r\n          isOpen={this.state.shareModalOpen}\r\n          toggle={() => this.onShareClicked()}\r\n        >\r\n          <ModalHeader toggle={() => this.onShareClicked()}>\r\n            Let's Share this !!\r\n          </ModalHeader>\r\n          <ModalBody>\r\n            <FacebookShareButton\r\n              url={\r\n                frontendBaseUrl+\"blog-\" +\r\n                this.props.blog._id +\r\n                \"-\" +\r\n                this.props.blog.heading\r\n              }\r\n              title={\"Can you answer this ??\"}\r\n              quote={\"Can you answer this ??\"}\r\n              hashtag={\"#Poogle\"}\r\n            >\r\n              <FacebookIcon round={true}></FacebookIcon>\r\n            </FacebookShareButton>\r\n            <WhatsappShareButton\r\n              url={\r\n                frontendBaseUrl+\"blog-\" +\r\n                this.props.blog._id +\r\n                \"-\" +\r\n                this.props.blog.heading\r\n              }\r\n              title={\"Can you answer this ??\"}\r\n              separator={\"\\n\"}\r\n            >\r\n              <WhatsappIcon round={true}></WhatsappIcon>\r\n            </WhatsappShareButton>\r\n            <TelegramShareButton\r\n              url={\r\n                frontendBaseUrl+\"blog-\" +\r\n                this.props.blog._id +\r\n                \"-\" +\r\n                this.props.blog.heading\r\n              }\r\n              title={\"Can you answer this ??\"}\r\n            >\r\n              <TelegramIcon round></TelegramIcon>\r\n            </TelegramShareButton>\r\n            <LinkedinShareButton\r\n              url={\r\n                frontendBaseUrl+\"blog-\" +\r\n                this.props.blog._id +\r\n                \"-\" +\r\n                this.props.blog.heading\r\n              }\r\n              title={\"Can you answer this ??\"}\r\n              source={\"WWW.poogle.com\"}\r\n            >\r\n              <LinkedinIcon round></LinkedinIcon>\r\n            </LinkedinShareButton>\r\n            <TwitterShareButton\r\n              url={\r\n                frontendBaseUrl+\"blog-\" +\r\n                this.props.blog._id +\r\n                \"-\" +\r\n                this.props.blog.heading\r\n              }\r\n              title={\"Can you answer this ??\"}\r\n              hashtags={\"#Poogle\"}\r\n            >\r\n              <TwitterIcon round></TwitterIcon>\r\n            </TwitterShareButton>\r\n            <RedditShareButton\r\n              url={\r\n                frontendBaseUrl+\"blog-\" +\r\n                this.props.blog._id +\r\n                \"-\" +\r\n                this.props.blog.heading\r\n              }\r\n              title={\"Can you answer this ??\"}\r\n            >\r\n              <RedditIcon round></RedditIcon>\r\n            </RedditShareButton>\r\n            <PinterestShareButton\r\n              url={\r\n                frontendBaseUrl+\"blog-\" +\r\n                this.props.blog._id +\r\n                \"-\" +\r\n                this.props.blog.heading\r\n              }\r\n              description={\"Can you answer this ??\"}\r\n              title={\"Can you answer this ??\"}\r\n            >\r\n              <PinterestIcon round></PinterestIcon>\r\n            </PinterestShareButton>\r\n          </ModalBody>\r\n          <ModalFooter>\r\n            <Button color=\"secondary\" onClick={() => this.onShareClicked()}>\r\n              Cancel\r\n            </Button>\r\n          </ModalFooter>\r\n        </Modal>\r\n      </div>\r\n    \r\n    );\r\n  }\r\n}\r\n\r\nexport default SingleBlog;","D:\\project\\final\\Poogle\\src\\components\\all_blogDemands_page\\all_blogDemands.js",["421","422","423","424","425","426","427","428","429","430","431"],"import React, { Component } from 'react'\r\nimport { ListGroup, \r\n        ListGroupItemHeading, \r\n        ListGroupItemText, \r\n        ListGroupItem, \r\n        Breadcrumb, BreadcrumbItem,\r\n        Badge,\r\n        Nav,\r\n        NavItem,\r\n        NavLink,FormGroup,Label,Input,Button,\r\n        Pagination, PaginationItem, PaginationLink, ButtonToolbar, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\r\nimport Form from 'react-bootstrap/Form';   \r\nimport { Fade, Stagger} from 'react-animation-components';\r\nimport { Link, withRouter } from 'react-router-dom';\r\nimport Loading from '../loading';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\n\r\nimport Select from 'react-select';\r\nimport {spaces} from '../variables';\r\nimport './all_blogDemand.css';\r\n\r\n\r\nconst RenderTags = ({blogDemand}) => blogDemand.tagNames.map((tag) => {\r\n    return(\r\n        <Badge pill className='blogdemand-tag'>{tag}</Badge>\r\n    );\r\n})\r\n\r\nfunction RenderMenuItem({blogDemand, class_Name,auth,deleteBlogDemand, onClick}) {\r\n    \r\n    return(\r\n    \r\n        <ListGroup className='container blogDemand-container'>\r\n                <ListGroupItem className={class_Name+' list-item-style'}>\r\n                        <div className='row'>\r\n                        <div className='col-12 col-sm-8'>\r\n                            <ListGroupItemHeading className='blogDemand-heading'>\r\n                             <Link className='blogDemand-heading'>{blogDemand.title}</Link>\r\n                             {\r\n                                auth.userId === blogDemand.author._id\r\n                                ?\r\n                            \r\n                                    <Button color='danger' className=\"delete-blog-demand\" onClick={() => deleteBlogDemand(blogDemand._id)}>\r\n                                    <span className='fa fa-lg fa-trash'></span></Button>\r\n                            \r\n                                :\r\n                                <></>\r\n                            }  \r\n                            <br></br> \r\n                            <RenderTags  blogDemand={blogDemand} /> \r\n                            </ListGroupItemHeading>\r\n                            \r\n                            \r\n                            <ListGroupItemText className='blogDemand-text'>\r\n                                Posted by :-  {blogDemand.author.user_name}\r\n                            </ListGroupItemText>\r\n                            <ListGroupItemText className=\"blogDemand-text\">\r\n                                Posted at :-{\" \"}\r\n                                {new Intl.DateTimeFormat(\"en-US\", {\r\n                                year: \"numeric\",\r\n                                month: \"short\",\r\n                                day: \"2-digit\",\r\n                                }).format(new Date(Date.parse(blogDemand.createdAt)))}\r\n                            </ListGroupItemText>\r\n                        </div>\r\n\r\n                        </div>\r\n                </ListGroupItem>\r\n        </ListGroup>\r\n    \r\n    );\r\n}\r\n\r\nclass BlogDemands extends Component{\r\n       constructor(props){\r\n           super(props);\r\n           this.toggleModal = this.toggleModal.bind(this);\r\n           this.handleInputChange = this.handleInputChange.bind(this)\r\n           this.handleMultiSelectChange = this.handleMultiSelectChange.bind(this)\r\n           this.handleSubmit= this.handleSubmit.bind(this)\r\n           this.state={\r\n               filter:'Latest',\r\n               latestActive:true,\r\n               isModalOpen: false,\r\n               title:'',\r\n               category:[],\r\n               errors:{\r\n                category:'',\r\n                title:'',\r\n           }\r\n       }\r\n    }\r\n\r\n    toggleModal(){\r\n        this.setState({\r\n            isModalOpen: !this.state.isModalOpen\r\n        })\r\n    }\r\n\r\n    handleInputChange(event) {\r\n        const target = event.target;\r\n        const name = target.name;\r\n        this.setState({\r\n          [name]: event.target.value\r\n        });\r\n      }\r\n      handleMultiSelectChange = category => {\r\n      this.setState({ category:category });\r\n      }\r\n\r\n      notify = (message) => toast.warning(message);\r\n      \r\n      handleSubmit(event){\r\n        event.preventDefault();\r\n        const isValid = this.formValidation();\r\n        console.log(this.state);\r\n        \r\n        if(isValid){\r\n          \r\n  \r\n            var tagNames = [];\r\n            var tagIds = [];\r\n            var len = this.state.category.length;\r\n            var flag = false;\r\n             for(var i=0;i<len;i++)\r\n            {\r\n              tagNames.push(this.state.category[i].label);\r\n              tagIds.push(this.state.category[i].value);\r\n\r\n              var interests_ = localStorage.getItem('interests');\r\n\r\n              if(interests_.indexOf(this.state.category[i].value)>-1)\r\n                flag = true;\r\n            }\r\n\r\n            console.log(this.props.auth.interests);\r\n\r\n            if(flag) {\r\n                const newBlogDemand = {\r\n                    title: this.state.title,\r\n                    tagNames: tagNames,\r\n                    tagIds: tagIds,\r\n                    author: this.props.auth.userId,\r\n                  };\r\n        \r\n                  this.props.postBlogDemand(newBlogDemand);\r\n            }\r\n            else {\r\n                this.notify(\"Atleast one category should be in your followed spaces list . you can follow required space to add this demand!!\");\r\n            }\r\n        \r\n        }\r\n      \r\n      }\r\n      \r\n      formValidation = () =>{\r\n        const{title, category} = this.state;\r\n        let titleError=\"\", categoryError = \"\", error;\r\n        if(!title.trim()){\r\n            titleError = \"Title is required\";\r\n            error = true;            \r\n        }\r\n  \r\n        if(!category.length){\r\n          categoryError = \"You must select at least one category\";\r\n          error = true;            \r\n        }\r\n        \r\n        \r\n        this.setState(prevState => ({\r\n            errors:{\r\n                title:titleError,\r\n                //description: descriptionError,\r\n                category:categoryError,\r\n                //duration: durationError\r\n            }\r\n        }))\r\n        \r\n        return !error;\r\n    }\r\n   \r\n       onLatestSelect() {\r\n        this.setState({\r\n            filter: 'Latest',\r\n            latestActive: true,\r\n        })\r\n    }\r\n\r\n    render() {\r\n        var count = -1;\r\n        const MenuDate = this.props.blogDemands.length ? this.props.blogDemands.sort((a,b) => b.dateNum-a.dateNum).map((blogDemand) => {\r\n\r\n            count += 1;\r\n            return(\r\n                <div className=\"col-12\" key={blogDemand._id}>\r\n                   \r\n                        <RenderMenuItem \r\n                            blogDemand={blogDemand} \r\n                            //spaceId={this.props.space._id} \r\n                            class_Name={count%2 == 0 ? 'blogDemandEven' : 'blogDemandOdd'} \r\n                            auth={this.props.auth}\r\n                            deleteBlogDemand={this.props.deleteBlogDemand}\r\n                            onClick={this.props.onClick}\r\n\r\n                 />\r\n                \r\n                </div>\r\n            );\r\n        })\r\n        :\r\n        <p className='info-text'>No Blog Demands Matched your interests and query</p> \r\n\r\n        if(this.props.isLoading || this.props.blogDemandsIsLoading) {\r\n            return(\r\n                <Loading type=\"spokes\" color=\"grey\"/>       \r\n            );\r\n        }\r\n        else if(this.props.errMess || this.props.blogDemandsErrMess) {\r\n            return(\r\n                <div className=\"container spaces\">\r\n                    <div className=\"row\"> \r\n                        <div className=\"col-12\">\r\n                            <h4>{this.props.errMess}</h4>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n        else{\r\n\r\n            var renderBlogDemands;\r\n\r\n            if(this.state.filter === 'Latest') {\r\n                renderBlogDemands = MenuDate;\r\n            }\r\n\r\n    }\r\n\r\n    return(\r\n        <div className='container blogDemands'>\r\n                \r\n            <div className='row'>\r\n                <Breadcrumb className='mt-3 ml-3'>\r\n                    <BreadcrumbItem><Link to=\"/Home\">Home</Link></BreadcrumbItem>\r\n                    <BreadcrumbItem active>Blog Demands</BreadcrumbItem>\r\n                </Breadcrumb>\r\n            </div>\r\n            <div className='row'>\r\n                <div className='container category-div '>\r\n                    <h4 className='row all-blogDemand-heading justify-content-center'>Blog Demands</h4>\r\n                    <div className='row justify-content-center mt-4'>\r\n    \r\n                    <Button className='col-8 col-md-4 col-lg-3 mb-4 m-2 add-blog-btn' color='danger'>\r\n                    <Link style={{color: 'white'}} to='/addBlog'><span className='fa fa-lg fa-plus mr-2 ml-2' />BLOG</Link>\r\n                    </Button>\r\n                            <Button className='col-8 col-md-4 col-lg-3 mb-4 m-2 add-blog-btn' \r\n                               color='info'\r\n                               onClick={this.toggleModal}>\r\n                               <span className='fa fa-lg fa-plus mr-2 ml-2'/> Add Blog Demand\r\n                               </Button>\r\n                            \r\n                            {/* <Button outline className='col-8 col-lg-3 mb-4 follower-btn' color='primary'><span className='fa fa-lg fa-users mr-2 ml-2' />{this.props.space.followers} FOLLOWERS</Button> */}\r\n                    </div>\r\n                    <div className='row ml-1 mt-3 mr-1'>\r\n                        <Nav className='col-12 ' tabs>\r\n                                \r\n                            <NavItem className='mb-4 filters'>\r\n                                <NavLink href='#' active={this.state.latestActive} onClick={() => this.onLatestSelect()}>Latest</NavLink>\r\n                            </NavItem>\r\n                        </Nav>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            \r\n            <div id='all-blogDemands-id' className=\"row justify-content-center\">\r\n                \r\n                    {renderBlogDemands}\r\n                \r\n            </div>\r\n            <Modal isOpen={this.state.isModalOpen} toggle={this.toggleModal}>\r\n            <ModalHeader toggle={this.toggleModal}>ADD BLOG DEMAND</ModalHeader>\r\n            <ModalBody>\r\n            <p className='info-text' style={{color: 'red', fontSize: '0.8rem'}}>*Do delete the Blog Demand once you have received your blog.</p>\r\n            <div className=\"container\">\r\n             <Form.Group controlId=\"formBasicEmail\">\r\n             <Form.Label><span className=\"form__icon\"></span>Title</Form.Label>\r\n             <input name=\"title\" className=\"form-control\" type=\"text\" value={this.state.title} placeholder=\"Give a descriptive title.\" onChange={this.handleInputChange} />\r\n              <div className=\"invalid__feedback\">{this.state.errors.title}</div>\r\n              </Form.Group>\r\n          \r\n             <Form.Group controlId=\"formBasicDropdown\">\r\n             <Form.Label><span className=\"form__icon\"></span>Choose Category</Form.Label>\r\n              <div><Select isMulti name=\"category\" options={spaces} className=\"basic-multi-select\" value={this.state.category} onChange={this.handleMultiSelectChange} classNamePrefix=\"select\"/></div>\r\n                 <div className=\"invalid__feedback\">{this.state.errors.category}</div>\r\n               </Form.Group>\r\n                </div>\r\n          \r\n            </ModalBody>\r\n            <ModalFooter>\r\n            <Button onClick={this.handleSubmit} color=\"info\"><span className=' mr-3' />Submit</Button>\r\n\r\n           </ModalFooter>\r\n        </Modal>\r\n        <ToastContainer \r\n            autoClose={false}\r\n        />\r\n            \r\n        </div>\r\n    );\r\n    \r\n}\r\n\r\n}\r\n\r\n\r\nexport default BlogDemands;","D:\\project\\final\\Poogle\\src\\components\\news\\NewsProvider.js",[],"D:\\project\\final\\Poogle\\src\\components\\loading.js",[],"D:\\project\\final\\Poogle\\src\\redux\\actions\\auth.js",["432","433","434"],"import * as ActionTypes from \"../ActionTypes\";\r\nimport {fetchFollowSpaces, fetchHomeFeed, fetchUser, fetchBlogs,fetchReactions, fetchAnswers\r\n\t, fetchAReactions, fetchComments, fetchBReactions,\r\n\tfetchBComments, fetchBlogDemands,  postFail} from '../ActionCreators'\r\nimport { baseUrl } from \"../../shared/baseUrl\";\r\nimport { RiContrastDropLine } from \"react-icons/ri\";\r\n\r\n\r\n//--------------------------AUTHENTICATION-----------------------------------/\r\n\r\nexport const signIn = (userDetails) => async (dispatch, getState) => {\r\n\ttry {\r\n\t\tlet response = await fetch(baseUrl + \"users/login\", {\r\n\t\t\tmethod: \"POST\",\r\n\t\t\theaders: { \"Content-Type\": \"application/json\" },\r\n\t\t\tbody: JSON.stringify(userDetails),\r\n\t\t});\r\n\r\n\t\tif (response.ok) {\r\n\t\t\tresponse = await response.json();\r\n\r\n\t\t\tvar interests = \"\";\r\n\t\t\tfor(var i=0;i<response.user.interests.length;i++){\r\n\t\t\t\tinterests += response.user.interests[i].interest;\r\n\t\t\t\tinterests += \"*\";\r\n\t\t\t}\r\n\r\n\t\t\tlocalStorage.setItem(\"isSignedIn\", true);\r\n\t\t\tlocalStorage.setItem(\"userId\", response.user._id);\r\n\t\t\tlocalStorage.setItem(\"interests\", interests);\r\n\t\t\tlocalStorage.setItem(\"token\", response.token);\r\n\t\t\tdispatch({ type: ActionTypes.SIGN_IN, payload: response });\r\n\t\t} else {\r\n\t\t\tresponse = await response.text();\r\n\t\t\tthrow new Error(response);\r\n\t\t}\r\n\t} catch (err) {\r\n\t\tdispatch({ type: ActionTypes.AUTH_FAILED, payload: { error: err } });\r\n\t}\r\n};\r\n\r\nexport const signUp = (userDetails) => async (dispatch, getState) => {\r\n\ttry {\r\n\t\tconsole.log(baseUrl)\r\n\t\tconsole.log(userDetails);\r\n\t\tlet response = await fetch(baseUrl + \"users\", {\r\n\t\t\tmethod: \"POST\",\r\n\t\t\theaders: { \"Content-Type\": \"application/json\" },\r\n\t\t\tbody: JSON.stringify(userDetails),\r\n\t\t});\r\n\t\tconsole.log(response);\r\n\r\n\t\tif (response.ok) {\r\n\t\t\tresponse = await response.json();\r\n\t\t\tvar interests = \"\";\r\n\t\t\tfor(var i=0;i<response.user.interests.length;i++){\r\n\t\t\t\tinterests += response.user.interests[i].interest;\r\n\t\t\t\tinterests += \"*\";\r\n\t\t\t}\r\n\r\n\t\t\tlocalStorage.setItem(\"isSignedIn\", true);\r\n\t\t\tlocalStorage.setItem(\"userId\", response.user._id);\r\n\t\t\tlocalStorage.setItem(\"interests\", interests);\r\n\t\t\t//localStorage.setItem(\"interests\", JSON.stringify(response.user.interests));\r\n\t\t\t//localStorage.setItem(\"interests\", response.user.interests);\r\n\t\t\tlocalStorage.setItem(\"token\", response.token);\r\n\t\t\tdispatch({ type: ActionTypes.SIGN_UP, payload: response });\r\n\t\t} else {\r\n\t\t\tresponse = await response.text();\r\n\t\t\tconsole.log(\"Eror\", response);\r\n\t\t\tthrow new Error(response);\r\n\t\t}\r\n\t} catch (err) {\r\n\t\tdispatch({ type: ActionTypes.AUTH_FAILED, payload: { error: err } });\r\n\t}\r\n};\r\n\r\n// Add authorization header in request and modify the logout\r\nexport const logOut = (userToken) => async (dispatch, getState) => {\r\n\ttry {\r\n\t\tlet bearer_token = \"Bearer \" + userToken.token;\r\n\t\tlet response = await fetch(baseUrl + \"users/logout\", {\r\n\t\t\tmethod: \"POST\",\r\n\t\t\theaders: {\r\n\t\t\t\t\"Content-Type\": \"application/json\",\r\n\t\t\t\tAuthorization: bearer_token,\r\n\t\t\t},\r\n\t\t});\r\n\r\n\t\tif (response.ok) {\r\n\t\t\tresponse = await response.text();\r\n\t\t\tlocalStorage.removeItem(\"isSignedIn\");\r\n\t\t\tlocalStorage.removeItem(\"userId\");\r\n\t\t\tlocalStorage.removeItem(\"interests\");\r\n\t\t\tlocalStorage.removeItem(\"token\");\r\n\t\t\tdispatch({ type: ActionTypes.SIGN_OUT, payload: response });\r\n\t\t} else {\r\n\t\t\tresponse = await response.text();\r\n\t\t\tthrow new Error(response);\r\n\t\t}\r\n\t} catch (err) {\r\n\t\tdispatch({ type: ActionTypes.SIGN_OUT, payload: { error: err } });\r\n\t}\r\n};\r\n\r\nexport const ChangeSpaces = (data) => async (dispatch, getState)=>{\r\n\tconst {token, spaceId, interests, userId, type} = data;\r\n    try {\r\n\t\tlet bearer_token = \"Bearer \" + token;\r\n\t\tlet response = await fetch(baseUrl + \"follow/space\", {\r\n\t\t\tmethod: \"PATCH\",\r\n\t\t\theaders: {\r\n\t\t\t\t\"Content-Type\": \"application/json\",\r\n\t\t\t\tAuthorization: bearer_token,\r\n\t\t\t},\r\n\t\t\tbody: JSON.stringify(data),\r\n\t\t});\r\n\r\n\t\tif (response.ok) {\r\n\t\t\tresponse = await response.text();\r\n\r\n\t\t\tvar interestslocal = localStorage.getItem(\"interests\"); \r\n\r\n\t\t\tvar interests_;\r\n\t\t\tvar _interests;\r\n\t\t\tif(type == 'follow'){\r\n\t\t\t\tinterests_ = interestslocal+spaceId+'*';\r\n\t\t\t\tlocalStorage.setItem(\"interests\", interests_);\r\n\t\r\n\t\t\t\t_interests = interests_.split('*');\r\n\t\t\t\t_interests.pop();\r\n\t\t\t}\r\n\t\t\telse{\r\n\t\t\t\tinterests_ = interestslocal.replace(spaceId, '');\r\n\t\t\t\tlocalStorage.setItem(\"interests\", interests_);\r\n\r\n\t\t\t\t_interests = interests_.split('*');\r\n\t\t\t\t_interests.pop();\r\n\t\t\t}\r\n\r\n\t\t\tdispatch(fetchFollowSpaces(_interests));\r\n\t\t\tdispatch(fetchHomeFeed(_interests));\r\n\t\t\tdispatch(fetchBlogs(_interests));\r\n\t\t\tdispatch(fetchAnswers());\r\n\t\t\tdispatch(fetchReactions());\r\n\t\t\tdispatch(fetchBReactions());\r\n\t\t\tdispatch(fetchAReactions());\r\n\t\t\tdispatch(fetchComments());\r\n\t\t\tdispatch(fetchBComments());\r\n\t\t\tdispatch(fetchBlogDemands());\r\n\t\t\tdispatch(fetchUser(userId));\r\n\r\n\t\t\t//dispatch(fetchUser(userId));\r\n\r\n\t\t\t// dispatch({ type: ActionTypes.SPACE_FOLLOW, payload: response });\r\n\t\t} else {\r\n\t\t\tresponse = await response.text();\r\n\t\t\tthrow new Error(response);\r\n\t\t}\r\n\t} catch (err) {\r\n\t\tdispatch(postFail(err.message));\r\n\t\t// dispatch({ type: ActionTypes.SIGN_OUT, payload: { error: err } });\r\n\t}\r\n\r\n}","D:\\project\\final\\Poogle\\src\\redux\\actions\\user.js",[],"D:\\project\\final\\Poogle\\src\\redux\\actions\\questions.js",[],"D:\\project\\final\\Poogle\\src\\redux\\actions\\contact.js",[],"D:\\project\\final\\Poogle\\src\\redux\\actions\\answers.js",[],"D:\\project\\final\\Poogle\\src\\redux\\actions\\blogs.js",[],"D:\\project\\final\\Poogle\\src\\shared\\baseUrl.js",[],"D:\\project\\final\\Poogle\\src\\components\\news\\News.js",["435","436","437","438","439","440","441","442"],"import React, { useContext } from \"react\";\r\nimport NewsArticle from \"./NewsArticle\";\r\nimport {NewsContext} from './NewsContext';\r\nimport './News.css'\r\nimport { BrowserRouter as Router,  Redirect, Switch, Route, Link, useRouteMatch, useParamsLink } from 'react-router-dom'\r\n\r\nfunction News(props) {\r\n  const { data } = useContext(NewsContext);\r\n  console.log(data);\r\n\r\n\r\n  return (\r\n    <div>\r\n      <h1 className=\"head__text\">News Section</h1>\r\n      <div className=\"all__news\">\r\n        {data\r\n          ? data.articles.map((news) => (\r\n        \t  \r\n          \t\t<a href={news.url} target=\"_blank\">\r\n            \t  <NewsArticle data={news} key={news.url} />\r\n            \t</a>\r\n\r\n            ))\r\n          : \"Loading\"}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default News;","D:\\project\\final\\Poogle\\src\\components\\news\\NewsContext.js",["443"],"import React, { createContext, useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport './News.css'\r\nexport const NewsContext = createContext();\r\n\r\nexport const NewsContextProvider = (props) => {\r\n  const [data, setData] = useState();\r\n  const apiKey = \"6b4f14d2408d4cbc8b364302cd03795f\";\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .get(\r\n        `https://newsapi.org/v2/everything?q=space&apiKey=${apiKey}`\r\n      )\r\n      .then((response) => setData(response.data))\r\n      .then(console.log(data))\r\n      .catch((error) => console.log(error));\r\n  }, []);\r\n  \r\n\r\n  return (\r\n    <NewsContext.Provider value={{ data }}>\r\n      {props.children}\r\n    </NewsContext.Provider>\r\n  );\r\n};","D:\\project\\final\\Poogle\\src\\components\\variables.js",[],"D:\\project\\final\\Poogle\\src\\components\\login_signup\\loginCorousel.js",[],"D:\\project\\final\\Poogle\\src\\components\\profile_page\\about.js",["444","445","446","447","448","449","450","451","452","453","454","455","456","457","458","459","460","461","462"],"import React, { Component } from 'react'\r\nimport { Container, Row, Col, Image } from 'react-bootstrap'\r\nimport { ListGroup, List, ListGroupItemHeading,ListGroupItemText, ListGroupItem, Card, CardBody,CardText, CardTitle, CardSubtitle,\r\n\tBadge, Nav, NavItem, NavLink, Button, Jumbotron, Carousel, CarouselItem, CarouselControl, CarouselIndicators, CarouselCaption, CardFooter,Collapse,Alert,\r\n} from \"reactstrap\";\r\nimport {Link} from 'react-router-dom';\r\n\r\n// const RenderTags = ({ tagNames}) =>\r\n// tagNames.map((tag) => {\r\n// \t\treturn (\r\n// \t\t\t<Badge pill className=\"tag\">\r\n// \t\t\t\t{tag}\r\n// \t\t\t</Badge>\r\n// \t\t);\r\n// \t});\r\n\r\nexport class Answers extends Component{\r\n\trender(){\r\n\t\tlet {answer, question,valu,deleteAnswer} = this.props;\r\n\t\tconsole.log(\"HI\", question);\r\n\t\tconst class_Name=valu % 2 === 0 ? \"questionEven\" : \"questionOdd\"\r\n\t\treturn(\r\n\t\t\t<div>\r\n\t\t\t\t<Card className={'container question-container '+class_Name+' list-item-style'}>\r\n\t\t\t\t\t\t<div className='row'>\r\n\t\t\t\t\t\t\t<div className='col-12'>\r\n\t\t\t\t\t\t\t\t<CardTitle className='question-heading'>\r\n\t\t\t\t\t\t\t\t\t<Link className='question-heading' to={`/question-${question.quesId}-${question.heading}`}>\r\n\t\t\t\t\t\t\t\t\t\t<b>{question.heading}</b>\r\n\t\t\t\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t\t\t\t</CardTitle>\r\n\t\t\t\t\t\t\t\t<CardSubtitle><CardText  className='single-question-profile-name text-muted' style={{textAlign:\"left\"}}> {new Intl.DateTimeFormat('en-US', { year: 'numeric', month: 'short', day: '2-digit'}).format(new Date(Date.parse(answer.createdAt)))}</CardText></CardSubtitle>\r\n\t\t\t\t\t\t\t\t<CardBody>\r\n\t\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t<div className=\"editor__content\" dangerouslySetInnerHTML={{ __html: answer.description }} />\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t<hr/>\r\n\t\t\t\t\t\t\t\t\t<Row>\r\n\t\t\t\t\t\t\t\t\t\t<Button color='danger'  onClick={() => deleteAnswer(answer._id)} >\r\n\t\t\t\t\t\t\t\t\t\t\t<span className='fa fa-lg fa-trash'></span>\r\n\t\t\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t\t\t</Row>\r\n\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</CardBody>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t</Card>\r\n\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport class Questions extends Component {\r\n    render() {\r\n        const {question, answers, reactions, deleteQuestion, valu} = this.props;\r\n        const class_Name=valu % 2 == 0 ? \"questionEven\" : \"questionOdd\"\r\n        var ansCount = answers?answers.filter(a => a.question === question._id).length:0;\r\n\t\tvar uvotesCount = reactions?reactions.filter(r => r.category === 'UpVote').filter(r => r.question === question._id ).length:0;\r\n\t\tvar dvotesCount = reactions?reactions.filter(r => r.category === 'DownVote').filter(r => r.question === question._id).length:0;\r\n\t\tvar viewsCount = reactions?reactions.filter(r => r.category === 'View').filter(r => r.question === question._id).length:0;\r\n        return (\r\n            <div>\r\n                <ListGroup className='container question-container'>\r\n\t\t\t\t\t<ListGroupItem className={class_Name+' list-item-style'}>\r\n\t\t\t\t\t\t\t<div className='row'>\r\n\t\t\t\t\t\t\t<div className='col-12 col-sm-8'>\r\n\t\t\t\t\t\t\t<ListGroupItemHeading className='question-heading'>\r\n                                <Link className='question-heading' to={`/question-${question._id}-${question.heading}`}>\r\n\t\t\t\t\t\t\t\t    {question.heading}\r\n\t\t\t\t\t\t\t\t</Link>\r\n                            <Button color='danger' style={{marginTop: 6}} onClick={() => deleteQuestion(question._id)}><span className='fa fa-trash'></span></Button>\r\n\t\t\t\t\t\t\t</ListGroupItemHeading>\r\n\r\n\t\t\t\t\t\t\t\t{/* <RenderTags tagNames={question.tagNames} /> */}\r\n\t\t\t\t\t\t\t\t<ListGroupItemText className='question-text'>\r\n\t\t\t\t\t\t\t\t\tPosted by :-  {question.author.user_name}\r\n\t\t\t\t\t\t\t\t</ListGroupItemText>\r\n\t\t\t\t\t\t\t\t<ListGroupItemText className='question-text'>\r\n\t\t\t\t\t\t\t\t\tPosted at :- {new Intl.DateTimeFormat('en-US', { year: 'numeric', month: 'short', day: '2-digit'}).format(new Date(Date.parse(question.createdAt)))}\r\n\t\t\t\t\t\t\t\t</ListGroupItemText>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div className='col-12 col-sm-4'>\r\n\t\t\t\t\t\t\t\t<div className='prop-div'>\r\n\t\t\t\t\t\t\t\t\t<Badge className='prop' color='light'>{viewsCount}</Badge>\r\n\t\t\t\t\t\t\t\t\t<p>views</p>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div className='prop-div'>\r\n\t\t\t\t\t\t\t\t\t<Badge className='prop' color='light'>{ansCount}</Badge>\r\n\t\t\t\t\t\t\t\t\t<p>answers</p>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div className='prop-div'>\r\n\t\t\t\t\t\t\t\t\t<Badge className='prop' color='light'>{uvotesCount-dvotesCount}</Badge>\r\n\t\t\t\t\t\t\t\t\t<p>votes</p>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t   \r\n\t\t\t\t\t</ListGroupItem>\r\n\t\t\t</ListGroup>\r\n\r\n                \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport class Blogs extends Component{\r\n\tconstructor(props){\r\n\t\tsuper(props);\r\n\t\tthis.state={CollapseOpen:false}\r\n\t}\r\n    render(){\r\n        const {blog, breactions, valu, deleteBlog} = this.props;\r\n        const class_Name=valu % 2 == 0 ? \"questionEven\" : \"questionOdd\"\r\n        var likesCount = breactions?breactions.filter((r) => r.category === \"Like\").filter((r) => r.blog === blog._id).length:0;\r\n\t    var viewsCount = breactions?breactions.filter((r) => r.category === \"View\").filter((r) => r.blog === blog._id).length:0;\r\n        return(\r\n\r\n            <div>\r\n\r\n                <ListGroup className=\"container blog-container\">\r\n\t\t\t\t<ListGroupItem className={class_Name + \" list-item-style\"}>\r\n\t\t\t\t\t<div className=\"row\">\r\n\t\t\t\t\t\t<div className=\"col-12 col-sm-8\">\r\n\t\t\t\t\t\t\t<ListGroupItemHeading className=\"blog-heading\" onclick = {()=>this.setState({CollapseOpen:!this.state.CollapseOpen})}>\r\n\r\n\r\n\t\t\t\t\t\t\t<span className=\"blog-heading\"> \r\n\r\n\t\t\t\t\t\t\t\t\t{blog.heading}\r\n\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t<Button color=\"danger\" onClick={() => deleteBlog(blog._id)}>\r\n\t\t\t\t\t\t\t\t\t\t<span className=\"fa fa-lg fa-trash\"></span>\r\n\t\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t</ListGroupItemHeading>\r\n\t\t\t\t\t\t\t{/* <RenderTags tagNames={blog.tagNames} /> */}\r\n\t\t\t\t\t\t\t<ListGroupItemText className=\"blog-text\">\r\n\t\t\t\t\t\t\t\tPosted by :- {blog.author.user_name}\r\n\t\t\t\t\t\t\t</ListGroupItemText>\r\n\t\t\t\t\t\t\t<ListGroupItemText className=\"blog-text\">\r\n\t\t\t\t\t\t\t\tPosted at :-{\" \"}\r\n\t\t\t\t\t\t\t\t{new Intl.DateTimeFormat(\"en-US\", {\r\n\t\t\t\t\t\t\t\t\tyear: \"numeric\",\r\n\t\t\t\t\t\t\t\t\tmonth: \"short\",\r\n\t\t\t\t\t\t\t\t\tday: \"2-digit\",\r\n\t\t\t\t\t\t\t\t}).format(new Date(Date.parse(blog.createdAt)))}\r\n\t\t\t\t\t\t\t</ListGroupItemText>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className=\"col-12 col-sm-4\">\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className='col-12'>\r\n\r\n\t\t\t\t\t\t<Collapse horizontal isOpen={this.state.CollapseOpen}>\r\n\t\t\t\t\t\t\t<Alert\r\n\t\t\t\t\t\t\t  style={{\r\n\t\t\t\t\t\t\t    width: '500px'\r\n\t\t\t\t\t\t\t  }}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t  Anim pariatur cliche reprehenderit, enim eiusmod high life accusamus terry richardson ad squid. Nihil anim keffiyeh helvetica, craft beer labore wes anderson cred nesciunt sapiente ea proident.\r\n\t\t\t\t\t\t\t</Alert>\r\n\t\t\t\t\t\t\t</Collapse>\r\n\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div\r\n                      className=\"editor__content\"\r\n                      dangerouslySetInnerHTML={{\r\n                        __html: blog.description,\r\n                      }}\r\n                    />\r\n\t\t\t\t</ListGroupItem>\r\n\t\t\t    </ListGroup>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport class BlogDemands extends Component{\r\n\trender(){\r\n\t\tconst {blogDemand, auth, deleteBlogDemand} = this.props;\r\n\t\treturn(\r\n\t\t<ListGroup className='container blogDemand-container'>\r\n                <ListGroupItem className={' list-item-style'}>\r\n                        <div className='row'>\r\n                        <div className='col-12 col-sm-8'>\r\n\t\t\t\t\t\t<ListGroupItemHeading className='question-heading'>\r\n                                <p className='question-heading'>\r\n\t\t\t\t\t\t\t\t    <b>{blogDemand.title}</b>\r\n\t\t\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t\t\t{/* <RenderTags tagNames={blogDemand.tagNames} /> */}\r\n\t\t\t\t\t\t\t\t<br/>\r\n                            <Button color='danger' style={{marginTop: 6}} onClick={() => deleteBlogDemand(blogDemand._id)}><span className='fa fa-trash'></span></Button>\r\n\t\t\t\t\t\t\t<br/>\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t</ListGroupItemHeading>\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t{/* <ListGroupItemHeading className='question-heading'>\r\n                             <h4 style={{color:\"#5a5a5a\"}}><b>{blogDemand.title}</b></h4>\r\n                             {\r\n                                auth.userId === blogDemand.author._id\r\n                                ?\r\n                            \r\n                                    <>\r\n\t\t\t\t\t\t\t\t\t\t<Button color='danger' className=\"delete-blog-demand\" onClick={() => deleteBlogDemand(blogDemand._id)}>\r\n                                    \t\t<span className='fa fa-lg fa-trash'></span>\r\n\t\t\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t\t\t\t<br/>\r\n\t\t\t\t\t\t\t\t\t</>\r\n                            \r\n                                :\r\n                                <></>\r\n                            }   \r\n                            <RenderTags tagNames={blogDemand.tagNames} />\r\n                            </ListGroupItemHeading> */}\r\n                            \r\n                            \r\n                            <ListGroupItemText className='blogDemand-text'>\r\n                                Posted by :-  {blogDemand.author.user_name}\r\n                            </ListGroupItemText>\r\n                        </div>\r\n\r\n                        </div>\r\n                </ListGroupItem>\r\n        </ListGroup>\r\n\t\t)\r\n\r\n\r\n\t}\r\n}\r\n","D:\\project\\final\\Poogle\\src\\components\\news\\NewsArticle.js",["463","464"],"import React,{useState} from \"react\";\r\nimport Card from 'react-bootstrap/Card'\r\nimport Button from 'react-bootstrap/Button'\r\nimport './News.css'\r\n\r\nfunction NewsArticle({ data }) {\r\n  console.log(data.url)\r\n  const imgsrc= data.urlToImage!=null? data.urlToImage:\"./img-not-found.jpg\";\r\n  return (\r\n    <div className=\"news\">\r\n      \r\n       <Card style={{ width: '18rem' }} className='newsCards'>\r\n          <Card.Img variant=\"top\" src={imgsrc} />\r\n          <Card.Body>\r\n              <Card.Title className=\"news__title\">{data.title}</Card.Title>\r\n              <Card.Text className=\"news__author\">\r\n                {data.author}\r\n              </Card.Text>\r\n              {/* <Card.Text className=\"news__published\">\r\n                {data.publishedAt}\r\n              </Card.Text> */}\r\n              {/* <Card.Text className=\"news__source\">\r\n                {data.source.name}\r\n              </Card.Text> */}\r\n              <Card.Text className=\"news__desc\">\r\n                \r\n                {data.description?(data.description.length<=60?data.description:data.description.slice(0,60)+'...'):\"No Associated Text\"}\r\n              </Card.Text>\r\n              {/* <Button  variant=\"primary\" >{Direction}</Button> */}\r\n          </Card.Body>\r\n      </Card> \r\n    </div>\r\n  );\r\n}\r\n\r\nexport default NewsArticle;","D:\\project\\final\\Poogle\\src\\components\\chat\\ChatSideBar.js",["465","466","467","468","469","470"],"import React, { useEffect, useState } from \"react\";\r\nimport \"./Chat.css\";\r\nimport { Container, Row, Col, ListGroup, Form } from \"react-bootstrap\";\r\nimport { FaSearch } from \"react-icons/fa\";\r\nimport PersonChatProfile from \"./PersonChatProfile\";\r\nimport { connect } from \"react-redux\";\r\nimport { BsChatDots } from \"react-icons/bs\";\r\n\r\nconst ChatSideBar = (props) => {\r\n  console.log(props);\r\n  const {\r\n    person,\r\n    setPerson,\r\n    chats,\r\n    chat,\r\n    setChat,\r\n    modalOpen,\r\n    setModalOpen,\r\n    newPerson,\r\n  } = props;\r\n  const [search, setSearch] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    const currChat = chats.filter(({ name }) => name === person);\r\n    if (currChat.length !== 0) setChat(currChat[0].chat);\r\n  }, [person, chats]);\r\n\r\n  return (\r\n    <Col xs={6} md={4} style={{ maxHeight: \"60%\" }}>\r\n      <Row style={{ width: \"100%\" }}>\r\n        <FaSearch style={{ margin: \"12px\" }} />\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Search person\"\r\n          value={search}\r\n          style={{\r\n            border: \"none\",\r\n            outlineWidth: \"0\",\r\n            background: \"transparent\",\r\n            padding: \"10px\",\r\n          }}\r\n          onChange={(e) => {\r\n            setSearch(e.target.value);\r\n          }}\r\n        ></input>\r\n      </Row>\r\n      <h4 style={{marginTop: 10, marginBottom: 10}}>PREVIOUS CHATS</h4>\r\n      <Row style={{ overflow: \"scroll\", height: \"70vh\", width: \"100%\" }}>\r\n        <ListGroup style={{ width: \"100%\" }}>\r\n          {search === \"\"\r\n            ? chats.map(({ name, chat, _id }) => (\r\n                <PersonChatProfile\r\n                  name={name}\r\n                  chat={chat}\r\n                  setPerson={setPerson}\r\n                  person={person}\r\n                  id={_id}\r\n                />\r\n              ))\r\n            : chats\r\n                .filter(({ name }) =>\r\n                  name.toLowerCase().includes(search.toLowerCase())\r\n                )\r\n                .map(({ name, chat }) => (\r\n                  <PersonChatProfile\r\n                    name={name}\r\n                    chat={chat}\r\n                    setPerson={setPerson}\r\n                    person={person}\r\n                  />\r\n                ))}\r\n        </ListGroup>\r\n        <button\r\n          style={{\r\n            position: \"absolute\",\r\n            bottom: \"50px\",\r\n            right: \"90px\",\r\n            fontSize: \"50px\",\r\n            border: \"none\",\r\n            background: \"none\",\r\n          }}\r\n          onClick={() => {\r\n            setModalOpen(true);\r\n          }}\r\n        >\r\n          <span>\r\n            <BsChatDots />\r\n          </span>\r\n        </button>\r\n      </Row>\r\n    </Col>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return { ...state.chats };\r\n};\r\n\r\nexport default connect(mapStateToProps)(ChatSideBar);\r\n","D:\\project\\final\\Poogle\\src\\redux\\actions\\chat.js",[],"D:\\project\\final\\Poogle\\src\\components\\chat\\PersonChatProfile.js",[],"D:\\project\\final\\Poogle\\src\\components\\all-category\\all-category.js",["471","472","473","474","475","476","477","478","479","480","481","482","483","484","485","486","487","488","489","490"],"import React, { Component } from \"react\";\r\nimport questionMan from \"../../Images/questionMan3.jpg\";\r\nimport { Row, Col, Image } from \"react-bootstrap\";\r\nimport {\r\n  ListGroup,\r\n  List,\r\n  ListGroupItemHeading,\r\n  ListGroupItemText,\r\n  ListGroupItem,\r\n  Card,\r\n  CardBody,\r\n  CardTitle,\r\n  CardSubtitle,\r\n  Badge,\r\n  Nav,\r\n  NavItem,\r\n  NavLink,\r\n  Button,\r\n  Jumbotron,\r\n  Carousel,\r\n  CarouselItem,\r\n  CarouselControl,\r\n  CarouselIndicators,\r\n  CarouselCaption,\r\n} from \"reactstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Loading from \"../loading\";\r\nimport { baseUrl } from \"../../shared/baseUrl\";\r\nimport \"../followed-spaces/Spaces.css\";\r\nimport \"./all-category.css\";\r\nimport \"../all_ques_page/questions.css\";\r\n\r\nconst RenderTags = ({ question }) =>\r\n  question.tagNames.map((tag) => {\r\n    return (\r\n      <Badge pill className=\"tag\">\r\n        {tag}\r\n      </Badge>\r\n    );\r\n  });\r\n\r\nasync function viewAdd(views, postReaction, question, user) {\r\n  if (views && views.length && views.filter((v) => v.user === user)[0]) {\r\n    console.log(\"another view\");\r\n  } else {\r\n    var reac = {\r\n      user: user,\r\n      question: question,\r\n      category: \"View\",\r\n    };\r\n    await postReaction(reac);\r\n  }\r\n}\r\n\r\nfunction RenderMenuItem({\r\n  question,\r\n  spaceId,\r\n  class_Name,\r\n  onClick,\r\n  auth,\r\n  deleteQuestion,\r\n  answers,\r\n  reactions,\r\n  postReaction,\r\n  filter,\r\n}) {\r\n  //var ans = answers.filter(a => a.question === question._id);\r\n  var ansCount = answers.filter((a) => a.question === question._id).length;\r\n  var uvotesCount = reactions\r\n    .filter((r) => r.category === \"UpVote\")\r\n    .filter((r) => r.question === question._id).length;\r\n  var dvotesCount = reactions\r\n    .filter((r) => r.category === \"DownVote\")\r\n    .filter((r) => r.question === question._id).length;\r\n  var views = reactions\r\n    .filter((r) => r.category === \"View\")\r\n    .filter((r) => r.question === question._id);\r\n  var viewsCount = views.length;\r\n\r\n  if (filter === \"Unanswered\") {\r\n    if (ansCount === 0) {\r\n      return (\r\n        <ListGroup className=\"container question-container\">\r\n          <ListGroupItem className={class_Name + \" list-item-style\"}>\r\n            <div className=\"row\">\r\n              <div className=\"col-12 col-sm-8\">\r\n                <ListGroupItemHeading className=\"question-heading\">\r\n                  <Link\r\n                    className=\"question-heading\"\r\n                    to={`/question-${question._id}-${question.heading}`}\r\n                    onClick={() =>\r\n                      viewAdd(views, postReaction, question._id, auth.userId)\r\n                    }\r\n                  >\r\n                    {question.heading}\r\n                  </Link>\r\n                  {auth.userId === question.author._id ? (\r\n                    <Button\r\n                      color=\"danger\"\r\n                      style={{ marginTop: 6 }}\r\n                      onClick={() => deleteQuestion(question._id)}\r\n                    >\r\n                      <span className=\"fa fa-trash\"></span>\r\n                    </Button>\r\n                  ) : (\r\n                    <></>\r\n                  )}\r\n                </ListGroupItemHeading>\r\n                <RenderTags question={question} />\r\n                <ListGroupItemText className=\"question-text\">\r\n                  Posted by :- {question.author.user_name}\r\n                </ListGroupItemText>\r\n                <ListGroupItemText className=\"question-text\">\r\n                  Posted at :-{\" \"}\r\n                  {new Intl.DateTimeFormat(\"en-US\", {\r\n                    year: \"numeric\",\r\n                    month: \"short\",\r\n                    day: \"2-digit\",\r\n                  }).format(new Date(Date.parse(question.createdAt)))}\r\n                </ListGroupItemText>\r\n              </div>\r\n              <div className=\"col-12 col-sm-4\">\r\n                <div className=\"prop-div\">\r\n                  <Badge className=\"prop\" color=\"light\">\r\n                    {viewsCount}\r\n                  </Badge>\r\n                  <p>views</p>\r\n                </div>\r\n                <div className=\"prop-div\">\r\n                  <Badge className=\"prop\" color=\"light\">\r\n                    {ansCount}\r\n                  </Badge>\r\n                  <p>answers</p>\r\n                </div>\r\n                <div className=\"prop-div\">\r\n                  <Badge className=\"prop\" color=\"light\">\r\n                    {uvotesCount - dvotesCount}\r\n                  </Badge>\r\n                  <p>votes</p>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </ListGroupItem>\r\n        </ListGroup>\r\n      );\r\n    } else return <></>;\r\n  } else {\r\n    return (\r\n      <ListGroup className=\"container question-container\">\r\n        <ListGroupItem className={class_Name + \" list-item-style\"}>\r\n          <div className=\"row\">\r\n            <div className=\"col-12 col-sm-8\">\r\n              <ListGroupItemHeading className=\"question-heading\">\r\n                <Link\r\n                  className=\"question-heading\"\r\n                  to={`/question-${question._id}-${question.heading}`}\r\n                  onClick={() =>\r\n                    viewAdd(views, postReaction, question._id, auth.userId)\r\n                  }\r\n                >\r\n                  {question.heading}\r\n                </Link>\r\n                {auth.userId === question.author._id ? (\r\n                  <Button\r\n                    color=\"danger\"\r\n                    onClick={() => deleteQuestion(question._id)}\r\n                  >\r\n                    <span className=\"fa fa-lg fa-trash\"></span>\r\n                  </Button>\r\n                ) : (\r\n                  <></>\r\n                )}\r\n              </ListGroupItemHeading>\r\n              <RenderTags question={question} />\r\n              <ListGroupItemText className=\"question-text\">\r\n                Posted by :- {question.author.user_name}\r\n              </ListGroupItemText>\r\n              <ListGroupItemText className=\"question-text\">\r\n                Posted at :-{\" \"}\r\n                {new Intl.DateTimeFormat(\"en-US\", {\r\n                  year: \"numeric\",\r\n                  month: \"short\",\r\n                  day: \"2-digit\",\r\n                }).format(new Date(Date.parse(question.createdAt)))}\r\n              </ListGroupItemText>\r\n            </div>\r\n            <div className=\"col-12 col-sm-4\">\r\n              <div className=\"prop-div\">\r\n                <Badge className=\"prop\" color=\"light\">\r\n                  {viewsCount}\r\n                </Badge>\r\n                <p>views</p>\r\n              </div>\r\n              <div className=\"prop-div\">\r\n                <Badge className=\"prop\" color=\"light\">\r\n                  {ansCount}\r\n                </Badge>\r\n                <p>answers</p>\r\n              </div>\r\n              <div className=\"prop-div\">\r\n                <Badge className=\"prop\" color=\"light\">\r\n                  {uvotesCount - dvotesCount}\r\n                </Badge>\r\n                <p>votes</p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </ListGroupItem>\r\n      </ListGroup>\r\n    );\r\n  }\r\n}\r\n\r\nclass AllCategory extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      filter: this.props.filter,\r\n      latestActive: true,\r\n      votesActive: false,\r\n      unansweredActive: false,\r\n      suggetsedActive: false,\r\n      viewActive: false,\r\n    };\r\n  }\r\n\r\n  onLatestSelect() {\r\n    this.setState({\r\n      filter: \"Latest\",\r\n      latestActive: true,\r\n      votesActive: false,\r\n      unansweredActive: false,\r\n      suggetsedActive: false,\r\n    });\r\n  }\r\n\r\n  onVotesSelect() {\r\n    this.setState({\r\n      filter: \"Votes\",\r\n      latestActive: false,\r\n      votesActive: true,\r\n      unansweredActive: false,\r\n      suggetsedActive: false,\r\n    });\r\n  }\r\n\r\n  onUnansweredSelect() {\r\n    this.setState({\r\n      filter: \"Unanswered\",\r\n      latestActive: false,\r\n      votesActive: false,\r\n      unansweredActive: true,\r\n      suggetsedActive: false,\r\n    });\r\n  }\r\n\r\n  onViewsSelect() {\r\n    this.setState({\r\n      filter: \"Views\",\r\n      latestActive: false,\r\n      votesActive: false,\r\n      unansweredActive: false,\r\n      suggetsedActive: false,\r\n      viewActive: true,\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const voteCount = (reactions, question) => {\r\n      var uvotesCount = reactions.filter((r) => r.category === \"UpVote\");\r\n      uvotesCount = uvotesCount.length\r\n        ? uvotesCount.filter((r) => r.question === question._id).length\r\n        : 0;\r\n      var dvotesCount = reactions.filter((r) => r.category === \"DownVote\");\r\n      dvotesCount = dvotesCount.length\r\n        ? dvotesCount.filter((r) => r.question === question._id).length\r\n        : 0;\r\n\r\n      return uvotesCount - dvotesCount;\r\n    };\r\n\r\n    const viewCount = (reactions, question) => {\r\n      var uvotesCount = reactions.filter((r) => r.category === \"View\");\r\n      uvotesCount = uvotesCount.length\r\n        ? uvotesCount.filter((r) => r.question === question._id).length\r\n        : 0;\r\n\r\n      return uvotesCount;\r\n    };\r\n\r\n    var count = -1;\r\n    const MenuDate = this.props.questions.length ? this.props.questions\r\n      .sort((a, b) => b.dateNum - a.dateNum)\r\n      .map((question) => {\r\n        count += 1;\r\n        return (\r\n          <div className=\"col-12\" key={question.id}>\r\n            <RenderMenuItem\r\n              question={question}\r\n              class_Name={count % 2 == 0 ? \"questionEven\" : \"questionOdd\"}\r\n              onClick={this.props.onClick}\r\n              auth={this.props.auth}\r\n              deleteQuestion={this.props.deleteQuestion}\r\n              answers={this.props.answers}\r\n              reactions={this.props.reactions}\r\n              postReaction={this.props.postReaction}\r\n              filter={this.state.filter}\r\n            />\r\n          </div>\r\n        );\r\n      })\r\n      :\r\n      <p className='info-text'>No Questions Matched your interests and query</p>\r\n\r\n    const MenuVotes = this.props.questions.length ? this.props.questions\r\n      .sort(\r\n        (a, b) =>\r\n          voteCount(this.props.reactions, b) -\r\n          voteCount(this.props.reactions, a)\r\n      )\r\n      .map((question) => {\r\n        count += 1;\r\n        return (\r\n          <div className=\"col-12\" key={question.id}>\r\n            <RenderMenuItem\r\n              question={question}\r\n              class_Name={count % 2 == 0 ? \"questionEven\" : \"questionOdd\"}\r\n              onClick={this.props.onClick}\r\n              auth={this.props.auth}\r\n              deleteQuestion={this.props.deleteQuestion}\r\n              answers={this.props.answers}\r\n              reactions={this.props.reactions}\r\n              postReaction={this.props.postReaction}\r\n              filter={this.state.filter}\r\n            />\r\n          </div>\r\n        );\r\n      })\r\n      :\r\n      <p className='info-text'>No Questions Matched your interests and query</p>\r\n\r\n    const MenuViews = this.props.questions.length ? this.props.questions\r\n      .sort(\r\n        (a, b) =>\r\n          viewCount(this.props.reactions, b) -\r\n          viewCount(this.props.reactions, a)\r\n      )\r\n      .map((question) => {\r\n        count += 1;\r\n        return (\r\n          <div className=\"col-12\" key={question.id}>\r\n            <RenderMenuItem\r\n              question={question}\r\n              class_Name={count % 2 == 0 ? \"questionEven\" : \"questionOdd\"}\r\n              onClick={this.props.onClick}\r\n              auth={this.props.auth}\r\n              deleteQuestion={this.props.deleteQuestion}\r\n              answers={this.props.answers}\r\n              reactions={this.props.reactions}\r\n              postReaction={this.props.postReaction}\r\n              filter={this.state.filter}\r\n            />\r\n          </div>\r\n        );\r\n      })\r\n      :\r\n      <p className='info-text'>No Questions Matched your interests and query</p>\r\n\r\n    const MenuUnanswered = this.props.questions.length ? this.props.questions.map((question) => {\r\n      count += 1;\r\n      return (\r\n        <div className=\"col-12\" key={question.id}>\r\n          <RenderMenuItem\r\n            question={question}\r\n            class_Name={count % 2 == 0 ? \"questionEven\" : \"questionOdd\"}\r\n            onClick={this.props.onClick}\r\n            auth={this.props.auth}\r\n            deleteQuestion={this.props.deleteQuestion}\r\n            answers={this.props.answers}\r\n            reactions={this.props.reactions}\r\n            postReaction={this.props.postReaction}\r\n            filter={this.state.filter}\r\n          />\r\n        </div>\r\n      );\r\n    })\r\n    :\r\n      <p className='info-text'>No Questions Matched your interests and query</p>\r\n\r\n    if (\r\n      this.props.isLoading ||\r\n      this.props.answersIsLoading ||\r\n      this.props.reactionsIsLoading\r\n    ) {\r\n      return <Loading type=\"spokes\" color=\"grey\" />;\r\n    } else if (\r\n      this.props.errMess ||\r\n      this.props.answersErrMess ||\r\n      this.props.reactionsErrMess\r\n    ) {\r\n      return (\r\n        <div className=\"container spaces\">\r\n          <div className=\"row\">\r\n            <div className=\"col-12\">\r\n              <h4>{this.props.errMess || this.props.answersErrMess || this.props.reactionsErrMess}</h4>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      );\r\n    } else if (this.props.questions) {\r\n      var renderQuestions;\r\n\r\n      if (this.state.filter === \"Latest\") {\r\n        renderQuestions = MenuDate;\r\n      } else if (this.state.filter === \"Votes\") {\r\n        renderQuestions = MenuVotes;\r\n      } else if (this.state.filter === \"Unanswered\")\r\n        renderQuestions = MenuUnanswered;\r\n      else if (this.state.filter === \"Views\") renderQuestions = MenuViews;\r\n\r\n      return (\r\n        <>\r\n          <div>\r\n            <section className=\"new_section\">\r\n              <div className=\"container col-12 home-questions\">\r\n                <div className=\"row\">\r\n                  <div className=\"container category-div \">\r\n                    <div className=\"row ml-1 mt-2 mr-1\">\r\n                      <Nav className=\"col-12 \" tabs>\r\n                        <NavItem className=\"mb-4 filters\">\r\n                          <NavLink\r\n                            href=\"#\"\r\n                            active={\r\n                              this.state.filter === \"Latest\" ? true : false\r\n                            }\r\n                            onClick={() => this.onLatestSelect()}\r\n                          >\r\n                            Latest\r\n                          </NavLink>\r\n                        </NavItem>\r\n                        <NavItem className=\"mb-4 filters\">\r\n                          <NavLink\r\n                            href=\"#\"\r\n                            active={\r\n                              this.state.filter === \"Votes\" ? true : false\r\n                            }\r\n                            onClick={() => this.onVotesSelect()}\r\n                          >\r\n                            Votes\r\n                          </NavLink>\r\n                        </NavItem>\r\n                        <NavItem className=\"mb-4 filters\">\r\n                          <NavLink\r\n                            href=\"#\"\r\n                            active={\r\n                              this.state.filter === \"Views\" ? true : false\r\n                            }\r\n                            onClick={() => this.onViewsSelect()}\r\n                          >\r\n                            Views\r\n                          </NavLink>\r\n                        </NavItem>\r\n                        <NavItem className=\"mb-4 filters\">\r\n                          <NavLink\r\n                            href=\"#\"\r\n                            active={\r\n                              this.state.filter === \"Unanswered\" ? true : false\r\n                            }\r\n                            onClick={() => this.onUnansweredSelect()}\r\n                          >\r\n                            Unanswered\r\n                          </NavLink>\r\n                        </NavItem>\r\n                      </Nav>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <div\r\n                  id=\"all-questions-id\"\r\n                  className=\"row mt-4 justify-content-center\"\r\n                >\r\n                  {renderQuestions}\r\n                </div>\r\n              </div>\r\n            </section>\r\n          </div>\r\n        </>\r\n      );\r\n    }\r\n  }\r\n}\r\nexport default AllCategory;\r\n",{"ruleId":"491","replacedBy":"492"},{"ruleId":"493","replacedBy":"494"},{"ruleId":"495","severity":1,"message":"496","line":12,"column":8,"nodeType":"497","messageId":"498","endLine":12,"endColumn":14},{"ruleId":"495","severity":1,"message":"499","line":4,"column":8,"nodeType":"497","messageId":"498","endLine":4,"endColumn":19},{"ruleId":"495","severity":1,"message":"500","line":15,"column":8,"nodeType":"497","messageId":"498","endLine":15,"endColumn":29},{"ruleId":"495","severity":1,"message":"501","line":1,"column":46,"nodeType":"497","messageId":"498","endLine":1,"endColumn":57},{"ruleId":"502","severity":1,"message":"503","line":9,"column":1,"nodeType":"504","endLine":28,"endColumn":2},{"ruleId":"495","severity":1,"message":"505","line":1,"column":9,"nodeType":"497","messageId":"498","endLine":1,"endColumn":21},{"ruleId":"495","severity":1,"message":"506","line":1,"column":16,"nodeType":"497","messageId":"498","endLine":1,"endColumn":24},{"ruleId":"495","severity":1,"message":"507","line":2,"column":9,"nodeType":"497","messageId":"498","endLine":2,"endColumn":20},{"ruleId":"495","severity":1,"message":"508","line":2,"column":22,"nodeType":"497","messageId":"498","endLine":2,"endColumn":33},{"ruleId":"495","severity":1,"message":"509","line":7,"column":9,"nodeType":"497","messageId":"498","endLine":7,"endColumn":18},{"ruleId":"495","severity":1,"message":"510","line":7,"column":20,"nodeType":"497","messageId":"498","endLine":7,"endColumn":23},{"ruleId":"495","severity":1,"message":"511","line":7,"column":25,"nodeType":"497","messageId":"498","endLine":7,"endColumn":28},{"ruleId":"495","severity":1,"message":"512","line":7,"column":30,"nodeType":"497","messageId":"498","endLine":7,"endColumn":35},{"ruleId":"495","severity":1,"message":"513","line":7,"column":37,"nodeType":"497","messageId":"498","endLine":7,"endColumn":43},{"ruleId":"495","severity":1,"message":"514","line":7,"column":44,"nodeType":"497","messageId":"498","endLine":7,"endColumn":47},{"ruleId":"495","severity":1,"message":"515","line":7,"column":49,"nodeType":"497","messageId":"498","endLine":7,"endColumn":60},{"ruleId":"495","severity":1,"message":"516","line":8,"column":18,"nodeType":"497","messageId":"498","endLine":8,"endColumn":23},{"ruleId":"495","severity":1,"message":"517","line":8,"column":25,"nodeType":"497","messageId":"498","endLine":8,"endColumn":37},{"ruleId":"495","severity":1,"message":"518","line":8,"column":39,"nodeType":"497","messageId":"498","endLine":8,"endColumn":45},{"ruleId":"495","severity":1,"message":"519","line":8,"column":47,"nodeType":"497","messageId":"498","endLine":8,"endColumn":63},{"ruleId":"495","severity":1,"message":"520","line":9,"column":8,"nodeType":"497","messageId":"498","endLine":9,"endColumn":12},{"ruleId":"495","severity":1,"message":"521","line":12,"column":9,"nodeType":"497","messageId":"498","endLine":12,"endColumn":15},{"ruleId":"495","severity":1,"message":"522","line":3,"column":10,"nodeType":"497","messageId":"498","endLine":3,"endColumn":16},{"ruleId":"495","severity":1,"message":"523","line":3,"column":18,"nodeType":"497","messageId":"498","endLine":3,"endColumn":22},{"ruleId":"495","severity":1,"message":"524","line":3,"column":24,"nodeType":"497","messageId":"498","endLine":3,"endColumn":33},{"ruleId":"495","severity":1,"message":"525","line":3,"column":35,"nodeType":"497","messageId":"498","endLine":3,"endColumn":40},{"ruleId":"495","severity":1,"message":"526","line":3,"column":42,"nodeType":"497","messageId":"498","endLine":3,"endColumn":47},{"ruleId":"495","severity":1,"message":"509","line":4,"column":9,"nodeType":"497","messageId":"498","endLine":4,"endColumn":18},{"ruleId":"495","severity":1,"message":"510","line":4,"column":20,"nodeType":"497","messageId":"498","endLine":4,"endColumn":23},{"ruleId":"495","severity":1,"message":"511","line":4,"column":25,"nodeType":"497","messageId":"498","endLine":4,"endColumn":28},{"ruleId":"495","severity":1,"message":"513","line":4,"column":37,"nodeType":"497","messageId":"498","endLine":4,"endColumn":43},{"ruleId":"495","severity":1,"message":"514","line":4,"column":44,"nodeType":"497","messageId":"498","endLine":4,"endColumn":47},{"ruleId":"495","severity":1,"message":"515","line":4,"column":49,"nodeType":"497","messageId":"498","endLine":4,"endColumn":60},{"ruleId":"495","severity":1,"message":"527","line":5,"column":9,"nodeType":"497","messageId":"498","endLine":5,"endColumn":15},{"ruleId":"495","severity":1,"message":"528","line":3,"column":8,"nodeType":"497","messageId":"498","endLine":3,"endColumn":12},{"ruleId":"495","severity":1,"message":"529","line":4,"column":8,"nodeType":"497","messageId":"498","endLine":4,"endColumn":12},{"ruleId":"495","severity":1,"message":"512","line":6,"column":20,"nodeType":"497","messageId":"498","endLine":6,"endColumn":25},{"ruleId":"495","severity":1,"message":"530","line":12,"column":10,"nodeType":"497","messageId":"498","endLine":12,"endColumn":17},{"ruleId":"495","severity":1,"message":"531","line":12,"column":19,"nodeType":"497","messageId":"498","endLine":12,"endColumn":30},{"ruleId":"495","severity":1,"message":"532","line":13,"column":17,"nodeType":"497","messageId":"498","endLine":13,"endColumn":26},{"ruleId":"495","severity":1,"message":"533","line":18,"column":7,"nodeType":"497","messageId":"498","endLine":18,"endColumn":13},{"ruleId":"495","severity":1,"message":"524","line":2,"column":24,"nodeType":"497","messageId":"498","endLine":2,"endColumn":33},{"ruleId":"495","severity":1,"message":"525","line":2,"column":35,"nodeType":"497","messageId":"498","endLine":2,"endColumn":40},{"ruleId":"495","severity":1,"message":"526","line":2,"column":42,"nodeType":"497","messageId":"498","endLine":2,"endColumn":47},{"ruleId":"495","severity":1,"message":"534","line":8,"column":8,"nodeType":"497","messageId":"498","endLine":8,"endColumn":24},{"ruleId":"535","severity":1,"message":"536","line":171,"column":17,"nodeType":"497","messageId":"537","endLine":171,"endColumn":22},{"ruleId":"535","severity":1,"message":"538","line":171,"column":30,"nodeType":"497","messageId":"537","endLine":171,"endColumn":39},{"ruleId":"491","replacedBy":"539"},{"ruleId":"493","replacedBy":"540"},{"ruleId":"495","severity":1,"message":"519","line":16,"column":18,"nodeType":"497","messageId":"498","endLine":16,"endColumn":34},{"ruleId":"495","severity":1,"message":"541","line":16,"column":36,"nodeType":"497","messageId":"498","endLine":16,"endColumn":45},{"ruleId":"495","severity":1,"message":"523","line":17,"column":8,"nodeType":"497","messageId":"498","endLine":17,"endColumn":12},{"ruleId":"495","severity":1,"message":"542","line":21,"column":8,"nodeType":"497","messageId":"498","endLine":21,"endColumn":14},{"ruleId":"495","severity":1,"message":"543","line":22,"column":10,"nodeType":"497","messageId":"498","endLine":22,"endColumn":16},{"ruleId":"495","severity":1,"message":"544","line":23,"column":10,"nodeType":"497","messageId":"498","endLine":23,"endColumn":24},{"ruleId":"495","severity":1,"message":"545","line":23,"column":26,"nodeType":"497","messageId":"498","endLine":23,"endColumn":31},{"ruleId":"546","severity":1,"message":"547","line":174,"column":37,"nodeType":"548","messageId":"549","endLine":174,"endColumn":39},{"ruleId":"546","severity":1,"message":"547","line":198,"column":37,"nodeType":"548","messageId":"549","endLine":198,"endColumn":39},{"ruleId":"495","severity":1,"message":"550","line":15,"column":3,"nodeType":"497","messageId":"498","endLine":15,"endColumn":13},{"ruleId":"495","severity":1,"message":"551","line":16,"column":3,"nodeType":"497","messageId":"498","endLine":16,"endColumn":17},{"ruleId":"495","severity":1,"message":"552","line":17,"column":3,"nodeType":"497","messageId":"498","endLine":17,"endColumn":17},{"ruleId":"495","severity":1,"message":"553","line":19,"column":16,"nodeType":"497","messageId":"498","endLine":19,"endColumn":26},{"ruleId":"546","severity":1,"message":"547","line":268,"column":39,"nodeType":"548","messageId":"549","endLine":268,"endColumn":41},{"ruleId":"546","severity":1,"message":"547","line":297,"column":39,"nodeType":"548","messageId":"549","endLine":297,"endColumn":41},{"ruleId":"546","severity":1,"message":"547","line":320,"column":37,"nodeType":"548","messageId":"549","endLine":320,"endColumn":39},{"ruleId":"495","severity":1,"message":"554","line":38,"column":3,"nodeType":"497","messageId":"498","endLine":38,"endColumn":12},{"ruleId":"495","severity":1,"message":"530","line":53,"column":10,"nodeType":"497","messageId":"498","endLine":53,"endColumn":17},{"ruleId":"495","severity":1,"message":"531","line":53,"column":19,"nodeType":"497","messageId":"498","endLine":53,"endColumn":30},{"ruleId":"495","severity":1,"message":"532","line":54,"column":17,"nodeType":"497","messageId":"498","endLine":54,"endColumn":26},{"ruleId":"495","severity":1,"message":"533","line":59,"column":7,"nodeType":"497","messageId":"498","endLine":59,"endColumn":13},{"ruleId":"555","severity":1,"message":"556","line":335,"column":25,"nodeType":"557","endLine":343,"endColumn":27},{"ruleId":"558","severity":1,"message":"559","line":878,"column":3,"nodeType":"560","messageId":"561","endLine":880,"endColumn":4},{"ruleId":"495","severity":1,"message":"562","line":9,"column":3,"nodeType":"497","messageId":"498","endLine":9,"endColumn":6},{"ruleId":"495","severity":1,"message":"563","line":10,"column":3,"nodeType":"497","messageId":"498","endLine":10,"endColumn":7},{"ruleId":"495","severity":1,"message":"564","line":44,"column":11,"nodeType":"497","messageId":"498","endLine":44,"endColumn":17},{"ruleId":"565","severity":1,"message":"566","line":58,"column":6,"nodeType":"567","endLine":58,"endColumn":8,"suggestions":"568"},{"ruleId":"565","severity":1,"message":"566","line":66,"column":6,"nodeType":"567","endLine":66,"endColumn":8,"suggestions":"569"},{"ruleId":"495","severity":1,"message":"570","line":6,"column":10,"nodeType":"497","messageId":"498","endLine":6,"endColumn":30},{"ruleId":"495","severity":1,"message":"519","line":9,"column":18,"nodeType":"497","messageId":"498","endLine":9,"endColumn":34},{"ruleId":"495","severity":1,"message":"543","line":15,"column":9,"nodeType":"497","messageId":"498","endLine":15,"endColumn":15},{"ruleId":"495","severity":1,"message":"571","line":21,"column":9,"nodeType":"497","messageId":"498","endLine":21,"endColumn":19},{"ruleId":"546","severity":1,"message":"547","line":116,"column":23,"nodeType":"548","messageId":"549","endLine":116,"endColumn":25},{"ruleId":"546","severity":1,"message":"547","line":138,"column":21,"nodeType":"548","messageId":"549","endLine":138,"endColumn":23},{"ruleId":"546","severity":1,"message":"547","line":160,"column":19,"nodeType":"548","messageId":"549","endLine":160,"endColumn":21},{"ruleId":"546","severity":1,"message":"547","line":183,"column":25,"nodeType":"548","messageId":"549","endLine":183,"endColumn":27},{"ruleId":"546","severity":1,"message":"572","line":309,"column":17,"nodeType":"548","messageId":"549","endLine":309,"endColumn":19},{"ruleId":"546","severity":1,"message":"572","line":309,"column":43,"nodeType":"548","messageId":"549","endLine":309,"endColumn":45},{"ruleId":"573","severity":1,"message":"574","line":500,"column":4,"nodeType":"575","messageId":"576","endLine":500,"endColumn":11},{"ruleId":"573","severity":1,"message":"574","line":533,"column":4,"nodeType":"575","messageId":"576","endLine":533,"endColumn":11},{"ruleId":"573","severity":1,"message":"577","line":556,"column":35,"nodeType":"578","messageId":"579","endLine":556,"endColumn":37},{"ruleId":"573","severity":1,"message":"577","line":592,"column":43,"nodeType":"578","messageId":"579","endLine":592,"endColumn":45},{"ruleId":"495","severity":1,"message":"512","line":2,"column":30,"nodeType":"497","messageId":"498","endLine":2,"endColumn":35},{"ruleId":"495","severity":1,"message":"522","line":3,"column":38,"nodeType":"497","messageId":"498","endLine":3,"endColumn":44},{"ruleId":"495","severity":1,"message":"580","line":6,"column":15,"nodeType":"497","messageId":"498","endLine":6,"endColumn":23},{"ruleId":"495","severity":1,"message":"581","line":10,"column":8,"nodeType":"497","messageId":"498","endLine":10,"endColumn":18},{"ruleId":"495","severity":1,"message":"582","line":11,"column":8,"nodeType":"497","messageId":"498","endLine":11,"endColumn":20},{"ruleId":"495","severity":1,"message":"512","line":5,"column":29,"nodeType":"497","messageId":"498","endLine":5,"endColumn":34},{"ruleId":"495","severity":1,"message":"581","line":11,"column":8,"nodeType":"497","messageId":"498","endLine":11,"endColumn":18},{"ruleId":"495","severity":1,"message":"582","line":12,"column":8,"nodeType":"497","messageId":"498","endLine":12,"endColumn":20},{"ruleId":"495","severity":1,"message":"542","line":7,"column":8,"nodeType":"497","messageId":"498","endLine":7,"endColumn":14},{"ruleId":"495","severity":1,"message":"583","line":8,"column":8,"nodeType":"497","messageId":"498","endLine":8,"endColumn":18},{"ruleId":"495","severity":1,"message":"543","line":12,"column":9,"nodeType":"497","messageId":"498","endLine":12,"endColumn":15},{"ruleId":"495","severity":1,"message":"584","line":12,"column":32,"nodeType":"497","messageId":"498","endLine":12,"endColumn":39},{"ruleId":"495","severity":1,"message":"530","line":14,"column":10,"nodeType":"497","messageId":"498","endLine":14,"endColumn":17},{"ruleId":"495","severity":1,"message":"531","line":14,"column":19,"nodeType":"497","messageId":"498","endLine":14,"endColumn":30},{"ruleId":"495","severity":1,"message":"532","line":15,"column":17,"nodeType":"497","messageId":"498","endLine":15,"endColumn":26},{"ruleId":"495","severity":1,"message":"585","line":17,"column":10,"nodeType":"497","messageId":"498","endLine":17,"endColumn":17},{"ruleId":"495","severity":1,"message":"533","line":26,"column":7,"nodeType":"497","messageId":"498","endLine":26,"endColumn":13},{"ruleId":"546","severity":1,"message":"572","line":260,"column":26,"nodeType":"548","messageId":"549","endLine":260,"endColumn":28},{"ruleId":"546","severity":1,"message":"572","line":260,"column":52,"nodeType":"548","messageId":"549","endLine":260,"endColumn":54},{"ruleId":"586","severity":1,"message":"587","line":330,"column":41,"nodeType":"548","messageId":"588","endLine":330,"endColumn":42},{"ruleId":"495","severity":1,"message":"542","line":7,"column":8,"nodeType":"497","messageId":"498","endLine":7,"endColumn":14},{"ruleId":"495","severity":1,"message":"543","line":12,"column":9,"nodeType":"497","messageId":"498","endLine":12,"endColumn":15},{"ruleId":"495","severity":1,"message":"530","line":14,"column":10,"nodeType":"497","messageId":"498","endLine":14,"endColumn":17},{"ruleId":"495","severity":1,"message":"531","line":14,"column":19,"nodeType":"497","messageId":"498","endLine":14,"endColumn":30},{"ruleId":"495","severity":1,"message":"532","line":15,"column":17,"nodeType":"497","messageId":"498","endLine":15,"endColumn":26},{"ruleId":"495","severity":1,"message":"533","line":19,"column":7,"nodeType":"497","messageId":"498","endLine":19,"endColumn":13},{"ruleId":"495","severity":1,"message":"530","line":13,"column":10,"nodeType":"497","messageId":"498","endLine":13,"endColumn":17},{"ruleId":"495","severity":1,"message":"531","line":13,"column":19,"nodeType":"497","messageId":"498","endLine":13,"endColumn":30},{"ruleId":"495","severity":1,"message":"532","line":14,"column":17,"nodeType":"497","messageId":"498","endLine":14,"endColumn":26},{"ruleId":"495","severity":1,"message":"533","line":21,"column":7,"nodeType":"497","messageId":"498","endLine":21,"endColumn":13},{"ruleId":"495","severity":1,"message":"506","line":1,"column":28,"nodeType":"497","messageId":"498","endLine":1,"endColumn":36},{"ruleId":"495","severity":1,"message":"509","line":22,"column":3,"nodeType":"497","messageId":"498","endLine":22,"endColumn":12},{"ruleId":"495","severity":1,"message":"589","line":28,"column":3,"nodeType":"497","messageId":"498","endLine":28,"endColumn":11},{"ruleId":"495","severity":1,"message":"590","line":31,"column":3,"nodeType":"497","messageId":"498","endLine":31,"endColumn":10},{"ruleId":"495","severity":1,"message":"591","line":37,"column":3,"nodeType":"497","messageId":"498","endLine":37,"endColumn":8},{"ruleId":"495","severity":1,"message":"525","line":38,"column":3,"nodeType":"497","messageId":"498","endLine":38,"endColumn":8},{"ruleId":"495","severity":1,"message":"554","line":39,"column":3,"nodeType":"497","messageId":"498","endLine":39,"endColumn":12},{"ruleId":"495","severity":1,"message":"592","line":42,"column":10,"nodeType":"497","messageId":"498","endLine":42,"endColumn":17},{"ruleId":"495","severity":1,"message":"593","line":44,"column":10,"nodeType":"497","messageId":"498","endLine":44,"endColumn":19},{"ruleId":"495","severity":1,"message":"594","line":44,"column":21,"nodeType":"497","messageId":"498","endLine":44,"endColumn":28},{"ruleId":"495","severity":1,"message":"595","line":44,"column":30,"nodeType":"497","messageId":"498","endLine":44,"endColumn":36},{"ruleId":"495","severity":1,"message":"545","line":45,"column":26,"nodeType":"497","messageId":"498","endLine":45,"endColumn":31},{"ruleId":"495","severity":1,"message":"530","line":46,"column":10,"nodeType":"497","messageId":"498","endLine":46,"endColumn":17},{"ruleId":"495","severity":1,"message":"531","line":46,"column":19,"nodeType":"497","messageId":"498","endLine":46,"endColumn":30},{"ruleId":"495","severity":1,"message":"532","line":47,"column":17,"nodeType":"497","messageId":"498","endLine":47,"endColumn":26},{"ruleId":"495","severity":1,"message":"533","line":52,"column":7,"nodeType":"497","messageId":"498","endLine":52,"endColumn":13},{"ruleId":"495","severity":1,"message":"596","line":71,"column":7,"nodeType":"497","messageId":"498","endLine":71,"endColumn":15},{"ruleId":"495","severity":1,"message":"597","line":72,"column":7,"nodeType":"497","messageId":"498","endLine":72,"endColumn":16},{"ruleId":"495","severity":1,"message":"598","line":106,"column":11,"nodeType":"497","messageId":"498","endLine":106,"endColumn":28},{"ruleId":"495","severity":1,"message":"524","line":10,"column":17,"nodeType":"497","messageId":"498","endLine":10,"endColumn":26},{"ruleId":"495","severity":1,"message":"525","line":10,"column":27,"nodeType":"497","messageId":"498","endLine":10,"endColumn":32},{"ruleId":"495","severity":1,"message":"526","line":10,"column":33,"nodeType":"497","messageId":"498","endLine":10,"endColumn":38},{"ruleId":"495","severity":1,"message":"550","line":11,"column":9,"nodeType":"497","messageId":"498","endLine":11,"endColumn":19},{"ruleId":"495","severity":1,"message":"551","line":11,"column":21,"nodeType":"497","messageId":"498","endLine":11,"endColumn":35},{"ruleId":"495","severity":1,"message":"552","line":11,"column":37,"nodeType":"497","messageId":"498","endLine":11,"endColumn":51},{"ruleId":"495","severity":1,"message":"599","line":11,"column":53,"nodeType":"497","messageId":"498","endLine":11,"endColumn":66},{"ruleId":"495","severity":1,"message":"600","line":13,"column":10,"nodeType":"497","messageId":"498","endLine":13,"endColumn":14},{"ruleId":"495","severity":1,"message":"601","line":13,"column":16,"nodeType":"497","messageId":"498","endLine":13,"endColumn":23},{"ruleId":"495","severity":1,"message":"553","line":14,"column":16,"nodeType":"497","messageId":"498","endLine":14,"endColumn":26},{"ruleId":"546","severity":1,"message":"547","line":200,"column":49,"nodeType":"548","messageId":"549","endLine":200,"endColumn":51},{"ruleId":"495","severity":1,"message":"602","line":6,"column":10,"nodeType":"497","messageId":"498","endLine":6,"endColumn":28},{"ruleId":"495","severity":1,"message":"603","line":107,"column":25,"nodeType":"497","messageId":"498","endLine":107,"endColumn":34},{"ruleId":"546","severity":1,"message":"547","line":126,"column":12,"nodeType":"548","messageId":"549","endLine":126,"endColumn":14},{"ruleId":"495","severity":1,"message":"604","line":5,"column":27,"nodeType":"497","messageId":"498","endLine":5,"endColumn":33},{"ruleId":"495","severity":1,"message":"580","line":5,"column":36,"nodeType":"497","messageId":"498","endLine":5,"endColumn":44},{"ruleId":"495","severity":1,"message":"605","line":5,"column":46,"nodeType":"497","messageId":"498","endLine":5,"endColumn":52},{"ruleId":"495","severity":1,"message":"606","line":5,"column":54,"nodeType":"497","messageId":"498","endLine":5,"endColumn":59},{"ruleId":"495","severity":1,"message":"607","line":5,"column":61,"nodeType":"497","messageId":"498","endLine":5,"endColumn":65},{"ruleId":"495","severity":1,"message":"608","line":5,"column":67,"nodeType":"497","messageId":"498","endLine":5,"endColumn":80},{"ruleId":"495","severity":1,"message":"609","line":5,"column":82,"nodeType":"497","messageId":"498","endLine":5,"endColumn":95},{"ruleId":"610","severity":1,"message":"611","line":19,"column":13,"nodeType":"557","endLine":19,"endColumn":48},{"ruleId":"565","severity":1,"message":"612","line":18,"column":6,"nodeType":"567","endLine":18,"endColumn":8,"suggestions":"613"},{"ruleId":"495","severity":1,"message":"509","line":2,"column":10,"nodeType":"497","messageId":"498","endLine":2,"endColumn":19},{"ruleId":"495","severity":1,"message":"511","line":2,"column":26,"nodeType":"497","messageId":"498","endLine":2,"endColumn":29},{"ruleId":"495","severity":1,"message":"512","line":2,"column":31,"nodeType":"497","messageId":"498","endLine":2,"endColumn":36},{"ruleId":"495","severity":1,"message":"614","line":3,"column":21,"nodeType":"497","messageId":"498","endLine":3,"endColumn":25},{"ruleId":"495","severity":1,"message":"514","line":4,"column":9,"nodeType":"497","messageId":"498","endLine":4,"endColumn":12},{"ruleId":"495","severity":1,"message":"615","line":4,"column":14,"nodeType":"497","messageId":"498","endLine":4,"endColumn":21},{"ruleId":"495","severity":1,"message":"616","line":4,"column":23,"nodeType":"497","messageId":"498","endLine":4,"endColumn":30},{"ruleId":"495","severity":1,"message":"554","line":4,"column":40,"nodeType":"497","messageId":"498","endLine":4,"endColumn":49},{"ruleId":"495","severity":1,"message":"617","line":4,"column":51,"nodeType":"497","messageId":"498","endLine":4,"endColumn":59},{"ruleId":"495","severity":1,"message":"618","line":4,"column":61,"nodeType":"497","messageId":"498","endLine":4,"endColumn":73},{"ruleId":"495","severity":1,"message":"619","line":4,"column":75,"nodeType":"497","messageId":"498","endLine":4,"endColumn":90},{"ruleId":"495","severity":1,"message":"620","line":4,"column":92,"nodeType":"497","messageId":"498","endLine":4,"endColumn":110},{"ruleId":"495","severity":1,"message":"621","line":4,"column":112,"nodeType":"497","messageId":"498","endLine":4,"endColumn":127},{"ruleId":"495","severity":1,"message":"622","line":4,"column":129,"nodeType":"497","messageId":"498","endLine":4,"endColumn":139},{"ruleId":"546","severity":1,"message":"547","line":59,"column":35,"nodeType":"548","messageId":"549","endLine":59,"endColumn":37},{"ruleId":"546","severity":1,"message":"547","line":117,"column":35,"nodeType":"548","messageId":"549","endLine":117,"endColumn":37},{"ruleId":"495","severity":1,"message":"623","line":118,"column":13,"nodeType":"497","messageId":"498","endLine":118,"endColumn":23},{"ruleId":"495","severity":1,"message":"624","line":119,"column":10,"nodeType":"497","messageId":"498","endLine":119,"endColumn":20},{"ruleId":"495","severity":1,"message":"625","line":185,"column":22,"nodeType":"497","messageId":"498","endLine":185,"endColumn":26},{"ruleId":"495","severity":1,"message":"506","line":1,"column":15,"nodeType":"497","messageId":"498","endLine":1,"endColumn":23},{"ruleId":"495","severity":1,"message":"522","line":3,"column":8,"nodeType":"497","messageId":"498","endLine":3,"endColumn":14},{"ruleId":"495","severity":1,"message":"509","line":3,"column":10,"nodeType":"497","messageId":"498","endLine":3,"endColumn":19},{"ruleId":"495","severity":1,"message":"523","line":3,"column":42,"nodeType":"497","messageId":"498","endLine":3,"endColumn":46},{"ruleId":"495","severity":1,"message":"626","line":15,"column":5,"nodeType":"497","messageId":"498","endLine":15,"endColumn":9},{"ruleId":"495","severity":1,"message":"627","line":17,"column":5,"nodeType":"497","messageId":"498","endLine":17,"endColumn":14},{"ruleId":"495","severity":1,"message":"628","line":19,"column":5,"nodeType":"497","messageId":"498","endLine":19,"endColumn":14},{"ruleId":"565","severity":1,"message":"629","line":26,"column":6,"nodeType":"567","endLine":26,"endColumn":21,"suggestions":"630"},{"ruleId":"495","severity":1,"message":"631","line":2,"column":8,"nodeType":"497","messageId":"498","endLine":2,"endColumn":19},{"ruleId":"495","severity":1,"message":"510","line":3,"column":10,"nodeType":"497","messageId":"498","endLine":3,"endColumn":13},{"ruleId":"495","severity":1,"message":"511","line":3,"column":15,"nodeType":"497","messageId":"498","endLine":3,"endColumn":18},{"ruleId":"495","severity":1,"message":"512","line":3,"column":20,"nodeType":"497","messageId":"498","endLine":3,"endColumn":25},{"ruleId":"495","severity":1,"message":"614","line":6,"column":3,"nodeType":"497","messageId":"498","endLine":6,"endColumn":7},{"ruleId":"495","severity":1,"message":"632","line":10,"column":3,"nodeType":"497","messageId":"498","endLine":10,"endColumn":7},{"ruleId":"495","severity":1,"message":"633","line":11,"column":3,"nodeType":"497","messageId":"498","endLine":11,"endColumn":11},{"ruleId":"495","severity":1,"message":"634","line":12,"column":3,"nodeType":"497","messageId":"498","endLine":12,"endColumn":12},{"ruleId":"495","severity":1,"message":"635","line":13,"column":3,"nodeType":"497","messageId":"498","endLine":13,"endColumn":15},{"ruleId":"495","severity":1,"message":"554","line":19,"column":3,"nodeType":"497","messageId":"498","endLine":19,"endColumn":12},{"ruleId":"495","severity":1,"message":"617","line":20,"column":3,"nodeType":"497","messageId":"498","endLine":20,"endColumn":11},{"ruleId":"495","severity":1,"message":"618","line":21,"column":3,"nodeType":"497","messageId":"498","endLine":21,"endColumn":15},{"ruleId":"495","severity":1,"message":"619","line":22,"column":3,"nodeType":"497","messageId":"498","endLine":22,"endColumn":18},{"ruleId":"495","severity":1,"message":"620","line":23,"column":3,"nodeType":"497","messageId":"498","endLine":23,"endColumn":21},{"ruleId":"495","severity":1,"message":"621","line":24,"column":3,"nodeType":"497","messageId":"498","endLine":24,"endColumn":18},{"ruleId":"495","severity":1,"message":"592","line":28,"column":10,"nodeType":"497","messageId":"498","endLine":28,"endColumn":17},{"ruleId":"546","severity":1,"message":"547","line":301,"column":37,"nodeType":"548","messageId":"549","endLine":301,"endColumn":39},{"ruleId":"546","severity":1,"message":"547","line":328,"column":37,"nodeType":"548","messageId":"549","endLine":328,"endColumn":39},{"ruleId":"546","severity":1,"message":"547","line":355,"column":37,"nodeType":"548","messageId":"549","endLine":355,"endColumn":39},{"ruleId":"546","severity":1,"message":"547","line":376,"column":35,"nodeType":"548","messageId":"549","endLine":376,"endColumn":37},"no-native-reassign",["636"],"no-negated-in-lhs",["637"],"no-unused-vars","'logger' is defined but never used.","Identifier","unusedVar","'ScrollToTop' is defined but never used.","'handleCollapsedChange' is assigned a value but never used.","'UPDATE_USER' is defined but never used.","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","'USER_LOADING' is defined but never used.","'useState' is defined but never used.","'useSelector' is defined but never used.","'useDispatch' is defined but never used.","'Container' is defined but never used.","'Row' is defined but never used.","'Col' is defined but never used.","'Image' is defined but never used.","'Navbar' is defined but never used.","'Nav' is defined but never used.","'NavDropdown' is defined but never used.","'FaGem' is defined but never used.","'FaStickyNote' is defined but never used.","'FaBlog' is defined but never used.","'FaQuestionCircle' is defined but never used.","'Logo' is defined but never used.","'HiChat' is defined but never used.","'Button' is defined but never used.","'Form' is defined but never used.","'FormGroup' is defined but never used.","'Label' is defined but never used.","'Input' is defined but never used.","'FaHome' is defined but never used.","'Blog' is defined but never used.","'Chat' is defined but never used.","'zoomOut' is defined but never used.","'slideInDown' is defined but never used.","'StyleRoot' is defined but never used.","'styles' is assigned a value but never used.","'ReactImageAppear' is defined but never used.","no-redeclare","'blogs' is already defined.","redeclared","'questions' is already defined.",["636"],["637"],"'FaUserAlt' is defined but never used.","'Select' is defined but never used.","'spaces' is defined but never used.","'ToastContainer' is defined but never used.","'toast' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'Pagination' is defined but never used.","'PaginationItem' is defined but never used.","'PaginationLink' is defined but never used.","'withRouter' is defined but never used.","'Jumbotron' is defined but never used.","react/jsx-pascal-case","Imported JSX component textarea must be in PascalCase or SCREAMING_SNAKE_CASE","JSXOpeningElement","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","'Tab' is defined but never used.","'Tabs' is defined but never used.","'height' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'dispatch' and 'token'. Either include them or remove the dependency array. If 'dispatch' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["638"],["639"],"'RiQuestionAnswerFill' is defined but never used.","'FiUserPlus' is defined but never used.","Expected '!==' and instead saw '!='.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ReturnStatement","expectedReturnValue","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","'Redirect' is defined but never used.","'GoogleIcon' is defined but never used.","'FacebookIcon' is defined but never used.","'ReactQuill' is defined but never used.","'formats' is defined but never used.","'message' is defined but never used.","no-useless-concat","Unexpected string concatenation of literals.","unexpectedConcat","'Collapse' is defined but never used.","'CardImg' is defined but never used.","'Media' is defined but never used.","'baseUrl' is defined but never used.","'LocalForm' is defined but never used.","'Control' is defined but never used.","'Errors' is defined but never used.","'required' is assigned a value but never used.","'maxLength' is assigned a value but never used.","'setAlternateImage' is assigned a value but never used.","'ButtonToolbar' is defined but never used.","'Fade' is defined but never used.","'Stagger' is defined but never used.","'RiContrastDropLine' is defined but never used.","'interests' is assigned a value but never used.","'Router' is defined but never used.","'Switch' is defined but never used.","'Route' is defined but never used.","'Link' is defined but never used.","'useRouteMatch' is defined but never used.","'useParamsLink' is defined but never used.","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","React Hook useEffect has a missing dependency: 'data'. Either include it or remove the dependency array.",["640"],"'List' is defined but never used.","'NavItem' is defined but never used.","'NavLink' is defined but never used.","'Carousel' is defined but never used.","'CarouselItem' is defined but never used.","'CarouselControl' is defined but never used.","'CarouselIndicators' is defined but never used.","'CarouselCaption' is defined but never used.","'CardFooter' is defined but never used.","'likesCount' is assigned a value but never used.","'viewsCount' is assigned a value but never used.","'auth' is assigned a value but never used.","'chat' is assigned a value but never used.","'modalOpen' is assigned a value but never used.","'newPerson' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'setChat'. Either include it or remove the dependency array.",["641"],"'questionMan' is defined but never used.","'Card' is defined but never used.","'CardBody' is defined but never used.","'CardTitle' is defined but never used.","'CardSubtitle' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"642","fix":"643"},{"desc":"642","fix":"644"},{"desc":"645","fix":"646"},{"desc":"647","fix":"648"},"Update the dependencies array to be: [dispatch, token]",{"range":"649","text":"650"},{"range":"651","text":"650"},"Update the dependencies array to be: [data]",{"range":"652","text":"653"},"Update the dependencies array to be: [person, chats, setChat]",{"range":"654","text":"655"},[1849,1851],"[dispatch, token]",[1974,1976],[566,568],"[data]",[732,747],"[person, chats, setChat]"]